{"ast":null,"code":"// src/components/financeiro/FaturamentoConveniosView.jsx - VERSÃO COM IMPORT CORRIGIDO\nimport React,{useState,useEffect}from'react';import{Box,Button,CircularProgress,Typography,Paper,Grid,Select,MenuItem,FormControl,InputLabel,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,Checkbox,TextField// <-- 1. A IMPORTAÇÃO QUE FALTAVA ESTÁ AQUI\n}from'@mui/material';import{faturamentoService}from'../../services/faturamentoService';// <-- ADICIONADO\nimport{useSnackbar}from'../../contexts/SnackbarContext';// Função para formatar a data para o formato YYYY-MM\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const getYearMonthString=date=>{const year=date.getFullYear();const month=(date.getMonth()+1).toString().padStart(2,'0');return\"\".concat(year,\"-\").concat(month);};export default function FaturamentoConveniosView(){// Estados para controlar o formulário e os dados\nconst[convenios,setConvenios]=useState([]);const[selectedConvenio,setSelectedConvenio]=useState('');const[selectedMonth,setSelectedMonth]=useState(getYearMonthString(new Date()));const[agendamentosFaturaveis,setAgendamentosFaturaveis]=useState([]);const[selectedAgendamentos,setSelectedAgendamentos]=useState([]);const[isLoading,setIsLoading]=useState(false);const{showSnackbar}=useSnackbar();// Efeito para buscar a lista de todos os convênios\nuseEffect(()=>{// AQUI ESTÁ A MUDANÇA: Usando o serviço\nfaturamentoService.getConvenios().then(response=>{setConvenios(response.data);}).catch(error=>{console.error(\"Erro ao buscar convênios:\",error);showSnackbar(\"Não foi possível carregar a lista de convênios.\",'error');});},[showSnackbar]);const handleBuscar=async()=>{if(!selectedConvenio||!selectedMonth){showSnackbar(\"Por favor, selecione um convênio e um mês/ano.\",'warning');return;}setIsLoading(true);setAgendamentosFaturaveis([]);setSelectedAgendamentos([]);const[ano,mes]=selectedMonth.split('-');const params={convenio_id:selectedConvenio,ano,mes};try{// AQUI ESTÁ A MUDANÇA: Usando o serviço\nconst response=await faturamentoService.getAgendamentosFaturaveis(params);setAgendamentosFaturaveis(response.data);if(response.data.length===0){showSnackbar(\"Nenhum agendamento para faturar encontrado para este período.\",'info');}}catch(error){console.error(\"Erro ao buscar agendamentos faturáveis:\",error);showSnackbar(\"Erro ao buscar agendamentos.\",'error');}finally{setIsLoading(false);}};// Funções para gerir a seleção na tabela\nconst handleSelectAll=event=>{if(event.target.checked){const allIds=agendamentosFaturaveis.map(ag=>ag.id);setSelectedAgendamentos(allIds);return;}setSelectedAgendamentos([]);};const handleSelectOne=(event,id)=>{const selectedIndex=selectedAgendamentos.indexOf(id);let newSelected=[];if(selectedIndex===-1){newSelected=newSelected.concat(selectedAgendamentos,id);}else if(selectedIndex>=0){newSelected=selectedAgendamentos.filter(selectedId=>selectedId!==id);}setSelectedAgendamentos(newSelected);};// Função para criar o lote\nconst handleGerarLote=async()=>{if(selectedAgendamentos.length===0){showSnackbar(\"Nenhum agendamento selecionado.\",'warning');return;}setIsLoading(true);try{const payload={convenio_id:selectedConvenio,mes_referencia:selectedMonth,agendamento_ids:selectedAgendamentos};// AQUI ESTÁ A MUDANÇA: Usando o serviço\nconst response=await faturamentoService.gerarLoteFaturamento(payload);const url=window.URL.createObjectURL(new Blob([response.data]));const link=document.createElement('a');link.href=url;// A lógica de extrair o nome do arquivo da resposta é complexa e pode ser mantida\n// porque ela não depende do apiClient, mas sim do objeto de resposta do axios.\n// Por isso, esta parte não muda.\nconst contentDisposition=response.headers['content-disposition'];let filename='faturamento.xml';if(contentDisposition){const filenameMatch=contentDisposition.match(/filename=\"(.+)\"/);if(filenameMatch&&filenameMatch.length===2)filename=filenameMatch[1];}link.setAttribute('download',filename);document.body.appendChild(link);link.click();link.parentNode.removeChild(link);window.URL.revokeObjectURL(url);showSnackbar('Lote gerado e ficheiro descarregado com sucesso!','success');handleBuscar();}catch(error){console.error(\"Erro ao gerar lote de faturamento:\",error);showSnackbar(\"Erro ao gerar lote.\",'error');}finally{setIsLoading(false);}};return/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Faturamento de Conv\\xEAnios\"}),/*#__PURE__*/_jsx(Paper,{sx:{p:2,mb:2},children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,alignItems:\"center\",children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Conv\\xEAnio\"}),/*#__PURE__*/_jsx(Select,{value:selectedConvenio,label:\"Conv\\xEAnio\",onChange:e=>setSelectedConvenio(e.target.value),children:convenios.map(conv=>/*#__PURE__*/_jsx(MenuItem,{value:conv.id,children:conv.nome},conv.id))})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(TextField,{label:\"M\\xEAs/Ano de Refer\\xEAncia\",type:\"month\",value:selectedMonth,onChange:e=>setSelectedMonth(e.target.value),InputLabelProps:{shrink:true},fullWidth:true})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:handleBuscar,disabled:isLoading,children:isLoading?/*#__PURE__*/_jsx(CircularProgress,{size:24}):'Buscar Agendamentos'})})]})}),/*#__PURE__*/_jsx(TableContainer,{component:Paper,children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{padding:\"checkbox\",children:/*#__PURE__*/_jsx(Checkbox,{indeterminate:selectedAgendamentos.length>0&&selectedAgendamentos.length<agendamentosFaturaveis.length,checked:agendamentosFaturaveis.length>0&&selectedAgendamentos.length===agendamentosFaturaveis.length,onChange:handleSelectAll})}),/*#__PURE__*/_jsx(TableCell,{children:\"Data\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Paciente\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Tipo da Consulta\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:isLoading?/*#__PURE__*/_jsx(TableRow,{children:/*#__PURE__*/_jsx(TableCell,{colSpan:4,align:\"center\",children:/*#__PURE__*/_jsx(CircularProgress,{})})}):agendamentosFaturaveis.map(ag=>{const isSelected=selectedAgendamentos.indexOf(ag.id)!==-1;return/*#__PURE__*/_jsxs(TableRow,{hover:true,selected:isSelected,children:[/*#__PURE__*/_jsx(TableCell,{padding:\"checkbox\",children:/*#__PURE__*/_jsx(Checkbox,{checked:isSelected,onChange:event=>handleSelectOne(event,ag.id)})}),/*#__PURE__*/_jsx(TableCell,{children:new Date(ag.data_hora_inicio).toLocaleString('pt-BR',{dateStyle:'short',timeStyle:'short'})}),/*#__PURE__*/_jsx(TableCell,{children:ag.paciente_nome}),/*#__PURE__*/_jsx(TableCell,{children:ag.tipo_consulta})]},ag.id);})})]})}),selectedAgendamentos.length>0&&/*#__PURE__*/_jsx(Box,{sx:{mt:2,display:'flex',justifyContent:'flex-end'},children:/*#__PURE__*/_jsxs(Button,{variant:\"contained\",color:\"success\",onClick:handleGerarLote,children:[\"Gerar Lote de Faturamento (\",selectedAgendamentos.length,\" selecionados)\"]})})]});}","map":{"version":3,"names":["React","useState","useEffect","Box","Button","CircularProgress","Typography","Paper","Grid","Select","MenuItem","FormControl","InputLabel","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Checkbox","TextField","faturamentoService","useSnackbar","jsx","_jsx","jsxs","_jsxs","getYearMonthString","date","year","getFullYear","month","getMonth","toString","padStart","concat","FaturamentoConveniosView","convenios","setConvenios","selectedConvenio","setSelectedConvenio","selectedMonth","setSelectedMonth","Date","agendamentosFaturaveis","setAgendamentosFaturaveis","selectedAgendamentos","setSelectedAgendamentos","isLoading","setIsLoading","showSnackbar","getConvenios","then","response","data","catch","error","console","handleBuscar","ano","mes","split","params","convenio_id","getAgendamentosFaturaveis","length","handleSelectAll","event","target","checked","allIds","map","ag","id","handleSelectOne","selectedIndex","indexOf","newSelected","filter","selectedId","handleGerarLote","payload","mes_referencia","agendamento_ids","gerarLoteFaturamento","url","window","URL","createObjectURL","Blob","link","document","createElement","href","contentDisposition","headers","filename","filenameMatch","match","setAttribute","body","appendChild","click","parentNode","removeChild","revokeObjectURL","children","variant","gutterBottom","sx","p","mb","container","spacing","alignItems","item","xs","md","fullWidth","value","label","onChange","e","conv","nome","type","InputLabelProps","shrink","onClick","disabled","size","component","padding","indeterminate","colSpan","align","isSelected","hover","selected","data_hora_inicio","toLocaleString","dateStyle","timeStyle","paciente_nome","tipo_consulta","mt","display","justifyContent","color"],"sources":["/Users/macmini/Documents/Sistema_Consultorio/frontend/src/components/financeiro/FaturamentoConveniosView.jsx"],"sourcesContent":["// src/components/financeiro/FaturamentoConveniosView.jsx - VERSÃO COM IMPORT CORRIGIDO\n\nimport React, { useState, useEffect } from 'react';\nimport {\n    Box, Button, CircularProgress, Typography, Paper, Grid, Select, MenuItem, FormControl,\n    InputLabel, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Checkbox,\n    TextField // <-- 1. A IMPORTAÇÃO QUE FALTAVA ESTÁ AQUI\n} from '@mui/material';\n\nimport { faturamentoService } from '../../services/faturamentoService'; // <-- ADICIONADO\nimport { useSnackbar } from '../../contexts/SnackbarContext';\n\n// Função para formatar a data para o formato YYYY-MM\nconst getYearMonthString = (date) => {\n    const year = date.getFullYear();\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    return `${year}-${month}`;\n};\n\nexport default function FaturamentoConveniosView() {\n    // Estados para controlar o formulário e os dados\n    const [convenios, setConvenios] = useState([]);\n    const [selectedConvenio, setSelectedConvenio] = useState('');\n    const [selectedMonth, setSelectedMonth] = useState(getYearMonthString(new Date()));\n    const [agendamentosFaturaveis, setAgendamentosFaturaveis] = useState([]);\n    const [selectedAgendamentos, setSelectedAgendamentos] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const { showSnackbar } = useSnackbar();\n\n    // Efeito para buscar a lista de todos os convênios\n    useEffect(() => {\n        // AQUI ESTÁ A MUDANÇA: Usando o serviço\n        faturamentoService.getConvenios()\n            .then(response => { setConvenios(response.data); })\n            .catch(error => {\n                console.error(\"Erro ao buscar convênios:\", error);\n                showSnackbar(\"Não foi possível carregar a lista de convênios.\", 'error');\n            });\n    }, [showSnackbar]);\n\n    const handleBuscar = async () => {\n        if (!selectedConvenio || !selectedMonth) {\n            showSnackbar(\"Por favor, selecione um convênio e um mês/ano.\", 'warning');\n            return;\n        }\n        \n        setIsLoading(true);\n        setAgendamentosFaturaveis([]);\n        setSelectedAgendamentos([]);\n        \n        const [ano, mes] = selectedMonth.split('-');\n        const params = { convenio_id: selectedConvenio, ano, mes };\n\n        try {\n            // AQUI ESTÁ A MUDANÇA: Usando o serviço\n            const response = await faturamentoService.getAgendamentosFaturaveis(params);\n            setAgendamentosFaturaveis(response.data);\n            if (response.data.length === 0) {\n                showSnackbar(\"Nenhum agendamento para faturar encontrado para este período.\", 'info');\n            }\n        } catch (error) {\n            console.error(\"Erro ao buscar agendamentos faturáveis:\", error);\n            showSnackbar(\"Erro ao buscar agendamentos.\", 'error');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n    \n    // Funções para gerir a seleção na tabela\n    const handleSelectAll = (event) => {\n        if (event.target.checked) {\n            const allIds = agendamentosFaturaveis.map((ag) => ag.id);\n            setSelectedAgendamentos(allIds);\n            return;\n        }\n        setSelectedAgendamentos([]);\n    };\n\n    const handleSelectOne = (event, id) => {\n        const selectedIndex = selectedAgendamentos.indexOf(id);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selectedAgendamentos, id);\n        } else if (selectedIndex >= 0) {\n            newSelected = selectedAgendamentos.filter(selectedId => selectedId !== id);\n        }\n        setSelectedAgendamentos(newSelected);\n    };\n\n    // Função para criar o lote\n    const handleGerarLote = async () => {\n    if (selectedAgendamentos.length === 0) {\n        showSnackbar(\"Nenhum agendamento selecionado.\", 'warning');\n        return;\n    }\n\n   setIsLoading(true);\n        try {\n            const payload = {\n                convenio_id: selectedConvenio,\n                mes_referencia: selectedMonth,\n                agendamento_ids: selectedAgendamentos\n            };\n\n            // AQUI ESTÁ A MUDANÇA: Usando o serviço\n            const response = await faturamentoService.gerarLoteFaturamento(payload);\n\n            const url = window.URL.createObjectURL(new Blob([response.data]));\n            const link = document.createElement('a');\n            link.href = url;\n            \n            // A lógica de extrair o nome do arquivo da resposta é complexa e pode ser mantida\n            // porque ela não depende do apiClient, mas sim do objeto de resposta do axios.\n            // Por isso, esta parte não muda.\n            const contentDisposition = response.headers['content-disposition'];\n            let filename = 'faturamento.xml';\n            if (contentDisposition) {\n                const filenameMatch = contentDisposition.match(/filename=\"(.+)\"/);\n                if (filenameMatch && filenameMatch.length === 2)\n                    filename = filenameMatch[1];\n            }\n            link.setAttribute('download', filename);\n            \n            document.body.appendChild(link);\n            link.click();\n            \n            link.parentNode.removeChild(link);\n            window.URL.revokeObjectURL(url);\n\n            showSnackbar('Lote gerado e ficheiro descarregado com sucesso!', 'success');\n            handleBuscar(); \n\n        } catch (error) {\n            console.error(\"Erro ao gerar lote de faturamento:\", error);\n            showSnackbar(\"Erro ao gerar lote.\", 'error');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <Box>\n            <Typography variant=\"h6\" gutterBottom>Faturamento de Convênios</Typography>\n            <Paper sx={{ p: 2, mb: 2 }}>\n                <Grid container spacing={2} alignItems=\"center\">\n                    <Grid item xs={12} md={4}>\n                        <FormControl fullWidth>\n                            <InputLabel>Convênio</InputLabel>\n                            <Select value={selectedConvenio} label=\"Convênio\" onChange={(e) => setSelectedConvenio(e.target.value)}>\n                                {convenios.map((conv) => (\n                                    <MenuItem key={conv.id} value={conv.id}>{conv.nome}</MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                        <TextField\n                            label=\"Mês/Ano de Referência\"\n                            type=\"month\"\n                            value={selectedMonth}\n                            onChange={(e) => setSelectedMonth(e.target.value)}\n                            InputLabelProps={{ shrink: true }}\n                            fullWidth\n                        />\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                        <Button variant=\"contained\" onClick={handleBuscar} disabled={isLoading}>\n                            {isLoading ? <CircularProgress size={24} /> : 'Buscar Agendamentos'}\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Paper>\n\n            <TableContainer component={Paper}>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell padding=\"checkbox\">\n                                <Checkbox\n                                    indeterminate={selectedAgendamentos.length > 0 && selectedAgendamentos.length < agendamentosFaturaveis.length}\n                                    checked={agendamentosFaturaveis.length > 0 && selectedAgendamentos.length === agendamentosFaturaveis.length}\n                                    onChange={handleSelectAll}\n                                />\n                            </TableCell>\n                            <TableCell>Data</TableCell>\n                            <TableCell>Paciente</TableCell>\n                            <TableCell>Tipo da Consulta</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {isLoading ? (\n                            <TableRow><TableCell colSpan={4} align=\"center\"><CircularProgress /></TableCell></TableRow>\n                        ) : agendamentosFaturaveis.map((ag) => {\n                            const isSelected = selectedAgendamentos.indexOf(ag.id) !== -1;\n                            return (\n                                <TableRow key={ag.id} hover selected={isSelected}>\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            checked={isSelected}\n                                            onChange={(event) => handleSelectOne(event, ag.id)}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{new Date(ag.data_hora_inicio).toLocaleString('pt-BR', { dateStyle: 'short', timeStyle: 'short' })}</TableCell>\n                                    <TableCell>{ag.paciente_nome}</TableCell>\n                                    <TableCell>{ag.tipo_consulta}</TableCell>\n                                </TableRow>\n                            );\n                        })}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n\n            {selectedAgendamentos.length > 0 && (\n                <Box sx={{ mt: 2, display: 'flex', justifyContent: 'flex-end' }}>\n                    <Button variant=\"contained\" color=\"success\" onClick={handleGerarLote}>\n                        Gerar Lote de Faturamento ({selectedAgendamentos.length} selecionados)\n                    </Button>\n                </Box>\n            )}\n        </Box>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}