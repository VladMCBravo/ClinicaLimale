{"ast":null,"code":"// src/hooks/useAuth.js - VERSÃO CORRIGIDA COM REDIRECIONAMENTO DINÂMICO\nimport{useState,useMemo,useCallback}from'react';import{useNavigate}from'react-router-dom';import apiClient from'../api/axiosConfig';const getUserFromStorage=()=>{try{const userDataString=sessionStorage.getItem('userData');if(userDataString&&userDataString!=='undefined'){const userData=JSON.parse(userDataString);userData.isAdmin=userData.cargo==='admin';userData.isRecepcao=userData.cargo==='recepcao';userData.isMedico=userData.cargo==='medico';return userData;}}catch(error){console.error(\"Erro ao processar dados do usuário:\",error);sessionStorage.clear();return null;}return null;};export const useAuth=()=>{const navigate=useNavigate();const[user,setUser]=useState(getUserFromStorage());const memoizedUser=useMemo(()=>user,[user]);const login=useCallback(async(username,password)=>{try{const response=await apiClient.post('/auth/login/',{username,password});const{token,user:userData}=response.data;if(token&&userData){sessionStorage.setItem('authToken',token);sessionStorage.setItem('userData',JSON.stringify(userData));// Atualiza o estado interno do hook para refletir o usuário logado\nconst loggedInUser=getUserFromStorage();setUser(loggedInUser);// --- CORREÇÃO APLICADA AQUI ---\n// Verifica o cargo do usuário para decidir para onde navegar\nif(loggedInUser.isMedico){navigate('/');// Navega para o Painel do Médico\n}else{navigate('/painel');// Navega para o Painel da Recepção/Admin\n}return true;// Retorna sucesso\n}return false;}catch(error){console.error(\"Erro no login:\",error);return false;}},[navigate]);const logout=useCallback(async()=>{try{await apiClient.post('/auth/logout/');}catch(error){console.error(\"Erro no logout da API:\",error);}finally{sessionStorage.clear();setUser(null);navigate('/login');}},[navigate]);return{user:memoizedUser,login,logout};};","map":{"version":3,"names":["useState","useMemo","useCallback","useNavigate","apiClient","getUserFromStorage","userDataString","sessionStorage","getItem","userData","JSON","parse","isAdmin","cargo","isRecepcao","isMedico","error","console","clear","useAuth","navigate","user","setUser","memoizedUser","login","username","password","response","post","token","data","setItem","stringify","loggedInUser","logout"],"sources":["/Users/macmini/Documents/Sistema_Consultorio/frontend/src/hooks/useAuth.js"],"sourcesContent":["// src/hooks/useAuth.js - VERSÃO CORRIGIDA COM REDIRECIONAMENTO DINÂMICO\n\nimport { useState, useMemo, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport apiClient from '../api/axiosConfig';\n\nconst getUserFromStorage = () => {\n    try {\n        const userDataString = sessionStorage.getItem('userData');\n        if (userDataString && userDataString !== 'undefined') {\n            const userData = JSON.parse(userDataString);\n            userData.isAdmin = userData.cargo === 'admin';\n            userData.isRecepcao = userData.cargo === 'recepcao';\n            userData.isMedico = userData.cargo === 'medico';\n            return userData;\n        }\n    } catch (error) {\n        console.error(\"Erro ao processar dados do usuário:\", error);\n        sessionStorage.clear();\n        return null;\n    }\n    return null;\n};\n\nexport const useAuth = () => {\n    const navigate = useNavigate();\n    const [user, setUser] = useState(getUserFromStorage());\n\n    const memoizedUser = useMemo(() => user, [user]);\n\n    const login = useCallback(async (username, password) => {\n        try {\n            const response = await apiClient.post('/auth/login/', { username, password });\n            const { token, user: userData } = response.data;\n\n            if (token && userData) {\n                sessionStorage.setItem('authToken', token);\n                sessionStorage.setItem('userData', JSON.stringify(userData));\n                \n                // Atualiza o estado interno do hook para refletir o usuário logado\n                const loggedInUser = getUserFromStorage();\n                setUser(loggedInUser);\n\n                // --- CORREÇÃO APLICADA AQUI ---\n                // Verifica o cargo do usuário para decidir para onde navegar\n                if (loggedInUser.isMedico) {\n                    navigate('/'); // Navega para o Painel do Médico\n                } else {\n                    navigate('/painel'); // Navega para o Painel da Recepção/Admin\n                }\n                \n                return true; // Retorna sucesso\n            }\n            return false;\n        } catch (error) {\n            console.error(\"Erro no login:\", error);\n            return false;\n        }\n    }, [navigate]);\n\n\n    const logout = useCallback(async () => {\n        try {\n            await apiClient.post('/auth/logout/');\n        } catch (error) {\n            console.error(\"Erro no logout da API:\", error);\n        } finally {\n            sessionStorage.clear();\n            setUser(null);\n            navigate('/login');\n        }\n    }, [navigate]);\n\n    return {\n        user: memoizedUser,\n        login,\n        logout,\n    };\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}