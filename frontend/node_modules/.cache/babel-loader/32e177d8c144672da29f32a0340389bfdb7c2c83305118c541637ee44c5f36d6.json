{"ast":null,"code":"'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"className\", \"classes\", \"value\", \"defaultValue\", \"referenceDate\", \"disabled\", \"disableFuture\", \"disablePast\", \"maxDate\", \"minDate\", \"onChange\", \"readOnly\", \"shouldDisableYear\", \"disableHighlightToday\", \"onYearFocus\", \"hasFocus\", \"onFocusedViewChange\", \"yearsOrder\", \"yearsPerRow\", \"timezone\", \"gridLabelId\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { shouldForwardProp } from '@mui/system/createStyled';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport useForkRef from '@mui/utils/useForkRef';\nimport composeClasses from '@mui/utils/composeClasses';\nimport useControlled from '@mui/utils/useControlled';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { YearCalendarButton } from \"./YearCalendarButton.js\";\nimport { useNow } from \"../internals/hooks/useUtils.js\";\nimport { getYearCalendarUtilityClass } from \"./yearCalendarClasses.js\";\nimport { singleItemValueManager } from \"../internals/utils/valueManagers.js\";\nimport { SECTION_TYPE_GRANULARITY } from \"../internals/utils/getDefaultReferenceDate.js\";\nimport { useControlledValue } from \"../internals/hooks/useControlledValue.js\";\nimport { DIALOG_WIDTH, MAX_CALENDAR_HEIGHT } from \"../internals/constants/dimensions.js\";\nimport { usePickerPrivateContext } from \"../internals/hooks/usePickerPrivateContext.js\";\nimport { useApplyDefaultValuesToDateValidationProps } from \"../managers/useDateManager.js\";\nimport { usePickerAdapter } from \"../hooks/usePickerAdapter.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = classes => {\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getYearCalendarUtilityClass, classes);\n};\nfunction useYearCalendarDefaultizedProps(props, name) {\n  var _themeProps$yearsPerR, _themeProps$yearsOrde;\n  const themeProps = useThemeProps({\n    props,\n    name\n  });\n  const validationProps = useApplyDefaultValuesToDateValidationProps(themeProps);\n  return _extends({}, themeProps, validationProps, {\n    yearsPerRow: (_themeProps$yearsPerR = themeProps.yearsPerRow) !== null && _themeProps$yearsPerR !== void 0 ? _themeProps$yearsPerR : 3,\n    yearsOrder: (_themeProps$yearsOrde = themeProps.yearsOrder) !== null && _themeProps$yearsOrde !== void 0 ? _themeProps$yearsOrde : 'asc'\n  });\n}\nconst YearCalendarRoot = styled('div', {\n  name: 'MuiYearCalendar',\n  slot: 'Root',\n  shouldForwardProp: prop => shouldForwardProp(prop) && prop !== 'yearsPerRow'\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  justifyContent: 'space-evenly',\n  rowGap: 12,\n  padding: '6px 0',\n  overflowY: 'auto',\n  height: '100%',\n  width: DIALOG_WIDTH,\n  maxHeight: MAX_CALENDAR_HEIGHT,\n  // avoid padding increasing width over defined\n  boxSizing: 'border-box',\n  position: 'relative',\n  variants: [{\n    props: {\n      yearsPerRow: 3\n    },\n    style: {\n      columnGap: 24\n    }\n  }, {\n    props: {\n      yearsPerRow: 4\n    },\n    style: {\n      columnGap: 0,\n      padding: '0 2px'\n    }\n  }]\n});\nconst YearCalendarButtonFiller = styled('div', {\n  name: 'MuiYearCalendar',\n  slot: 'ButtonFiller'\n})({\n  height: 36,\n  width: 72\n});\n/**\n * Demos:\n *\n * - [DateCalendar](https://mui.com/x/react-date-pickers/date-calendar/)\n *\n * API:\n *\n * - [YearCalendar API](https://mui.com/x/api/date-pickers/year-calendar/)\n */\nexport const YearCalendar = /*#__PURE__*/React.forwardRef(function YearCalendar(inProps, ref) {\n  const props = useYearCalendarDefaultizedProps(inProps, 'MuiYearCalendar');\n  const {\n      autoFocus,\n      className,\n      classes: classesProp,\n      value: valueProp,\n      defaultValue,\n      referenceDate: referenceDateProp,\n      disabled,\n      disableFuture,\n      disablePast,\n      maxDate,\n      minDate,\n      onChange,\n      readOnly,\n      shouldDisableYear,\n      onYearFocus,\n      hasFocus,\n      onFocusedViewChange,\n      yearsOrder,\n      yearsPerRow,\n      timezone: timezoneProp,\n      gridLabelId,\n      slots,\n      slotProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    value,\n    handleValueChange,\n    timezone\n  } = useControlledValue({\n    name: 'YearCalendar',\n    timezone: timezoneProp,\n    value: valueProp,\n    defaultValue,\n    referenceDate: referenceDateProp,\n    onChange,\n    valueManager: singleItemValueManager\n  });\n  const now = useNow(timezone);\n  const isRtl = useRtl();\n  const adapter = usePickerAdapter();\n  const {\n    ownerState\n  } = usePickerPrivateContext();\n  const referenceDate = React.useMemo(() => singleItemValueManager.getInitialReferenceValue({\n    value,\n    adapter,\n    props,\n    timezone,\n    referenceDate: referenceDateProp,\n    granularity: SECTION_TYPE_GRANULARITY.year\n  }), [] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  const classes = useUtilityClasses(classesProp);\n  const todayYear = React.useMemo(() => adapter.getYear(now), [adapter, now]);\n  const selectedYear = React.useMemo(() => {\n    if (value != null) {\n      return adapter.getYear(value);\n    }\n    return null;\n  }, [value, adapter]);\n  const [focusedYear, setFocusedYear] = React.useState(() => selectedYear || adapter.getYear(referenceDate));\n  const [internalHasFocus, setInternalHasFocus] = useControlled({\n    name: 'YearCalendar',\n    state: 'hasFocus',\n    controlled: hasFocus,\n    default: autoFocus !== null && autoFocus !== void 0 ? autoFocus : false\n  });\n  const changeHasFocus = useEventCallback(newHasFocus => {\n    setInternalHasFocus(newHasFocus);\n    if (onFocusedViewChange) {\n      onFocusedViewChange(newHasFocus);\n    }\n  });\n  const isYearDisabled = React.useCallback(dateToValidate => {\n    if (disablePast && adapter.isBeforeYear(dateToValidate, now)) {\n      return true;\n    }\n    if (disableFuture && adapter.isAfterYear(dateToValidate, now)) {\n      return true;\n    }\n    if (minDate && adapter.isBeforeYear(dateToValidate, minDate)) {\n      return true;\n    }\n    if (maxDate && adapter.isAfterYear(dateToValidate, maxDate)) {\n      return true;\n    }\n    if (!shouldDisableYear) {\n      return false;\n    }\n    const yearToValidate = adapter.startOfYear(dateToValidate);\n    return shouldDisableYear(yearToValidate);\n  }, [disableFuture, disablePast, maxDate, minDate, now, shouldDisableYear, adapter]);\n  const handleYearSelection = useEventCallback((event, year) => {\n    if (readOnly) {\n      return;\n    }\n    const newDate = adapter.setYear(value !== null && value !== void 0 ? value : referenceDate, year);\n    handleValueChange(newDate);\n  });\n  const focusYear = useEventCallback(year => {\n    if (!isYearDisabled(adapter.setYear(value !== null && value !== void 0 ? value : referenceDate, year))) {\n      setFocusedYear(year);\n      changeHasFocus(true);\n      onYearFocus === null || onYearFocus === void 0 || onYearFocus(year);\n    }\n  });\n  React.useEffect(() => {\n    setFocusedYear(prevFocusedYear => selectedYear !== null && prevFocusedYear !== selectedYear ? selectedYear : prevFocusedYear);\n  }, [selectedYear]);\n  const verticalDirection = yearsOrder !== 'desc' ? yearsPerRow * 1 : yearsPerRow * -1;\n  const horizontalDirection = isRtl && yearsOrder === 'asc' || !isRtl && yearsOrder === 'desc' ? -1 : 1;\n  const handleKeyDown = useEventCallback((event, year) => {\n    switch (event.key) {\n      case 'ArrowUp':\n        focusYear(year - verticalDirection);\n        event.preventDefault();\n        break;\n      case 'ArrowDown':\n        focusYear(year + verticalDirection);\n        event.preventDefault();\n        break;\n      case 'ArrowLeft':\n        focusYear(year - horizontalDirection);\n        event.preventDefault();\n        break;\n      case 'ArrowRight':\n        focusYear(year + horizontalDirection);\n        event.preventDefault();\n        break;\n      default:\n        break;\n    }\n  });\n  const handleYearFocus = useEventCallback((event, year) => {\n    focusYear(year);\n  });\n  const handleYearBlur = useEventCallback((event, year) => {\n    if (focusedYear === year) {\n      changeHasFocus(false);\n    }\n  });\n  const scrollerRef = React.useRef(null);\n  const handleRef = useForkRef(ref, scrollerRef);\n  React.useEffect(() => {\n    if (autoFocus || scrollerRef.current === null) {\n      return;\n    }\n    const tabbableButton = scrollerRef.current.querySelector('[tabindex=\"0\"]');\n    if (!tabbableButton) {\n      return;\n    }\n\n    // Taken from useScroll in x-data-grid, but vertically centered\n    const offsetHeight = tabbableButton.offsetHeight;\n    const offsetTop = tabbableButton.offsetTop;\n    const clientHeight = scrollerRef.current.clientHeight;\n    const scrollTop = scrollerRef.current.scrollTop;\n    const elementBottom = offsetTop + offsetHeight;\n    if (offsetHeight > clientHeight || offsetTop < scrollTop) {\n      // Button already visible\n      return;\n    }\n    scrollerRef.current.scrollTop = elementBottom - clientHeight / 2 - offsetHeight / 2;\n  }, [autoFocus]);\n  const yearRange = adapter.getYearRange([minDate, maxDate]);\n  if (yearsOrder === 'desc') {\n    yearRange.reverse();\n  }\n  let fillerAmount = yearsPerRow - yearRange.length % yearsPerRow;\n  if (fillerAmount === yearsPerRow) {\n    fillerAmount = 0;\n  }\n  return /*#__PURE__*/_jsxs(YearCalendarRoot, _extends({\n    ref: handleRef,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    role: \"radiogroup\",\n    \"aria-labelledby\": gridLabelId,\n    yearsPerRow: yearsPerRow\n  }, other, {\n    children: [yearRange.map(year => {\n      const yearNumber = adapter.getYear(year);\n      const isSelected = yearNumber === selectedYear;\n      const isDisabled = disabled || isYearDisabled(year);\n      return /*#__PURE__*/_jsx(YearCalendarButton, {\n        selected: isSelected,\n        value: yearNumber,\n        onClick: handleYearSelection,\n        onKeyDown: handleKeyDown,\n        autoFocus: internalHasFocus && yearNumber === focusedYear,\n        disabled: isDisabled,\n        tabIndex: yearNumber === focusedYear && !isDisabled ? 0 : -1,\n        onFocus: handleYearFocus,\n        onBlur: handleYearBlur,\n        \"aria-current\": todayYear === yearNumber ? 'date' : undefined,\n        slots: slots,\n        slotProps: slotProps,\n        classes: classesProp,\n        children: adapter.format(year, 'year')\n      }, adapter.format(year, 'year'));\n    }), Array.from({\n      length: fillerAmount\n    }, (_, index) => /*#__PURE__*/_jsx(YearCalendarButtonFiller, {}, index))]\n  }));\n});\nif (process.env.NODE_ENV !== \"production\") YearCalendar.displayName = \"YearCalendar\";\nprocess.env.NODE_ENV !== \"production\" ? YearCalendar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  autoFocus: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  /**\n   * The default selected value.\n   * Used when the component is not controlled.\n   */\n  defaultValue: PropTypes.object,\n  /**\n   * If `true`, the component is disabled.\n   * When disabled, the value cannot be changed and no interaction is possible.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, disable values after the current date for date components, time for time components and both for date time components.\n   * @default false\n   */\n  disableFuture: PropTypes.bool,\n  /**\n   * If `true`, today's date is rendering without highlighting with circle.\n   * @default false\n   */\n  disableHighlightToday: PropTypes.bool,\n  /**\n   * If `true`, disable values before the current date for date components, time for time components and both for date time components.\n   * @default false\n   */\n  disablePast: PropTypes.bool,\n  gridLabelId: PropTypes.string,\n  hasFocus: PropTypes.bool,\n  /**\n   * Maximal selectable date.\n   * @default 2099-12-31\n   */\n  maxDate: PropTypes.object,\n  /**\n   * Minimal selectable date.\n   * @default 1900-01-01\n   */\n  minDate: PropTypes.object,\n  /**\n   * Callback fired when the value changes.\n   * @param {PickerValidDate} value The new value.\n   */\n  onChange: PropTypes.func,\n  onFocusedViewChange: PropTypes.func,\n  onYearFocus: PropTypes.func,\n  /**\n   * If `true`, the component is read-only.\n   * When read-only, the value cannot be changed but the user can interact with the interface.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * The date used to generate the new value when both `value` and `defaultValue` are empty.\n   * @default The closest valid year using the validation props, except callbacks such as `shouldDisableYear`.\n   */\n  referenceDate: PropTypes.object,\n  /**\n   * Disable specific year.\n   * @param {PickerValidDate} year The year to test.\n   * @returns {boolean} If `true`, the year will be disabled.\n   */\n  shouldDisableYear: PropTypes.func,\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable component slots.\n   * @default {}\n   */\n  slots: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Choose which timezone to use for the value.\n   * Example: \"default\", \"system\", \"UTC\", \"America/New_York\".\n   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.\n   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.\n   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.\n   */\n  timezone: PropTypes.string,\n  /**\n   * The selected value.\n   * Used when the component is controlled.\n   */\n  value: PropTypes.object,\n  /**\n   * Years are displayed in ascending (chronological) order by default.\n   * If `desc`, years are displayed in descending order.\n   * @default 'asc'\n   */\n  yearsOrder: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Years rendered per row.\n   * @default 3\n   */\n  yearsPerRow: PropTypes.oneOf([3, 4])\n} : void 0;","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","clsx","useRtl","shouldForwardProp","styled","useThemeProps","useForkRef","composeClasses","useControlled","useEventCallback","YearCalendarButton","useNow","getYearCalendarUtilityClass","singleItemValueManager","SECTION_TYPE_GRANULARITY","useControlledValue","DIALOG_WIDTH","MAX_CALENDAR_HEIGHT","usePickerPrivateContext","useApplyDefaultValuesToDateValidationProps","usePickerAdapter","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","classes","slots","root","useYearCalendarDefaultizedProps","props","name","_themeProps$yearsPerR","_themeProps$yearsOrde","themeProps","validationProps","yearsPerRow","yearsOrder","YearCalendarRoot","slot","prop","display","flexWrap","justifyContent","rowGap","padding","overflowY","height","width","maxHeight","boxSizing","position","variants","style","columnGap","YearCalendarButtonFiller","YearCalendar","forwardRef","inProps","ref","autoFocus","className","classesProp","value","valueProp","defaultValue","referenceDate","referenceDateProp","disabled","disableFuture","disablePast","maxDate","minDate","onChange","readOnly","shouldDisableYear","onYearFocus","hasFocus","onFocusedViewChange","timezone","timezoneProp","gridLabelId","slotProps","other","handleValueChange","valueManager","now","isRtl","adapter","ownerState","useMemo","getInitialReferenceValue","granularity","year","todayYear","getYear","selectedYear","focusedYear","setFocusedYear","useState","internalHasFocus","setInternalHasFocus","state","controlled","default","changeHasFocus","newHasFocus","isYearDisabled","useCallback","dateToValidate","isBeforeYear","isAfterYear","yearToValidate","startOfYear","handleYearSelection","event","newDate","setYear","focusYear","useEffect","prevFocusedYear","verticalDirection","horizontalDirection","handleKeyDown","key","preventDefault","handleYearFocus","handleYearBlur","scrollerRef","useRef","handleRef","current","tabbableButton","querySelector","offsetHeight","offsetTop","clientHeight","scrollTop","elementBottom","yearRange","getYearRange","reverse","fillerAmount","length","role","children","map","yearNumber","isSelected","isDisabled","selected","onClick","onKeyDown","tabIndex","onFocus","onBlur","undefined","format","Array","from","_","index","process","env","NODE_ENV","displayName","propTypes","bool","object","string","disableHighlightToday","func","sx","oneOfType","arrayOf","oneOf"],"sources":["/Users/macmini/Documents/Sistema_Consultorio/frontend/node_modules/@mui/x-date-pickers/esm/YearCalendar/YearCalendar.js"],"sourcesContent":["'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"className\", \"classes\", \"value\", \"defaultValue\", \"referenceDate\", \"disabled\", \"disableFuture\", \"disablePast\", \"maxDate\", \"minDate\", \"onChange\", \"readOnly\", \"shouldDisableYear\", \"disableHighlightToday\", \"onYearFocus\", \"hasFocus\", \"onFocusedViewChange\", \"yearsOrder\", \"yearsPerRow\", \"timezone\", \"gridLabelId\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { shouldForwardProp } from '@mui/system/createStyled';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport useForkRef from '@mui/utils/useForkRef';\nimport composeClasses from '@mui/utils/composeClasses';\nimport useControlled from '@mui/utils/useControlled';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { YearCalendarButton } from \"./YearCalendarButton.js\";\nimport { useNow } from \"../internals/hooks/useUtils.js\";\nimport { getYearCalendarUtilityClass } from \"./yearCalendarClasses.js\";\nimport { singleItemValueManager } from \"../internals/utils/valueManagers.js\";\nimport { SECTION_TYPE_GRANULARITY } from \"../internals/utils/getDefaultReferenceDate.js\";\nimport { useControlledValue } from \"../internals/hooks/useControlledValue.js\";\nimport { DIALOG_WIDTH, MAX_CALENDAR_HEIGHT } from \"../internals/constants/dimensions.js\";\nimport { usePickerPrivateContext } from \"../internals/hooks/usePickerPrivateContext.js\";\nimport { useApplyDefaultValuesToDateValidationProps } from \"../managers/useDateManager.js\";\nimport { usePickerAdapter } from \"../hooks/usePickerAdapter.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = classes => {\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getYearCalendarUtilityClass, classes);\n};\nfunction useYearCalendarDefaultizedProps(props, name) {\n  const themeProps = useThemeProps({\n    props,\n    name\n  });\n  const validationProps = useApplyDefaultValuesToDateValidationProps(themeProps);\n  return _extends({}, themeProps, validationProps, {\n    yearsPerRow: themeProps.yearsPerRow ?? 3,\n    yearsOrder: themeProps.yearsOrder ?? 'asc'\n  });\n}\nconst YearCalendarRoot = styled('div', {\n  name: 'MuiYearCalendar',\n  slot: 'Root',\n  shouldForwardProp: prop => shouldForwardProp(prop) && prop !== 'yearsPerRow'\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  justifyContent: 'space-evenly',\n  rowGap: 12,\n  padding: '6px 0',\n  overflowY: 'auto',\n  height: '100%',\n  width: DIALOG_WIDTH,\n  maxHeight: MAX_CALENDAR_HEIGHT,\n  // avoid padding increasing width over defined\n  boxSizing: 'border-box',\n  position: 'relative',\n  variants: [{\n    props: {\n      yearsPerRow: 3\n    },\n    style: {\n      columnGap: 24\n    }\n  }, {\n    props: {\n      yearsPerRow: 4\n    },\n    style: {\n      columnGap: 0,\n      padding: '0 2px'\n    }\n  }]\n});\nconst YearCalendarButtonFiller = styled('div', {\n  name: 'MuiYearCalendar',\n  slot: 'ButtonFiller'\n})({\n  height: 36,\n  width: 72\n});\n/**\n * Demos:\n *\n * - [DateCalendar](https://mui.com/x/react-date-pickers/date-calendar/)\n *\n * API:\n *\n * - [YearCalendar API](https://mui.com/x/api/date-pickers/year-calendar/)\n */\nexport const YearCalendar = /*#__PURE__*/React.forwardRef(function YearCalendar(inProps, ref) {\n  const props = useYearCalendarDefaultizedProps(inProps, 'MuiYearCalendar');\n  const {\n      autoFocus,\n      className,\n      classes: classesProp,\n      value: valueProp,\n      defaultValue,\n      referenceDate: referenceDateProp,\n      disabled,\n      disableFuture,\n      disablePast,\n      maxDate,\n      minDate,\n      onChange,\n      readOnly,\n      shouldDisableYear,\n      onYearFocus,\n      hasFocus,\n      onFocusedViewChange,\n      yearsOrder,\n      yearsPerRow,\n      timezone: timezoneProp,\n      gridLabelId,\n      slots,\n      slotProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    value,\n    handleValueChange,\n    timezone\n  } = useControlledValue({\n    name: 'YearCalendar',\n    timezone: timezoneProp,\n    value: valueProp,\n    defaultValue,\n    referenceDate: referenceDateProp,\n    onChange,\n    valueManager: singleItemValueManager\n  });\n  const now = useNow(timezone);\n  const isRtl = useRtl();\n  const adapter = usePickerAdapter();\n  const {\n    ownerState\n  } = usePickerPrivateContext();\n  const referenceDate = React.useMemo(() => singleItemValueManager.getInitialReferenceValue({\n    value,\n    adapter,\n    props,\n    timezone,\n    referenceDate: referenceDateProp,\n    granularity: SECTION_TYPE_GRANULARITY.year\n  }), [] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  const classes = useUtilityClasses(classesProp);\n  const todayYear = React.useMemo(() => adapter.getYear(now), [adapter, now]);\n  const selectedYear = React.useMemo(() => {\n    if (value != null) {\n      return adapter.getYear(value);\n    }\n    return null;\n  }, [value, adapter]);\n  const [focusedYear, setFocusedYear] = React.useState(() => selectedYear || adapter.getYear(referenceDate));\n  const [internalHasFocus, setInternalHasFocus] = useControlled({\n    name: 'YearCalendar',\n    state: 'hasFocus',\n    controlled: hasFocus,\n    default: autoFocus ?? false\n  });\n  const changeHasFocus = useEventCallback(newHasFocus => {\n    setInternalHasFocus(newHasFocus);\n    if (onFocusedViewChange) {\n      onFocusedViewChange(newHasFocus);\n    }\n  });\n  const isYearDisabled = React.useCallback(dateToValidate => {\n    if (disablePast && adapter.isBeforeYear(dateToValidate, now)) {\n      return true;\n    }\n    if (disableFuture && adapter.isAfterYear(dateToValidate, now)) {\n      return true;\n    }\n    if (minDate && adapter.isBeforeYear(dateToValidate, minDate)) {\n      return true;\n    }\n    if (maxDate && adapter.isAfterYear(dateToValidate, maxDate)) {\n      return true;\n    }\n    if (!shouldDisableYear) {\n      return false;\n    }\n    const yearToValidate = adapter.startOfYear(dateToValidate);\n    return shouldDisableYear(yearToValidate);\n  }, [disableFuture, disablePast, maxDate, minDate, now, shouldDisableYear, adapter]);\n  const handleYearSelection = useEventCallback((event, year) => {\n    if (readOnly) {\n      return;\n    }\n    const newDate = adapter.setYear(value ?? referenceDate, year);\n    handleValueChange(newDate);\n  });\n  const focusYear = useEventCallback(year => {\n    if (!isYearDisabled(adapter.setYear(value ?? referenceDate, year))) {\n      setFocusedYear(year);\n      changeHasFocus(true);\n      onYearFocus?.(year);\n    }\n  });\n  React.useEffect(() => {\n    setFocusedYear(prevFocusedYear => selectedYear !== null && prevFocusedYear !== selectedYear ? selectedYear : prevFocusedYear);\n  }, [selectedYear]);\n  const verticalDirection = yearsOrder !== 'desc' ? yearsPerRow * 1 : yearsPerRow * -1;\n  const horizontalDirection = isRtl && yearsOrder === 'asc' || !isRtl && yearsOrder === 'desc' ? -1 : 1;\n  const handleKeyDown = useEventCallback((event, year) => {\n    switch (event.key) {\n      case 'ArrowUp':\n        focusYear(year - verticalDirection);\n        event.preventDefault();\n        break;\n      case 'ArrowDown':\n        focusYear(year + verticalDirection);\n        event.preventDefault();\n        break;\n      case 'ArrowLeft':\n        focusYear(year - horizontalDirection);\n        event.preventDefault();\n        break;\n      case 'ArrowRight':\n        focusYear(year + horizontalDirection);\n        event.preventDefault();\n        break;\n      default:\n        break;\n    }\n  });\n  const handleYearFocus = useEventCallback((event, year) => {\n    focusYear(year);\n  });\n  const handleYearBlur = useEventCallback((event, year) => {\n    if (focusedYear === year) {\n      changeHasFocus(false);\n    }\n  });\n  const scrollerRef = React.useRef(null);\n  const handleRef = useForkRef(ref, scrollerRef);\n  React.useEffect(() => {\n    if (autoFocus || scrollerRef.current === null) {\n      return;\n    }\n    const tabbableButton = scrollerRef.current.querySelector('[tabindex=\"0\"]');\n    if (!tabbableButton) {\n      return;\n    }\n\n    // Taken from useScroll in x-data-grid, but vertically centered\n    const offsetHeight = tabbableButton.offsetHeight;\n    const offsetTop = tabbableButton.offsetTop;\n    const clientHeight = scrollerRef.current.clientHeight;\n    const scrollTop = scrollerRef.current.scrollTop;\n    const elementBottom = offsetTop + offsetHeight;\n    if (offsetHeight > clientHeight || offsetTop < scrollTop) {\n      // Button already visible\n      return;\n    }\n    scrollerRef.current.scrollTop = elementBottom - clientHeight / 2 - offsetHeight / 2;\n  }, [autoFocus]);\n  const yearRange = adapter.getYearRange([minDate, maxDate]);\n  if (yearsOrder === 'desc') {\n    yearRange.reverse();\n  }\n  let fillerAmount = yearsPerRow - yearRange.length % yearsPerRow;\n  if (fillerAmount === yearsPerRow) {\n    fillerAmount = 0;\n  }\n  return /*#__PURE__*/_jsxs(YearCalendarRoot, _extends({\n    ref: handleRef,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    role: \"radiogroup\",\n    \"aria-labelledby\": gridLabelId,\n    yearsPerRow: yearsPerRow\n  }, other, {\n    children: [yearRange.map(year => {\n      const yearNumber = adapter.getYear(year);\n      const isSelected = yearNumber === selectedYear;\n      const isDisabled = disabled || isYearDisabled(year);\n      return /*#__PURE__*/_jsx(YearCalendarButton, {\n        selected: isSelected,\n        value: yearNumber,\n        onClick: handleYearSelection,\n        onKeyDown: handleKeyDown,\n        autoFocus: internalHasFocus && yearNumber === focusedYear,\n        disabled: isDisabled,\n        tabIndex: yearNumber === focusedYear && !isDisabled ? 0 : -1,\n        onFocus: handleYearFocus,\n        onBlur: handleYearBlur,\n        \"aria-current\": todayYear === yearNumber ? 'date' : undefined,\n        slots: slots,\n        slotProps: slotProps,\n        classes: classesProp,\n        children: adapter.format(year, 'year')\n      }, adapter.format(year, 'year'));\n    }), Array.from({\n      length: fillerAmount\n    }, (_, index) => /*#__PURE__*/_jsx(YearCalendarButtonFiller, {}, index))]\n  }));\n});\nif (process.env.NODE_ENV !== \"production\") YearCalendar.displayName = \"YearCalendar\";\nprocess.env.NODE_ENV !== \"production\" ? YearCalendar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  autoFocus: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  /**\n   * The default selected value.\n   * Used when the component is not controlled.\n   */\n  defaultValue: PropTypes.object,\n  /**\n   * If `true`, the component is disabled.\n   * When disabled, the value cannot be changed and no interaction is possible.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, disable values after the current date for date components, time for time components and both for date time components.\n   * @default false\n   */\n  disableFuture: PropTypes.bool,\n  /**\n   * If `true`, today's date is rendering without highlighting with circle.\n   * @default false\n   */\n  disableHighlightToday: PropTypes.bool,\n  /**\n   * If `true`, disable values before the current date for date components, time for time components and both for date time components.\n   * @default false\n   */\n  disablePast: PropTypes.bool,\n  gridLabelId: PropTypes.string,\n  hasFocus: PropTypes.bool,\n  /**\n   * Maximal selectable date.\n   * @default 2099-12-31\n   */\n  maxDate: PropTypes.object,\n  /**\n   * Minimal selectable date.\n   * @default 1900-01-01\n   */\n  minDate: PropTypes.object,\n  /**\n   * Callback fired when the value changes.\n   * @param {PickerValidDate} value The new value.\n   */\n  onChange: PropTypes.func,\n  onFocusedViewChange: PropTypes.func,\n  onYearFocus: PropTypes.func,\n  /**\n   * If `true`, the component is read-only.\n   * When read-only, the value cannot be changed but the user can interact with the interface.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * The date used to generate the new value when both `value` and `defaultValue` are empty.\n   * @default The closest valid year using the validation props, except callbacks such as `shouldDisableYear`.\n   */\n  referenceDate: PropTypes.object,\n  /**\n   * Disable specific year.\n   * @param {PickerValidDate} year The year to test.\n   * @returns {boolean} If `true`, the year will be disabled.\n   */\n  shouldDisableYear: PropTypes.func,\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable component slots.\n   * @default {}\n   */\n  slots: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Choose which timezone to use for the value.\n   * Example: \"default\", \"system\", \"UTC\", \"America/New_York\".\n   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.\n   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.\n   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.\n   */\n  timezone: PropTypes.string,\n  /**\n   * The selected value.\n   * Used when the component is controlled.\n   */\n  value: PropTypes.object,\n  /**\n   * Years are displayed in ascending (chronological) order by default.\n   * If `desc`, years are displayed in descending order.\n   * @default 'asc'\n   */\n  yearsOrder: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Years rendered per row.\n   * @default 3\n   */\n  yearsPerRow: PropTypes.oneOf([3, 4])\n} : void 0;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}