{"ast":null,"code":"import _objectSpread from\"/Users/macmini/Documents/Sistema_Consultorio/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// src/pages/TelemedicinaPage.jsx - VERSÃO COMPLETA E FUNCIONAL\nimport React,{useState,useEffect,useCallback}from'react';import{Box,Paper,Typography,Button,CircularProgress}from'@mui/material';import apiClient from'../api/axiosConfig';import{useSnackbar}from'../contexts/SnackbarContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function TelemedicinaPage(){const[consultas,setConsultas]=useState([]);const[isLoading,setIsLoading]=useState(true);const[criandoSalaId,setCriandoSalaId]=useState(null);// NOVO: Para mostrar loading no botão certo\nconst{showSnackbar}=useSnackbar();// Função para buscar as consultas da API\nconst fetchConsultas=useCallback(()=>{setIsLoading(true);apiClient.get('/agendamentos/telemedicina/').then(response=>{// --- A CORREÇÃO CRÍTICA ESTÁ AQUI ---\n// Nós filtramos a lista ANTES de guardá-la no estado.\nconst consultasAtivas=response.data.filter(consulta=>consulta.status!=='Cancelado');setConsultas(consultasAtivas);}).catch(err=>{console.error(\"Erro ao buscar consultas de telemedicina:\",err);showSnackbar('Erro ao carregar consultas.','error');}).finally(()=>setIsLoading(false));},[showSnackbar]);// Busca as consultas quando o componente monta\nuseEffect(()=>{fetchConsultas();},[fetchConsultas]);// ALTERADO: Função para criar a sala agora atualiza a interface\nconst handleCriarSala=agendamentoId=>{setCriandoSalaId(agendamentoId);// Ativa o loading no botão específico\napiClient.post(\"/agendamentos/\".concat(agendamentoId,\"/criar-telemedicina/\")).then(response=>{showSnackbar('Sala criada com sucesso!','success');// NOVO: Atualiza a lista de consultas em tempo real\n// Encontramos a consulta que foi atualizada e adicionamos o link nela\nsetConsultas(prevConsultas=>prevConsultas.map(consulta=>consulta.id===agendamentoId?_objectSpread(_objectSpread({},consulta),{},{link_telemedicina:response.data.roomUrl}):consulta));}).catch(err=>{console.error(\"Erro ao criar sala:\",err);showSnackbar('Erro ao criar a sala de telemedicina.','error');}).finally(()=>{setCriandoSalaId(null);// Desativa o loading\n});};// NOVO: Função para copiar o link para a área de transferência\nconst handleCopiarLink=link=>{navigator.clipboard.writeText(link);showSnackbar('Link copiado para a área de transferência!','info');};if(isLoading){return/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',mt:4},children:/*#__PURE__*/_jsx(CircularProgress,{})});}return/*#__PURE__*/_jsxs(Paper,{sx:{p:2,margin:'auto'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,children:\"Consultas de Telemedicina\"}),/*#__PURE__*/_jsxs(\"table\",{width:\"100%\",style:{borderCollapse:'collapse',marginTop:'20px'},children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{style:{borderBottom:'1px solid #ddd'},children:[/*#__PURE__*/_jsx(\"th\",{align:\"left\",style:{padding:'8px'},children:\"Data e Hora\"}),/*#__PURE__*/_jsx(\"th\",{align:\"left\",style:{padding:'8px'},children:\"Paciente\"}),/*#__PURE__*/_jsx(\"th\",{align:\"left\",style:{padding:'8px'},children:\"Status\"}),/*#__PURE__*/_jsx(\"th\",{align:\"left\",style:{padding:'8px'},children:\"A\\xE7\\xF5es\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:consultas.length===0?/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{colSpan:\"4\",align:\"center\",style:{padding:'16px'},children:\"Nenhuma consulta de telemedicina encontrada.\"})}):consultas.map(consulta=>/*#__PURE__*/_jsxs(\"tr\",{style:{borderBottom:'1px solid #eee'},children:[/*#__PURE__*/_jsx(\"td\",{style:{padding:'8px'},children:new Date(consulta.data_hora_inicio).toLocaleString('pt-BR')}),/*#__PURE__*/_jsx(\"td\",{style:{padding:'8px'},children:consulta.paciente_nome}),/*#__PURE__*/_jsx(\"td\",{style:{padding:'8px'},children:consulta.status}),/*#__PURE__*/_jsx(\"td\",{style:{padding:'8px'},children:consulta.link_telemedicina?/*#__PURE__*/// Se o link JÁ EXISTE, mostra os botões de ação\n_jsxs(Box,{sx:{display:'flex',gap:1},children:[/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:()=>window.open(consulta.link_telemedicina,'_blank'),children:\"Entrar na Sala\"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:()=>handleCopiarLink(consulta.link_telemedicina),children:\"Copiar Link\"})]}):/*#__PURE__*/// Se o link NÃO EXISTE, mostra o botão para criar\n_jsx(Button,{variant:\"contained\",onClick:()=>handleCriarSala(consulta.id),disabled:criandoSalaId===consulta.id,children:criandoSalaId===consulta.id?/*#__PURE__*/_jsx(CircularProgress,{size:24}):'Criar Sala'})})]},consulta.id))})]})]});}","map":{"version":3,"names":["React","useState","useEffect","useCallback","Box","Paper","Typography","Button","CircularProgress","apiClient","useSnackbar","jsx","_jsx","jsxs","_jsxs","TelemedicinaPage","consultas","setConsultas","isLoading","setIsLoading","criandoSalaId","setCriandoSalaId","showSnackbar","fetchConsultas","get","then","response","consultasAtivas","data","filter","consulta","status","catch","err","console","error","finally","handleCriarSala","agendamentoId","post","concat","prevConsultas","map","id","_objectSpread","link_telemedicina","roomUrl","handleCopiarLink","link","navigator","clipboard","writeText","sx","display","justifyContent","mt","children","p","margin","variant","gutterBottom","width","style","borderCollapse","marginTop","borderBottom","align","padding","length","colSpan","Date","data_hora_inicio","toLocaleString","paciente_nome","gap","onClick","window","open","disabled","size"],"sources":["/Users/macmini/Documents/Sistema_Consultorio/frontend/src/pages/TelemedicinaPage.jsx"],"sourcesContent":["// src/pages/TelemedicinaPage.jsx - VERSÃO COMPLETA E FUNCIONAL\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Box, Paper, Typography, Button, CircularProgress } from '@mui/material';\nimport apiClient from '../api/axiosConfig';\nimport { useSnackbar } from '../contexts/SnackbarContext';\n\nexport default function TelemedicinaPage() {\n  const [consultas, setConsultas] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [criandoSalaId, setCriandoSalaId] = useState(null); // NOVO: Para mostrar loading no botão certo\n  const { showSnackbar } = useSnackbar();\n\n  // Função para buscar as consultas da API\n  const fetchConsultas = useCallback(() => {\n    setIsLoading(true);\n    apiClient.get('/agendamentos/telemedicina/')\n      .then(response => {\n        // --- A CORREÇÃO CRÍTICA ESTÁ AQUI ---\n        // Nós filtramos a lista ANTES de guardá-la no estado.\n        const consultasAtivas = response.data.filter(consulta => consulta.status !== 'Cancelado');\n        setConsultas(consultasAtivas);\n      })\n      .catch(err => {\n        console.error(\"Erro ao buscar consultas de telemedicina:\", err);\n        showSnackbar('Erro ao carregar consultas.', 'error');\n      })\n      .finally(() => setIsLoading(false));\n  }, [showSnackbar]);\n\n  // Busca as consultas quando o componente monta\n  useEffect(() => {\n    fetchConsultas();\n  }, [fetchConsultas]);\n\n\n  // ALTERADO: Função para criar a sala agora atualiza a interface\n  const handleCriarSala = (agendamentoId) => {\n    setCriandoSalaId(agendamentoId); // Ativa o loading no botão específico\n    \n    apiClient.post(`/agendamentos/${agendamentoId}/criar-telemedicina/`)\n      .then(response => {\n        showSnackbar('Sala criada com sucesso!', 'success');\n        \n        // NOVO: Atualiza a lista de consultas em tempo real\n        // Encontramos a consulta que foi atualizada e adicionamos o link nela\n        setConsultas(prevConsultas => \n          prevConsultas.map(consulta => \n            consulta.id === agendamentoId \n              ? { ...consulta, link_telemedicina: response.data.roomUrl } \n              : consulta\n          )\n        );\n      })\n      .catch(err => {\n        console.error(\"Erro ao criar sala:\", err);\n        showSnackbar('Erro ao criar a sala de telemedicina.', 'error');\n      })\n      .finally(() => {\n        setCriandoSalaId(null); // Desativa o loading\n      });\n  };\n\n  // NOVO: Função para copiar o link para a área de transferência\n  const handleCopiarLink = (link) => {\n    navigator.clipboard.writeText(link);\n    showSnackbar('Link copiado para a área de transferência!', 'info');\n  };\n\n  if (isLoading) {\n    return <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}><CircularProgress /></Box>;\n  }\n\n  return (\n    <Paper sx={{ p: 2, margin: 'auto' }}>\n      <Typography variant=\"h5\" gutterBottom>\n        Consultas de Telemedicina\n      </Typography>\n      \n      {/* Tabela para listar as consultas */}\n      <table width=\"100%\" style={{ borderCollapse: 'collapse', marginTop: '20px' }}>\n        <thead>\n          <tr style={{ borderBottom: '1px solid #ddd' }}>\n            <th align=\"left\" style={{ padding: '8px' }}>Data e Hora</th>\n            <th align=\"left\" style={{ padding: '8px' }}>Paciente</th>\n            <th align=\"left\" style={{ padding: '8px' }}>Status</th>\n            <th align=\"left\" style={{ padding: '8px' }}>Ações</th>\n          </tr>\n        </thead>\n        <tbody>\n          {consultas.length === 0 ? (\n            <tr><td colSpan=\"4\" align=\"center\" style={{ padding: '16px' }}>Nenhuma consulta de telemedicina encontrada.</td></tr>\n          ) : (\n            consultas.map(consulta => (\n              <tr key={consulta.id} style={{ borderBottom: '1px solid #eee' }}>\n                <td style={{ padding: '8px' }}>{new Date(consulta.data_hora_inicio).toLocaleString('pt-BR')}</td>\n                <td style={{ padding: '8px' }}>{consulta.paciente_nome}</td>\n                <td style={{ padding: '8px' }}>{consulta.status}</td>\n                <td style={{ padding: '8px' }}>\n                  \n                  {/* ALTERADO: Lógica condicional para os botões */}\n                  {consulta.link_telemedicina ? (\n                    // Se o link JÁ EXISTE, mostra os botões de ação\n                    <Box sx={{ display: 'flex', gap: 1 }}>\n                      <Button variant=\"contained\" onClick={() => window.open(consulta.link_telemedicina, '_blank')}>\n                        Entrar na Sala\n                      </Button>\n                      <Button variant=\"outlined\" onClick={() => handleCopiarLink(consulta.link_telemedicina)}>\n                        Copiar Link\n                      </Button>\n                    </Box>\n                  ) : (\n                    // Se o link NÃO EXISTE, mostra o botão para criar\n                    <Button\n                      variant=\"contained\"\n                      onClick={() => handleCriarSala(consulta.id)}\n                      disabled={criandoSalaId === consulta.id}\n                    >\n                      {criandoSalaId === consulta.id ? <CircularProgress size={24} /> : 'Criar Sala'}\n                    </Button>\n                  )}\n                </td>\n              </tr>\n            ))\n          )}\n        </tbody>\n      </table>\n    </Paper>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}