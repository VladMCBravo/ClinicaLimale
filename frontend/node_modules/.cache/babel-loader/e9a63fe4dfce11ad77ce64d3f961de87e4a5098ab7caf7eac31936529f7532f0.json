{"ast":null,"code":"import { refineProps, guid, parseBusinessHours, createEventUi, identity, parseClassNames, EventImpl, Splitter, parseFieldSpecs, BaseComponent, memoizeObjArg, ViewContextType, ContentContainer, formatDayString, memoize, NowTimer, TableDateCell, TableDowCell, computeFallbackHeaderFormat, mapHash, flexibleCompare, compareByFieldSpecs } from '@fullcalendar/core/internal.js';\nimport { createElement, Fragment } from '@fullcalendar/core/preact.js';\nconst PRIVATE_ID_PREFIX = '_fc:';\nconst RESOURCE_REFINERS = {\n  id: String,\n  parentId: String,\n  children: identity,\n  title: String,\n  businessHours: identity,\n  extendedProps: identity,\n  // event-ui\n  eventEditable: Boolean,\n  eventStartEditable: Boolean,\n  eventDurationEditable: Boolean,\n  eventConstraint: identity,\n  eventOverlap: Boolean,\n  eventAllow: identity,\n  eventClassNames: parseClassNames,\n  eventBackgroundColor: String,\n  eventBorderColor: String,\n  eventTextColor: String,\n  eventColor: String\n};\n/*\nneeds a full store so that it can populate children too\n*/\nfunction parseResource(raw) {\n  let parentId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  let store = arguments.length > 2 ? arguments[2] : undefined;\n  let context = arguments.length > 3 ? arguments[3] : undefined;\n  let {\n    refined,\n    extra\n  } = refineProps(raw, RESOURCE_REFINERS);\n  let resource = {\n    id: refined.id || PRIVATE_ID_PREFIX + guid(),\n    parentId: refined.parentId || parentId,\n    title: refined.title || '',\n    businessHours: refined.businessHours ? parseBusinessHours(refined.businessHours, context) : null,\n    ui: createEventUi({\n      editable: refined.eventEditable,\n      startEditable: refined.eventStartEditable,\n      durationEditable: refined.eventDurationEditable,\n      constraint: refined.eventConstraint,\n      overlap: refined.eventOverlap,\n      allow: refined.eventAllow,\n      classNames: refined.eventClassNames,\n      backgroundColor: refined.eventBackgroundColor,\n      borderColor: refined.eventBorderColor,\n      textColor: refined.eventTextColor,\n      color: refined.eventColor\n    }, context),\n    extendedProps: Object.assign(Object.assign({}, extra), refined.extendedProps)\n  };\n  // help out ResourceApi from having user modify props\n  Object.freeze(resource.ui.classNames);\n  Object.freeze(resource.extendedProps);\n  if (store[resource.id]) ;else {\n    store[resource.id] = resource;\n    if (refined.children) {\n      for (let childInput of refined.children) {\n        parseResource(childInput, resource.id, store, context);\n      }\n    }\n  }\n  return resource;\n}\n/*\nTODO: use this in more places\n*/\nfunction getPublicId(id) {\n  if (id.indexOf(PRIVATE_ID_PREFIX) === 0) {\n    return '';\n  }\n  return id;\n}\nclass ResourceApi {\n  constructor(_context, _resource) {\n    this._context = _context;\n    this._resource = _resource;\n  }\n  setProp(name, value) {\n    let oldResource = this._resource;\n    this._context.dispatch({\n      type: 'SET_RESOURCE_PROP',\n      resourceId: oldResource.id,\n      propName: name,\n      propValue: value\n    });\n    this.sync(oldResource);\n  }\n  setExtendedProp(name, value) {\n    let oldResource = this._resource;\n    this._context.dispatch({\n      type: 'SET_RESOURCE_EXTENDED_PROP',\n      resourceId: oldResource.id,\n      propName: name,\n      propValue: value\n    });\n    this.sync(oldResource);\n  }\n  sync(oldResource) {\n    let context = this._context;\n    let resourceId = oldResource.id;\n    // TODO: what if dispatch didn't complete synchronously?\n    this._resource = context.getCurrentData().resourceStore[resourceId];\n    context.emitter.trigger('resourceChange', {\n      oldResource: new ResourceApi(context, oldResource),\n      resource: this,\n      revert() {\n        context.dispatch({\n          type: 'ADD_RESOURCE',\n          resourceHash: {\n            [resourceId]: oldResource\n          }\n        });\n      }\n    });\n  }\n  remove() {\n    let context = this._context;\n    let internalResource = this._resource;\n    let resourceId = internalResource.id;\n    context.dispatch({\n      type: 'REMOVE_RESOURCE',\n      resourceId\n    });\n    context.emitter.trigger('resourceRemove', {\n      resource: this,\n      revert() {\n        context.dispatch({\n          type: 'ADD_RESOURCE',\n          resourceHash: {\n            [resourceId]: internalResource\n          }\n        });\n      }\n    });\n  }\n  getParent() {\n    let context = this._context;\n    let parentId = this._resource.parentId;\n    if (parentId) {\n      return new ResourceApi(context, context.getCurrentData().resourceStore[parentId]);\n    }\n    return null;\n  }\n  getChildren() {\n    let thisResourceId = this._resource.id;\n    let context = this._context;\n    let {\n      resourceStore\n    } = context.getCurrentData();\n    let childApis = [];\n    for (let resourceId in resourceStore) {\n      if (resourceStore[resourceId].parentId === thisResourceId) {\n        childApis.push(new ResourceApi(context, resourceStore[resourceId]));\n      }\n    }\n    return childApis;\n  }\n  /*\n  this is really inefficient!\n  TODO: make EventApi::resourceIds a hash or keep an index in the Calendar's state\n  */\n  getEvents() {\n    let thisResourceId = this._resource.id;\n    let context = this._context;\n    let {\n      defs,\n      instances\n    } = context.getCurrentData().eventStore;\n    let eventApis = [];\n    for (let instanceId in instances) {\n      let instance = instances[instanceId];\n      let def = defs[instance.defId];\n      if (def.resourceIds.indexOf(thisResourceId) !== -1) {\n        // inefficient!!!\n        eventApis.push(new EventImpl(context, def, instance));\n      }\n    }\n    return eventApis;\n  }\n  get id() {\n    return getPublicId(this._resource.id);\n  }\n  get title() {\n    return this._resource.title;\n  }\n  get eventConstraint() {\n    return this._resource.ui.constraints[0] || null;\n  } // TODO: better type\n  get eventOverlap() {\n    return this._resource.ui.overlap;\n  }\n  get eventAllow() {\n    return this._resource.ui.allows[0] || null;\n  } // TODO: better type\n  get eventBackgroundColor() {\n    return this._resource.ui.backgroundColor;\n  }\n  get eventBorderColor() {\n    return this._resource.ui.borderColor;\n  }\n  get eventTextColor() {\n    return this._resource.ui.textColor;\n  }\n  // NOTE: user can't modify these because Object.freeze was called in event-def parsing\n  get eventClassNames() {\n    return this._resource.ui.classNames;\n  }\n  get extendedProps() {\n    return this._resource.extendedProps;\n  }\n  toPlainObject() {\n    let settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let internal = this._resource;\n    let {\n      ui\n    } = internal;\n    let publicId = this.id;\n    let res = {};\n    if (publicId) {\n      res.id = publicId;\n    }\n    if (internal.title) {\n      res.title = internal.title;\n    }\n    if (settings.collapseEventColor && ui.backgroundColor && ui.backgroundColor === ui.borderColor) {\n      res.eventColor = ui.backgroundColor;\n    } else {\n      if (ui.backgroundColor) {\n        res.eventBackgroundColor = ui.backgroundColor;\n      }\n      if (ui.borderColor) {\n        res.eventBorderColor = ui.borderColor;\n      }\n    }\n    if (ui.textColor) {\n      res.eventTextColor = ui.textColor;\n    }\n    if (ui.classNames.length) {\n      res.eventClassNames = ui.classNames;\n    }\n    if (Object.keys(internal.extendedProps).length) {\n      if (settings.collapseExtendedProps) {\n        Object.assign(res, internal.extendedProps);\n      } else {\n        res.extendedProps = internal.extendedProps;\n      }\n    }\n    return res;\n  }\n  toJSON() {\n    return this.toPlainObject();\n  }\n}\nfunction buildResourceApis(resourceStore, context) {\n  let resourceApis = [];\n  for (let resourceId in resourceStore) {\n    resourceApis.push(new ResourceApi(context, resourceStore[resourceId]));\n  }\n  return resourceApis;\n}\n\n/*\nsplits things BASED OFF OF which resources they are associated with.\ncreates a '' entry which is when something has NO resource.\n*/\nclass ResourceSplitter extends Splitter {\n  getKeyInfo(props) {\n    return Object.assign({\n      '': {}\n    }, props.resourceStore);\n  }\n  getKeysForDateSpan(dateSpan) {\n    return [dateSpan.resourceId || ''];\n  }\n  getKeysForEventDef(eventDef) {\n    let resourceIds = eventDef.resourceIds;\n    if (!resourceIds.length) {\n      return [''];\n    }\n    return resourceIds;\n  }\n}\nconst DEFAULT_RESOURCE_ORDER = parseFieldSpecs('id,title');\nfunction handleResourceStore(resourceStore, calendarData) {\n  let {\n    emitter\n  } = calendarData;\n  if (emitter.hasHandlers('resourcesSet')) {\n    emitter.trigger('resourcesSet', buildResourceApis(resourceStore, calendarData));\n  }\n}\nfunction refineRenderProps$1(input) {\n  return {\n    resource: new ResourceApi(input.context, input.resource)\n  };\n}\n\n// TODO: not used for Spreadsheet. START USING. difficult because of col-specific rendering props\nclass ResourceLabelContainer extends BaseComponent {\n  constructor() {\n    super(...arguments);\n    this.refineRenderProps = memoizeObjArg(refineRenderProps);\n  }\n  render() {\n    const {\n      props\n    } = this;\n    return createElement(ViewContextType.Consumer, null, context => {\n      let {\n        options\n      } = context;\n      let renderProps = this.refineRenderProps({\n        resource: props.resource,\n        date: props.date,\n        context\n      });\n      return createElement(ContentContainer, {\n        elRef: props.elRef,\n        elTag: props.elTag,\n        elAttrs: Object.assign(Object.assign({}, props.elAttrs), {\n          'data-resource-id': props.resource.id,\n          'data-date': props.date ? formatDayString(props.date) : undefined\n        }),\n        elClasses: props.elClasses,\n        elStyle: props.elStyle,\n        renderProps: renderProps,\n        generatorName: \"resourceLabelContent\",\n        customGenerator: options.resourceLabelContent,\n        defaultGenerator: renderInnerContent,\n        classNameGenerator: options.resourceLabelClassNames,\n        didMount: options.resourceLabelDidMount,\n        willUnmount: options.resourceLabelWillUnmount\n      }, props.children);\n    });\n  }\n}\nfunction renderInnerContent(props) {\n  return props.resource.title || props.resource.id;\n}\nfunction refineRenderProps(input) {\n  return {\n    resource: new ResourceApi(input.context, input.resource),\n    date: input.date ? input.context.dateEnv.toDate(input.date) : null,\n    view: input.context.viewApi\n  };\n}\nclass ResourceCell extends BaseComponent {\n  render() {\n    let {\n      props\n    } = this;\n    return createElement(ResourceLabelContainer, {\n      elTag: \"th\",\n      elClasses: ['fc-col-header-cell', 'fc-resource'],\n      elAttrs: {\n        role: 'columnheader',\n        colSpan: props.colSpan\n      },\n      resource: props.resource,\n      date: props.date\n    }, InnerContent => createElement(\"div\", {\n      className: \"fc-scrollgrid-sync-inner\"\n    }, createElement(InnerContent, {\n      elTag: \"span\",\n      elClasses: ['fc-col-header-cell-cushion', props.isSticky && 'fc-sticky']\n    })));\n  }\n}\nclass ResourceDayHeader extends BaseComponent {\n  constructor() {\n    super(...arguments);\n    this.buildDateFormat = memoize(buildDateFormat);\n  }\n  render() {\n    let {\n      props,\n      context\n    } = this;\n    let dateFormat = this.buildDateFormat(context.options.dayHeaderFormat, props.datesRepDistinctDays, props.dates.length);\n    return createElement(NowTimer, {\n      unit: \"day\"\n    }, (nowDate, todayRange) => {\n      if (props.dates.length === 1) {\n        return this.renderResourceRow(props.resources, props.dates[0]);\n      }\n      if (context.options.datesAboveResources) {\n        return this.renderDayAndResourceRows(props.dates, dateFormat, todayRange, props.resources);\n      }\n      return this.renderResourceAndDayRows(props.resources, props.dates, dateFormat, todayRange);\n    });\n  }\n  renderResourceRow(resources, date) {\n    let resourceCells = resources.map(resource => createElement(ResourceCell, {\n      key: resource.id,\n      resource: resource,\n      colSpan: 1,\n      date: date\n    }));\n    return this.buildTr(resourceCells, 'resources');\n  }\n  renderDayAndResourceRows(dates, dateFormat, todayRange, resources) {\n    let dateCells = [];\n    let resourceCells = [];\n    for (let date of dates) {\n      dateCells.push(this.renderDateCell(date, dateFormat, todayRange, resources.length, null, true));\n      for (let resource of resources) {\n        resourceCells.push(createElement(ResourceCell, {\n          key: resource.id + ':' + date.toISOString(),\n          resource: resource,\n          colSpan: 1,\n          date: date\n        }));\n      }\n    }\n    return createElement(Fragment, null, this.buildTr(dateCells, 'day'), this.buildTr(resourceCells, 'resources'));\n  }\n  renderResourceAndDayRows(resources, dates, dateFormat, todayRange) {\n    let resourceCells = [];\n    let dateCells = [];\n    for (let resource of resources) {\n      resourceCells.push(createElement(ResourceCell, {\n        key: resource.id,\n        resource: resource,\n        colSpan: dates.length,\n        isSticky: true\n      }));\n      for (let date of dates) {\n        dateCells.push(this.renderDateCell(date, dateFormat, todayRange, 1, resource));\n      }\n    }\n    return createElement(Fragment, null, this.buildTr(resourceCells, 'resources'), this.buildTr(dateCells, 'day'));\n  }\n  // a cell with date text. might have a resource associated with it\n  renderDateCell(date, dateFormat, todayRange, colSpan, resource, isSticky) {\n    let {\n      props\n    } = this;\n    let keyPostfix = resource ? \":\".concat(resource.id) : '';\n    let extraRenderProps = resource ? {\n      resource: new ResourceApi(this.context, resource)\n    } : {};\n    let extraDataAttrs = resource ? {\n      'data-resource-id': resource.id\n    } : {};\n    return props.datesRepDistinctDays ? createElement(TableDateCell, {\n      key: date.toISOString() + keyPostfix,\n      date: date,\n      dateProfile: props.dateProfile,\n      todayRange: todayRange,\n      colCnt: props.dates.length * props.resources.length,\n      dayHeaderFormat: dateFormat,\n      colSpan: colSpan,\n      isSticky: isSticky,\n      extraRenderProps: extraRenderProps,\n      extraDataAttrs: extraDataAttrs\n    }) : createElement(TableDowCell // we can't leverage the pure-componentness becausae the extra* props are new every time :(\n    , {\n      key: date.getUTCDay() + keyPostfix,\n      dow: date.getUTCDay(),\n      dayHeaderFormat: dateFormat,\n      colSpan: colSpan,\n      isSticky: isSticky,\n      extraRenderProps: extraRenderProps,\n      extraDataAttrs: extraDataAttrs\n    });\n  }\n  buildTr(cells, key) {\n    let {\n      renderIntro\n    } = this.props;\n    if (!cells.length) {\n      cells = [createElement(\"td\", {\n        key: 0\n      }, \"\\u00A0\")];\n    }\n    return createElement(\"tr\", {\n      key: key,\n      role: \"row\"\n    }, renderIntro && renderIntro(key), cells);\n  }\n}\nfunction buildDateFormat(dayHeaderFormat, datesRepDistinctDays, dayCnt) {\n  return dayHeaderFormat || computeFallbackHeaderFormat(datesRepDistinctDays, dayCnt);\n}\nclass ResourceIndex {\n  constructor(resources) {\n    let indicesById = {};\n    let ids = [];\n    for (let i = 0; i < resources.length; i += 1) {\n      let id = resources[i].id;\n      ids.push(id);\n      indicesById[id] = i;\n    }\n    this.ids = ids;\n    this.indicesById = indicesById;\n    this.length = resources.length;\n  }\n}\nclass AbstractResourceDayTableModel {\n  constructor(dayTableModel, resources, context) {\n    this.dayTableModel = dayTableModel;\n    this.resources = resources;\n    this.context = context;\n    this.resourceIndex = new ResourceIndex(resources);\n    this.rowCnt = dayTableModel.rowCnt;\n    this.colCnt = dayTableModel.colCnt * resources.length;\n    this.cells = this.buildCells();\n  }\n  buildCells() {\n    let {\n      rowCnt,\n      dayTableModel,\n      resources\n    } = this;\n    let rows = [];\n    for (let row = 0; row < rowCnt; row += 1) {\n      let rowCells = [];\n      for (let dateCol = 0; dateCol < dayTableModel.colCnt; dateCol += 1) {\n        for (let resourceCol = 0; resourceCol < resources.length; resourceCol += 1) {\n          let resource = resources[resourceCol];\n          let extraRenderProps = {\n            resource: new ResourceApi(this.context, resource)\n          };\n          let extraDataAttrs = {\n            'data-resource-id': resource.id\n          };\n          let extraClassNames = ['fc-resource'];\n          let extraDateSpan = {\n            resourceId: resource.id\n          };\n          let date = dayTableModel.cells[row][dateCol].date;\n          rowCells[this.computeCol(dateCol, resourceCol)] = {\n            key: resource.id + ':' + date.toISOString(),\n            date,\n            extraRenderProps,\n            extraDataAttrs,\n            extraClassNames,\n            extraDateSpan\n          };\n        }\n      }\n      rows.push(rowCells);\n    }\n    return rows;\n  }\n}\n\n/*\nresources over dates\n*/\nclass ResourceDayTableModel extends AbstractResourceDayTableModel {\n  computeCol(dateI, resourceI) {\n    return resourceI * this.dayTableModel.colCnt + dateI;\n  }\n  /*\n  all date ranges are intact\n  */\n  computeColRanges(dateStartI, dateEndI, resourceI) {\n    return [{\n      firstCol: this.computeCol(dateStartI, resourceI),\n      lastCol: this.computeCol(dateEndI, resourceI),\n      isStart: true,\n      isEnd: true\n    }];\n  }\n}\n\n/*\ndates over resources\n*/\nclass DayResourceTableModel extends AbstractResourceDayTableModel {\n  computeCol(dateI, resourceI) {\n    return dateI * this.resources.length + resourceI;\n  }\n  /*\n  every single day is broken up\n  */\n  computeColRanges(dateStartI, dateEndI, resourceI) {\n    let segs = [];\n    for (let i = dateStartI; i <= dateEndI; i += 1) {\n      let col = this.computeCol(i, resourceI);\n      segs.push({\n        firstCol: col,\n        lastCol: col,\n        isStart: i === dateStartI,\n        isEnd: i === dateEndI\n      });\n    }\n    return segs;\n  }\n}\nconst NO_SEGS = []; // for memoizing\nclass VResourceJoiner {\n  constructor() {\n    this.joinDateSelection = memoize(this.joinSegs);\n    this.joinBusinessHours = memoize(this.joinSegs);\n    this.joinFgEvents = memoize(this.joinSegs);\n    this.joinBgEvents = memoize(this.joinSegs);\n    this.joinEventDrags = memoize(this.joinInteractions);\n    this.joinEventResizes = memoize(this.joinInteractions);\n  }\n  /*\n  propSets also has a '' key for things with no resource\n  */\n  joinProps(propSets, resourceDayTable) {\n    let dateSelectionSets = [];\n    let businessHoursSets = [];\n    let fgEventSets = [];\n    let bgEventSets = [];\n    let eventDrags = [];\n    let eventResizes = [];\n    let eventSelection = '';\n    let keys = resourceDayTable.resourceIndex.ids.concat(['']); // add in the all-resource key\n    for (let key of keys) {\n      let props = propSets[key];\n      dateSelectionSets.push(props.dateSelectionSegs);\n      businessHoursSets.push(key ? props.businessHourSegs : NO_SEGS); // don't include redundant all-resource businesshours\n      fgEventSets.push(key ? props.fgEventSegs : NO_SEGS); // don't include fg all-resource segs\n      bgEventSets.push(props.bgEventSegs);\n      eventDrags.push(props.eventDrag);\n      eventResizes.push(props.eventResize);\n      eventSelection = eventSelection || props.eventSelection;\n    }\n    return {\n      dateSelectionSegs: this.joinDateSelection(resourceDayTable, ...dateSelectionSets),\n      businessHourSegs: this.joinBusinessHours(resourceDayTable, ...businessHoursSets),\n      fgEventSegs: this.joinFgEvents(resourceDayTable, ...fgEventSets),\n      bgEventSegs: this.joinBgEvents(resourceDayTable, ...bgEventSets),\n      eventDrag: this.joinEventDrags(resourceDayTable, ...eventDrags),\n      eventResize: this.joinEventResizes(resourceDayTable, ...eventResizes),\n      eventSelection\n    };\n  }\n  joinSegs(resourceDayTable) {\n    let resourceCnt = resourceDayTable.resources.length;\n    let transformedSegs = [];\n    for (var _len = arguments.length, segGroups = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      segGroups[_key - 1] = arguments[_key];\n    }\n    for (let i = 0; i < resourceCnt; i += 1) {\n      for (let seg of segGroups[i]) {\n        transformedSegs.push(...this.transformSeg(seg, resourceDayTable, i));\n      }\n      for (let seg of segGroups[resourceCnt]) {\n        // one beyond. the all-resource\n        transformedSegs.push(...this.transformSeg(seg, resourceDayTable, i));\n      }\n    }\n    return transformedSegs;\n  }\n  /*\n  for expanding non-resource segs to all resources.\n  only for public use.\n  no memoizing.\n  */\n  expandSegs(resourceDayTable, segs) {\n    let resourceCnt = resourceDayTable.resources.length;\n    let transformedSegs = [];\n    for (let i = 0; i < resourceCnt; i += 1) {\n      for (let seg of segs) {\n        transformedSegs.push(...this.transformSeg(seg, resourceDayTable, i));\n      }\n    }\n    return transformedSegs;\n  }\n  joinInteractions(resourceDayTable) {\n    let resourceCnt = resourceDayTable.resources.length;\n    let affectedInstances = {};\n    let transformedSegs = [];\n    let anyInteractions = false;\n    let isEvent = false;\n    for (var _len2 = arguments.length, interactions = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      interactions[_key2 - 1] = arguments[_key2];\n    }\n    for (let i = 0; i < resourceCnt; i += 1) {\n      let interaction = interactions[i];\n      if (interaction) {\n        anyInteractions = true;\n        for (let seg of interaction.segs) {\n          transformedSegs.push(...this.transformSeg(seg, resourceDayTable, i));\n        }\n        Object.assign(affectedInstances, interaction.affectedInstances);\n        isEvent = isEvent || interaction.isEvent;\n      }\n      if (interactions[resourceCnt]) {\n        // one beyond. the all-resource\n        for (let seg of interactions[resourceCnt].segs) {\n          transformedSegs.push(...this.transformSeg(seg, resourceDayTable, i));\n        }\n      }\n    }\n    if (anyInteractions) {\n      return {\n        affectedInstances,\n        segs: transformedSegs,\n        isEvent\n      };\n    }\n    return null;\n  }\n}\n\n/*\nTODO: just use ResourceHash somehow? could then use the generic ResourceSplitter\n*/\nclass VResourceSplitter extends Splitter {\n  getKeyInfo(props) {\n    let {\n      resourceDayTableModel\n    } = props;\n    let hash = mapHash(resourceDayTableModel.resourceIndex.indicesById, i => resourceDayTableModel.resources[i]); // :(\n    hash[''] = {};\n    return hash;\n  }\n  getKeysForDateSpan(dateSpan) {\n    return [dateSpan.resourceId || ''];\n  }\n  getKeysForEventDef(eventDef) {\n    let resourceIds = eventDef.resourceIds;\n    if (!resourceIds.length) {\n      return [''];\n    }\n    return resourceIds;\n  }\n}\n\n/*\ndoesn't accept grouping\n*/\nfunction flattenResources(resourceStore, orderSpecs) {\n  return buildRowNodes(resourceStore, [], orderSpecs, false, {}, true).map(node => node.resource);\n}\nfunction buildRowNodes(resourceStore, groupSpecs, orderSpecs, isVGrouping, expansions, expansionDefault) {\n  let complexNodes = buildHierarchy(resourceStore, isVGrouping ? -1 : 1, groupSpecs, orderSpecs);\n  let flatNodes = [];\n  flattenNodes(complexNodes, flatNodes, isVGrouping, [], 0, expansions, expansionDefault);\n  return flatNodes;\n}\nfunction flattenNodes(complexNodes, res, isVGrouping, rowSpans, depth, expansions, expansionDefault) {\n  for (let i = 0; i < complexNodes.length; i += 1) {\n    let complexNode = complexNodes[i];\n    let group = complexNode.group;\n    if (group) {\n      if (isVGrouping) {\n        let firstRowIndex = res.length;\n        let rowSpanIndex = rowSpans.length;\n        flattenNodes(complexNode.children, res, isVGrouping, rowSpans.concat(0), depth, expansions, expansionDefault);\n        if (firstRowIndex < res.length) {\n          let firstRow = res[firstRowIndex];\n          let firstRowSpans = firstRow.rowSpans = firstRow.rowSpans.slice();\n          firstRowSpans[rowSpanIndex] = res.length - firstRowIndex;\n        }\n      } else {\n        let id = group.spec.field + ':' + group.value;\n        let isExpanded = expansions[id] != null ? expansions[id] : expansionDefault;\n        res.push({\n          id,\n          group,\n          isExpanded\n        });\n        if (isExpanded) {\n          flattenNodes(complexNode.children, res, isVGrouping, rowSpans, depth + 1, expansions, expansionDefault);\n        }\n      }\n    } else if (complexNode.resource) {\n      let id = complexNode.resource.id;\n      let isExpanded = expansions[id] != null ? expansions[id] : expansionDefault;\n      res.push({\n        id,\n        rowSpans,\n        depth,\n        isExpanded,\n        hasChildren: Boolean(complexNode.children.length),\n        resource: complexNode.resource,\n        resourceFields: complexNode.resourceFields\n      });\n      if (isExpanded) {\n        flattenNodes(complexNode.children, res, isVGrouping, rowSpans, depth + 1, expansions, expansionDefault);\n      }\n    }\n  }\n}\nfunction buildHierarchy(resourceStore, maxDepth, groupSpecs, orderSpecs) {\n  let resourceNodes = buildResourceNodes(resourceStore, orderSpecs);\n  let builtNodes = [];\n  for (let resourceId in resourceNodes) {\n    let resourceNode = resourceNodes[resourceId];\n    if (!resourceNode.resource.parentId) {\n      insertResourceNode(resourceNode, builtNodes, groupSpecs, 0, maxDepth, orderSpecs);\n    }\n  }\n  return builtNodes;\n}\nfunction buildResourceNodes(resourceStore, orderSpecs) {\n  let nodeHash = {};\n  for (let resourceId in resourceStore) {\n    let resource = resourceStore[resourceId];\n    nodeHash[resourceId] = {\n      resource,\n      resourceFields: buildResourceFields(resource),\n      children: []\n    };\n  }\n  for (let resourceId in resourceStore) {\n    let resource = resourceStore[resourceId];\n    if (resource.parentId) {\n      let parentNode = nodeHash[resource.parentId];\n      if (parentNode) {\n        insertResourceNodeInSiblings(nodeHash[resourceId], parentNode.children, orderSpecs);\n      }\n    }\n  }\n  return nodeHash;\n}\nfunction insertResourceNode(resourceNode, nodes, groupSpecs, depth, maxDepth, orderSpecs) {\n  if (groupSpecs.length && (maxDepth === -1 || depth <= maxDepth)) {\n    let groupNode = ensureGroupNodes(resourceNode, nodes, groupSpecs[0]);\n    insertResourceNode(resourceNode, groupNode.children, groupSpecs.slice(1), depth + 1, maxDepth, orderSpecs);\n  } else {\n    insertResourceNodeInSiblings(resourceNode, nodes, orderSpecs);\n  }\n}\nfunction ensureGroupNodes(resourceNode, nodes, groupSpec) {\n  let groupValue = resourceNode.resourceFields[groupSpec.field];\n  let groupNode;\n  let newGroupIndex;\n  // find an existing group that matches, or determine the position for a new group\n  if (groupSpec.order) {\n    for (newGroupIndex = 0; newGroupIndex < nodes.length; newGroupIndex += 1) {\n      let node = nodes[newGroupIndex];\n      if (node.group) {\n        let cmp = flexibleCompare(groupValue, node.group.value) * groupSpec.order;\n        if (cmp === 0) {\n          groupNode = node;\n          break;\n        } else if (cmp < 0) {\n          break;\n        }\n      }\n    }\n  } else {\n    // the groups are unordered\n    for (newGroupIndex = 0; newGroupIndex < nodes.length; newGroupIndex += 1) {\n      let node = nodes[newGroupIndex];\n      if (node.group && groupValue === node.group.value) {\n        groupNode = node;\n        break;\n      }\n    }\n  }\n  if (!groupNode) {\n    groupNode = {\n      group: {\n        value: groupValue,\n        spec: groupSpec\n      },\n      children: []\n    };\n    nodes.splice(newGroupIndex, 0, groupNode);\n  }\n  return groupNode;\n}\nfunction insertResourceNodeInSiblings(resourceNode, siblings, orderSpecs) {\n  let i;\n  for (i = 0; i < siblings.length; i += 1) {\n    let cmp = compareByFieldSpecs(siblings[i].resourceFields, resourceNode.resourceFields, orderSpecs); // TODO: pass in ResourceApi?\n    if (cmp > 0) {\n      // went 1 past. insert at i\n      break;\n    }\n  }\n  siblings.splice(i, 0, resourceNode);\n}\nfunction buildResourceFields(resource) {\n  let obj = Object.assign(Object.assign(Object.assign({}, resource.extendedProps), resource.ui), resource);\n  delete obj.ui;\n  delete obj.extendedProps;\n  return obj;\n}\nfunction isGroupsEqual(group0, group1) {\n  return group0.spec === group1.spec && group0.value === group1.value;\n}\nexport { AbstractResourceDayTableModel as A, DEFAULT_RESOURCE_ORDER as D, ResourceApi as R, VResourceJoiner as V, ResourceSplitter as a, ResourceDayHeader as b, ResourceDayTableModel as c, DayResourceTableModel as d, VResourceSplitter as e, flattenResources as f, getPublicId as g, handleResourceStore as h, isGroupsEqual as i, buildRowNodes as j, buildResourceFields as k, ResourceLabelContainer as l, parseResource as p, refineRenderProps$1 as r };","map":{"version":3,"names":["refineProps","guid","parseBusinessHours","createEventUi","identity","parseClassNames","EventImpl","Splitter","parseFieldSpecs","BaseComponent","memoizeObjArg","ViewContextType","ContentContainer","formatDayString","memoize","NowTimer","TableDateCell","TableDowCell","computeFallbackHeaderFormat","mapHash","flexibleCompare","compareByFieldSpecs","createElement","Fragment","PRIVATE_ID_PREFIX","RESOURCE_REFINERS","id","String","parentId","children","title","businessHours","extendedProps","eventEditable","Boolean","eventStartEditable","eventDurationEditable","eventConstraint","eventOverlap","eventAllow","eventClassNames","eventBackgroundColor","eventBorderColor","eventTextColor","eventColor","parseResource","raw","arguments","length","undefined","store","context","refined","extra","resource","ui","editable","startEditable","durationEditable","constraint","overlap","allow","classNames","backgroundColor","borderColor","textColor","color","Object","assign","freeze","childInput","getPublicId","indexOf","ResourceApi","constructor","_context","_resource","setProp","name","value","oldResource","dispatch","type","resourceId","propName","propValue","sync","setExtendedProp","getCurrentData","resourceStore","emitter","trigger","revert","resourceHash","remove","internalResource","getParent","getChildren","thisResourceId","childApis","push","getEvents","defs","instances","eventStore","eventApis","instanceId","instance","def","defId","resourceIds","constraints","allows","toPlainObject","settings","internal","publicId","res","collapseEventColor","keys","collapseExtendedProps","toJSON","buildResourceApis","resourceApis","ResourceSplitter","getKeyInfo","props","getKeysForDateSpan","dateSpan","getKeysForEventDef","eventDef","DEFAULT_RESOURCE_ORDER","handleResourceStore","calendarData","hasHandlers","refineRenderProps$1","input","ResourceLabelContainer","refineRenderProps","render","Consumer","options","renderProps","date","elRef","elTag","elAttrs","elClasses","elStyle","generatorName","customGenerator","resourceLabelContent","defaultGenerator","renderInnerContent","classNameGenerator","resourceLabelClassNames","didMount","resourceLabelDidMount","willUnmount","resourceLabelWillUnmount","dateEnv","toDate","view","viewApi","ResourceCell","role","colSpan","InnerContent","className","isSticky","ResourceDayHeader","buildDateFormat","dateFormat","dayHeaderFormat","datesRepDistinctDays","dates","unit","nowDate","todayRange","renderResourceRow","resources","datesAboveResources","renderDayAndResourceRows","renderResourceAndDayRows","resourceCells","map","key","buildTr","dateCells","renderDateCell","toISOString","keyPostfix","concat","extraRenderProps","extraDataAttrs","dateProfile","colCnt","getUTCDay","dow","cells","renderIntro","dayCnt","ResourceIndex","indicesById","ids","i","AbstractResourceDayTableModel","dayTableModel","resourceIndex","rowCnt","buildCells","rows","row","rowCells","dateCol","resourceCol","extraClassNames","extraDateSpan","computeCol","ResourceDayTableModel","dateI","resourceI","computeColRanges","dateStartI","dateEndI","firstCol","lastCol","isStart","isEnd","DayResourceTableModel","segs","col","NO_SEGS","VResourceJoiner","joinDateSelection","joinSegs","joinBusinessHours","joinFgEvents","joinBgEvents","joinEventDrags","joinInteractions","joinEventResizes","joinProps","propSets","resourceDayTable","dateSelectionSets","businessHoursSets","fgEventSets","bgEventSets","eventDrags","eventResizes","eventSelection","dateSelectionSegs","businessHourSegs","fgEventSegs","bgEventSegs","eventDrag","eventResize","resourceCnt","transformedSegs","_len","segGroups","Array","_key","seg","transformSeg","expandSegs","affectedInstances","anyInteractions","isEvent","_len2","interactions","_key2","interaction","VResourceSplitter","resourceDayTableModel","hash","flattenResources","orderSpecs","buildRowNodes","node","groupSpecs","isVGrouping","expansions","expansionDefault","complexNodes","buildHierarchy","flatNodes","flattenNodes","rowSpans","depth","complexNode","group","firstRowIndex","rowSpanIndex","firstRow","firstRowSpans","slice","spec","field","isExpanded","hasChildren","resourceFields","maxDepth","resourceNodes","buildResourceNodes","builtNodes","resourceNode","insertResourceNode","nodeHash","buildResourceFields","parentNode","insertResourceNodeInSiblings","nodes","groupNode","ensureGroupNodes","groupSpec","groupValue","newGroupIndex","order","cmp","splice","siblings","obj","isGroupsEqual","group0","group1","A","D","R","V","a","b","c","d","e","f","g","h","j","k","l","p","r"],"sources":["/Users/macmini/Documents/Sistema_Consultorio/frontend/node_modules/@fullcalendar/resource/internal-common.js"],"sourcesContent":["import { refineProps, guid, parseBusinessHours, createEventUi, identity, parseClassNames, EventImpl, Splitter, parseFieldSpecs, BaseComponent, memoizeObjArg, ViewContextType, ContentContainer, formatDayString, memoize, NowTimer, TableDateCell, TableDowCell, computeFallbackHeaderFormat, mapHash, flexibleCompare, compareByFieldSpecs } from '@fullcalendar/core/internal.js';\nimport { createElement, Fragment } from '@fullcalendar/core/preact.js';\n\nconst PRIVATE_ID_PREFIX = '_fc:';\nconst RESOURCE_REFINERS = {\n    id: String,\n    parentId: String,\n    children: identity,\n    title: String,\n    businessHours: identity,\n    extendedProps: identity,\n    // event-ui\n    eventEditable: Boolean,\n    eventStartEditable: Boolean,\n    eventDurationEditable: Boolean,\n    eventConstraint: identity,\n    eventOverlap: Boolean,\n    eventAllow: identity,\n    eventClassNames: parseClassNames,\n    eventBackgroundColor: String,\n    eventBorderColor: String,\n    eventTextColor: String,\n    eventColor: String,\n};\n/*\nneeds a full store so that it can populate children too\n*/\nfunction parseResource(raw, parentId = '', store, context) {\n    let { refined, extra } = refineProps(raw, RESOURCE_REFINERS);\n    let resource = {\n        id: refined.id || (PRIVATE_ID_PREFIX + guid()),\n        parentId: refined.parentId || parentId,\n        title: refined.title || '',\n        businessHours: refined.businessHours ? parseBusinessHours(refined.businessHours, context) : null,\n        ui: createEventUi({\n            editable: refined.eventEditable,\n            startEditable: refined.eventStartEditable,\n            durationEditable: refined.eventDurationEditable,\n            constraint: refined.eventConstraint,\n            overlap: refined.eventOverlap,\n            allow: refined.eventAllow,\n            classNames: refined.eventClassNames,\n            backgroundColor: refined.eventBackgroundColor,\n            borderColor: refined.eventBorderColor,\n            textColor: refined.eventTextColor,\n            color: refined.eventColor,\n        }, context),\n        extendedProps: Object.assign(Object.assign({}, extra), refined.extendedProps),\n    };\n    // help out ResourceApi from having user modify props\n    Object.freeze(resource.ui.classNames);\n    Object.freeze(resource.extendedProps);\n    if (store[resource.id]) ;\n    else {\n        store[resource.id] = resource;\n        if (refined.children) {\n            for (let childInput of refined.children) {\n                parseResource(childInput, resource.id, store, context);\n            }\n        }\n    }\n    return resource;\n}\n/*\nTODO: use this in more places\n*/\nfunction getPublicId(id) {\n    if (id.indexOf(PRIVATE_ID_PREFIX) === 0) {\n        return '';\n    }\n    return id;\n}\n\nclass ResourceApi {\n    constructor(_context, _resource) {\n        this._context = _context;\n        this._resource = _resource;\n    }\n    setProp(name, value) {\n        let oldResource = this._resource;\n        this._context.dispatch({\n            type: 'SET_RESOURCE_PROP',\n            resourceId: oldResource.id,\n            propName: name,\n            propValue: value,\n        });\n        this.sync(oldResource);\n    }\n    setExtendedProp(name, value) {\n        let oldResource = this._resource;\n        this._context.dispatch({\n            type: 'SET_RESOURCE_EXTENDED_PROP',\n            resourceId: oldResource.id,\n            propName: name,\n            propValue: value,\n        });\n        this.sync(oldResource);\n    }\n    sync(oldResource) {\n        let context = this._context;\n        let resourceId = oldResource.id;\n        // TODO: what if dispatch didn't complete synchronously?\n        this._resource = context.getCurrentData().resourceStore[resourceId];\n        context.emitter.trigger('resourceChange', {\n            oldResource: new ResourceApi(context, oldResource),\n            resource: this,\n            revert() {\n                context.dispatch({\n                    type: 'ADD_RESOURCE',\n                    resourceHash: {\n                        [resourceId]: oldResource,\n                    },\n                });\n            },\n        });\n    }\n    remove() {\n        let context = this._context;\n        let internalResource = this._resource;\n        let resourceId = internalResource.id;\n        context.dispatch({\n            type: 'REMOVE_RESOURCE',\n            resourceId,\n        });\n        context.emitter.trigger('resourceRemove', {\n            resource: this,\n            revert() {\n                context.dispatch({\n                    type: 'ADD_RESOURCE',\n                    resourceHash: {\n                        [resourceId]: internalResource,\n                    },\n                });\n            },\n        });\n    }\n    getParent() {\n        let context = this._context;\n        let parentId = this._resource.parentId;\n        if (parentId) {\n            return new ResourceApi(context, context.getCurrentData().resourceStore[parentId]);\n        }\n        return null;\n    }\n    getChildren() {\n        let thisResourceId = this._resource.id;\n        let context = this._context;\n        let { resourceStore } = context.getCurrentData();\n        let childApis = [];\n        for (let resourceId in resourceStore) {\n            if (resourceStore[resourceId].parentId === thisResourceId) {\n                childApis.push(new ResourceApi(context, resourceStore[resourceId]));\n            }\n        }\n        return childApis;\n    }\n    /*\n    this is really inefficient!\n    TODO: make EventApi::resourceIds a hash or keep an index in the Calendar's state\n    */\n    getEvents() {\n        let thisResourceId = this._resource.id;\n        let context = this._context;\n        let { defs, instances } = context.getCurrentData().eventStore;\n        let eventApis = [];\n        for (let instanceId in instances) {\n            let instance = instances[instanceId];\n            let def = defs[instance.defId];\n            if (def.resourceIds.indexOf(thisResourceId) !== -1) { // inefficient!!!\n                eventApis.push(new EventImpl(context, def, instance));\n            }\n        }\n        return eventApis;\n    }\n    get id() { return getPublicId(this._resource.id); }\n    get title() { return this._resource.title; }\n    get eventConstraint() { return this._resource.ui.constraints[0] || null; } // TODO: better type\n    get eventOverlap() { return this._resource.ui.overlap; }\n    get eventAllow() { return this._resource.ui.allows[0] || null; } // TODO: better type\n    get eventBackgroundColor() { return this._resource.ui.backgroundColor; }\n    get eventBorderColor() { return this._resource.ui.borderColor; }\n    get eventTextColor() { return this._resource.ui.textColor; }\n    // NOTE: user can't modify these because Object.freeze was called in event-def parsing\n    get eventClassNames() { return this._resource.ui.classNames; }\n    get extendedProps() { return this._resource.extendedProps; }\n    toPlainObject(settings = {}) {\n        let internal = this._resource;\n        let { ui } = internal;\n        let publicId = this.id;\n        let res = {};\n        if (publicId) {\n            res.id = publicId;\n        }\n        if (internal.title) {\n            res.title = internal.title;\n        }\n        if (settings.collapseEventColor && ui.backgroundColor && ui.backgroundColor === ui.borderColor) {\n            res.eventColor = ui.backgroundColor;\n        }\n        else {\n            if (ui.backgroundColor) {\n                res.eventBackgroundColor = ui.backgroundColor;\n            }\n            if (ui.borderColor) {\n                res.eventBorderColor = ui.borderColor;\n            }\n        }\n        if (ui.textColor) {\n            res.eventTextColor = ui.textColor;\n        }\n        if (ui.classNames.length) {\n            res.eventClassNames = ui.classNames;\n        }\n        if (Object.keys(internal.extendedProps).length) {\n            if (settings.collapseExtendedProps) {\n                Object.assign(res, internal.extendedProps);\n            }\n            else {\n                res.extendedProps = internal.extendedProps;\n            }\n        }\n        return res;\n    }\n    toJSON() {\n        return this.toPlainObject();\n    }\n}\nfunction buildResourceApis(resourceStore, context) {\n    let resourceApis = [];\n    for (let resourceId in resourceStore) {\n        resourceApis.push(new ResourceApi(context, resourceStore[resourceId]));\n    }\n    return resourceApis;\n}\n\n/*\nsplits things BASED OFF OF which resources they are associated with.\ncreates a '' entry which is when something has NO resource.\n*/\nclass ResourceSplitter extends Splitter {\n    getKeyInfo(props) {\n        return Object.assign({ '': {} }, props.resourceStore);\n    }\n    getKeysForDateSpan(dateSpan) {\n        return [dateSpan.resourceId || ''];\n    }\n    getKeysForEventDef(eventDef) {\n        let resourceIds = eventDef.resourceIds;\n        if (!resourceIds.length) {\n            return [''];\n        }\n        return resourceIds;\n    }\n}\n\nconst DEFAULT_RESOURCE_ORDER = parseFieldSpecs('id,title');\nfunction handleResourceStore(resourceStore, calendarData) {\n    let { emitter } = calendarData;\n    if (emitter.hasHandlers('resourcesSet')) {\n        emitter.trigger('resourcesSet', buildResourceApis(resourceStore, calendarData));\n    }\n}\n\nfunction refineRenderProps$1(input) {\n    return {\n        resource: new ResourceApi(input.context, input.resource),\n    };\n}\n\n// TODO: not used for Spreadsheet. START USING. difficult because of col-specific rendering props\nclass ResourceLabelContainer extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.refineRenderProps = memoizeObjArg(refineRenderProps);\n    }\n    render() {\n        const { props } = this;\n        return (createElement(ViewContextType.Consumer, null, (context) => {\n            let { options } = context;\n            let renderProps = this.refineRenderProps({\n                resource: props.resource,\n                date: props.date,\n                context,\n            });\n            return (createElement(ContentContainer, { elRef: props.elRef, elTag: props.elTag, elAttrs: Object.assign(Object.assign({}, props.elAttrs), { 'data-resource-id': props.resource.id, 'data-date': props.date ? formatDayString(props.date) : undefined }), elClasses: props.elClasses, elStyle: props.elStyle, renderProps: renderProps, generatorName: \"resourceLabelContent\", customGenerator: options.resourceLabelContent, defaultGenerator: renderInnerContent, classNameGenerator: options.resourceLabelClassNames, didMount: options.resourceLabelDidMount, willUnmount: options.resourceLabelWillUnmount }, props.children));\n        }));\n    }\n}\nfunction renderInnerContent(props) {\n    return props.resource.title || props.resource.id;\n}\nfunction refineRenderProps(input) {\n    return {\n        resource: new ResourceApi(input.context, input.resource),\n        date: input.date ? input.context.dateEnv.toDate(input.date) : null,\n        view: input.context.viewApi,\n    };\n}\n\nclass ResourceCell extends BaseComponent {\n    render() {\n        let { props } = this;\n        return (createElement(ResourceLabelContainer, { elTag: \"th\", elClasses: ['fc-col-header-cell', 'fc-resource'], elAttrs: {\n                role: 'columnheader',\n                colSpan: props.colSpan,\n            }, resource: props.resource, date: props.date }, (InnerContent) => (createElement(\"div\", { className: \"fc-scrollgrid-sync-inner\" },\n            createElement(InnerContent, { elTag: \"span\", elClasses: [\n                    'fc-col-header-cell-cushion',\n                    props.isSticky && 'fc-sticky',\n                ] })))));\n    }\n}\n\nclass ResourceDayHeader extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.buildDateFormat = memoize(buildDateFormat);\n    }\n    render() {\n        let { props, context } = this;\n        let dateFormat = this.buildDateFormat(context.options.dayHeaderFormat, props.datesRepDistinctDays, props.dates.length);\n        return (createElement(NowTimer, { unit: \"day\" }, (nowDate, todayRange) => {\n            if (props.dates.length === 1) {\n                return this.renderResourceRow(props.resources, props.dates[0]);\n            }\n            if (context.options.datesAboveResources) {\n                return this.renderDayAndResourceRows(props.dates, dateFormat, todayRange, props.resources);\n            }\n            return this.renderResourceAndDayRows(props.resources, props.dates, dateFormat, todayRange);\n        }));\n    }\n    renderResourceRow(resources, date) {\n        let resourceCells = resources.map((resource) => (createElement(ResourceCell, { key: resource.id, resource: resource, colSpan: 1, date: date })));\n        return this.buildTr(resourceCells, 'resources');\n    }\n    renderDayAndResourceRows(dates, dateFormat, todayRange, resources) {\n        let dateCells = [];\n        let resourceCells = [];\n        for (let date of dates) {\n            dateCells.push(this.renderDateCell(date, dateFormat, todayRange, resources.length, null, true));\n            for (let resource of resources) {\n                resourceCells.push(createElement(ResourceCell, { key: resource.id + ':' + date.toISOString(), resource: resource, colSpan: 1, date: date }));\n            }\n        }\n        return (createElement(Fragment, null,\n            this.buildTr(dateCells, 'day'),\n            this.buildTr(resourceCells, 'resources')));\n    }\n    renderResourceAndDayRows(resources, dates, dateFormat, todayRange) {\n        let resourceCells = [];\n        let dateCells = [];\n        for (let resource of resources) {\n            resourceCells.push(createElement(ResourceCell, { key: resource.id, resource: resource, colSpan: dates.length, isSticky: true }));\n            for (let date of dates) {\n                dateCells.push(this.renderDateCell(date, dateFormat, todayRange, 1, resource));\n            }\n        }\n        return (createElement(Fragment, null,\n            this.buildTr(resourceCells, 'resources'),\n            this.buildTr(dateCells, 'day')));\n    }\n    // a cell with date text. might have a resource associated with it\n    renderDateCell(date, dateFormat, todayRange, colSpan, resource, isSticky) {\n        let { props } = this;\n        let keyPostfix = resource ? `:${resource.id}` : '';\n        let extraRenderProps = resource ? { resource: new ResourceApi(this.context, resource) } : {};\n        let extraDataAttrs = resource ? { 'data-resource-id': resource.id } : {};\n        return props.datesRepDistinctDays ? (createElement(TableDateCell, { key: date.toISOString() + keyPostfix, date: date, dateProfile: props.dateProfile, todayRange: todayRange, colCnt: props.dates.length * props.resources.length, dayHeaderFormat: dateFormat, colSpan: colSpan, isSticky: isSticky, extraRenderProps: extraRenderProps, extraDataAttrs: extraDataAttrs })) : (createElement(TableDowCell // we can't leverage the pure-componentness becausae the extra* props are new every time :(\n        , { key: date.getUTCDay() + keyPostfix, dow: date.getUTCDay(), dayHeaderFormat: dateFormat, colSpan: colSpan, isSticky: isSticky, extraRenderProps: extraRenderProps, extraDataAttrs: extraDataAttrs }));\n    }\n    buildTr(cells, key) {\n        let { renderIntro } = this.props;\n        if (!cells.length) {\n            cells = [createElement(\"td\", { key: 0 }, \"\\u00A0\")];\n        }\n        return (createElement(\"tr\", { key: key, role: \"row\" },\n            renderIntro && renderIntro(key),\n            cells));\n    }\n}\nfunction buildDateFormat(dayHeaderFormat, datesRepDistinctDays, dayCnt) {\n    return dayHeaderFormat || computeFallbackHeaderFormat(datesRepDistinctDays, dayCnt);\n}\n\nclass ResourceIndex {\n    constructor(resources) {\n        let indicesById = {};\n        let ids = [];\n        for (let i = 0; i < resources.length; i += 1) {\n            let id = resources[i].id;\n            ids.push(id);\n            indicesById[id] = i;\n        }\n        this.ids = ids;\n        this.indicesById = indicesById;\n        this.length = resources.length;\n    }\n}\n\nclass AbstractResourceDayTableModel {\n    constructor(dayTableModel, resources, context) {\n        this.dayTableModel = dayTableModel;\n        this.resources = resources;\n        this.context = context;\n        this.resourceIndex = new ResourceIndex(resources);\n        this.rowCnt = dayTableModel.rowCnt;\n        this.colCnt = dayTableModel.colCnt * resources.length;\n        this.cells = this.buildCells();\n    }\n    buildCells() {\n        let { rowCnt, dayTableModel, resources } = this;\n        let rows = [];\n        for (let row = 0; row < rowCnt; row += 1) {\n            let rowCells = [];\n            for (let dateCol = 0; dateCol < dayTableModel.colCnt; dateCol += 1) {\n                for (let resourceCol = 0; resourceCol < resources.length; resourceCol += 1) {\n                    let resource = resources[resourceCol];\n                    let extraRenderProps = { resource: new ResourceApi(this.context, resource) };\n                    let extraDataAttrs = { 'data-resource-id': resource.id };\n                    let extraClassNames = ['fc-resource'];\n                    let extraDateSpan = { resourceId: resource.id };\n                    let date = dayTableModel.cells[row][dateCol].date;\n                    rowCells[this.computeCol(dateCol, resourceCol)] = {\n                        key: resource.id + ':' + date.toISOString(),\n                        date,\n                        extraRenderProps,\n                        extraDataAttrs,\n                        extraClassNames,\n                        extraDateSpan,\n                    };\n                }\n            }\n            rows.push(rowCells);\n        }\n        return rows;\n    }\n}\n\n/*\nresources over dates\n*/\nclass ResourceDayTableModel extends AbstractResourceDayTableModel {\n    computeCol(dateI, resourceI) {\n        return resourceI * this.dayTableModel.colCnt + dateI;\n    }\n    /*\n    all date ranges are intact\n    */\n    computeColRanges(dateStartI, dateEndI, resourceI) {\n        return [\n            {\n                firstCol: this.computeCol(dateStartI, resourceI),\n                lastCol: this.computeCol(dateEndI, resourceI),\n                isStart: true,\n                isEnd: true,\n            },\n        ];\n    }\n}\n\n/*\ndates over resources\n*/\nclass DayResourceTableModel extends AbstractResourceDayTableModel {\n    computeCol(dateI, resourceI) {\n        return dateI * this.resources.length + resourceI;\n    }\n    /*\n    every single day is broken up\n    */\n    computeColRanges(dateStartI, dateEndI, resourceI) {\n        let segs = [];\n        for (let i = dateStartI; i <= dateEndI; i += 1) {\n            let col = this.computeCol(i, resourceI);\n            segs.push({\n                firstCol: col,\n                lastCol: col,\n                isStart: i === dateStartI,\n                isEnd: i === dateEndI,\n            });\n        }\n        return segs;\n    }\n}\n\nconst NO_SEGS = []; // for memoizing\nclass VResourceJoiner {\n    constructor() {\n        this.joinDateSelection = memoize(this.joinSegs);\n        this.joinBusinessHours = memoize(this.joinSegs);\n        this.joinFgEvents = memoize(this.joinSegs);\n        this.joinBgEvents = memoize(this.joinSegs);\n        this.joinEventDrags = memoize(this.joinInteractions);\n        this.joinEventResizes = memoize(this.joinInteractions);\n    }\n    /*\n    propSets also has a '' key for things with no resource\n    */\n    joinProps(propSets, resourceDayTable) {\n        let dateSelectionSets = [];\n        let businessHoursSets = [];\n        let fgEventSets = [];\n        let bgEventSets = [];\n        let eventDrags = [];\n        let eventResizes = [];\n        let eventSelection = '';\n        let keys = resourceDayTable.resourceIndex.ids.concat(['']); // add in the all-resource key\n        for (let key of keys) {\n            let props = propSets[key];\n            dateSelectionSets.push(props.dateSelectionSegs);\n            businessHoursSets.push(key ? props.businessHourSegs : NO_SEGS); // don't include redundant all-resource businesshours\n            fgEventSets.push(key ? props.fgEventSegs : NO_SEGS); // don't include fg all-resource segs\n            bgEventSets.push(props.bgEventSegs);\n            eventDrags.push(props.eventDrag);\n            eventResizes.push(props.eventResize);\n            eventSelection = eventSelection || props.eventSelection;\n        }\n        return {\n            dateSelectionSegs: this.joinDateSelection(resourceDayTable, ...dateSelectionSets),\n            businessHourSegs: this.joinBusinessHours(resourceDayTable, ...businessHoursSets),\n            fgEventSegs: this.joinFgEvents(resourceDayTable, ...fgEventSets),\n            bgEventSegs: this.joinBgEvents(resourceDayTable, ...bgEventSets),\n            eventDrag: this.joinEventDrags(resourceDayTable, ...eventDrags),\n            eventResize: this.joinEventResizes(resourceDayTable, ...eventResizes),\n            eventSelection,\n        };\n    }\n    joinSegs(resourceDayTable, ...segGroups) {\n        let resourceCnt = resourceDayTable.resources.length;\n        let transformedSegs = [];\n        for (let i = 0; i < resourceCnt; i += 1) {\n            for (let seg of segGroups[i]) {\n                transformedSegs.push(...this.transformSeg(seg, resourceDayTable, i));\n            }\n            for (let seg of segGroups[resourceCnt]) { // one beyond. the all-resource\n                transformedSegs.push(...this.transformSeg(seg, resourceDayTable, i));\n            }\n        }\n        return transformedSegs;\n    }\n    /*\n    for expanding non-resource segs to all resources.\n    only for public use.\n    no memoizing.\n    */\n    expandSegs(resourceDayTable, segs) {\n        let resourceCnt = resourceDayTable.resources.length;\n        let transformedSegs = [];\n        for (let i = 0; i < resourceCnt; i += 1) {\n            for (let seg of segs) {\n                transformedSegs.push(...this.transformSeg(seg, resourceDayTable, i));\n            }\n        }\n        return transformedSegs;\n    }\n    joinInteractions(resourceDayTable, ...interactions) {\n        let resourceCnt = resourceDayTable.resources.length;\n        let affectedInstances = {};\n        let transformedSegs = [];\n        let anyInteractions = false;\n        let isEvent = false;\n        for (let i = 0; i < resourceCnt; i += 1) {\n            let interaction = interactions[i];\n            if (interaction) {\n                anyInteractions = true;\n                for (let seg of interaction.segs) {\n                    transformedSegs.push(...this.transformSeg(seg, resourceDayTable, i));\n                }\n                Object.assign(affectedInstances, interaction.affectedInstances);\n                isEvent = isEvent || interaction.isEvent;\n            }\n            if (interactions[resourceCnt]) { // one beyond. the all-resource\n                for (let seg of interactions[resourceCnt].segs) {\n                    transformedSegs.push(...this.transformSeg(seg, resourceDayTable, i));\n                }\n            }\n        }\n        if (anyInteractions) {\n            return {\n                affectedInstances,\n                segs: transformedSegs,\n                isEvent,\n            };\n        }\n        return null;\n    }\n}\n\n/*\nTODO: just use ResourceHash somehow? could then use the generic ResourceSplitter\n*/\nclass VResourceSplitter extends Splitter {\n    getKeyInfo(props) {\n        let { resourceDayTableModel } = props;\n        let hash = mapHash(resourceDayTableModel.resourceIndex.indicesById, (i) => resourceDayTableModel.resources[i]); // :(\n        hash[''] = {};\n        return hash;\n    }\n    getKeysForDateSpan(dateSpan) {\n        return [dateSpan.resourceId || ''];\n    }\n    getKeysForEventDef(eventDef) {\n        let resourceIds = eventDef.resourceIds;\n        if (!resourceIds.length) {\n            return [''];\n        }\n        return resourceIds;\n    }\n}\n\n/*\ndoesn't accept grouping\n*/\nfunction flattenResources(resourceStore, orderSpecs) {\n    return buildRowNodes(resourceStore, [], orderSpecs, false, {}, true)\n        .map((node) => node.resource);\n}\nfunction buildRowNodes(resourceStore, groupSpecs, orderSpecs, isVGrouping, expansions, expansionDefault) {\n    let complexNodes = buildHierarchy(resourceStore, isVGrouping ? -1 : 1, groupSpecs, orderSpecs);\n    let flatNodes = [];\n    flattenNodes(complexNodes, flatNodes, isVGrouping, [], 0, expansions, expansionDefault);\n    return flatNodes;\n}\nfunction flattenNodes(complexNodes, res, isVGrouping, rowSpans, depth, expansions, expansionDefault) {\n    for (let i = 0; i < complexNodes.length; i += 1) {\n        let complexNode = complexNodes[i];\n        let group = complexNode.group;\n        if (group) {\n            if (isVGrouping) {\n                let firstRowIndex = res.length;\n                let rowSpanIndex = rowSpans.length;\n                flattenNodes(complexNode.children, res, isVGrouping, rowSpans.concat(0), depth, expansions, expansionDefault);\n                if (firstRowIndex < res.length) {\n                    let firstRow = res[firstRowIndex];\n                    let firstRowSpans = firstRow.rowSpans = firstRow.rowSpans.slice();\n                    firstRowSpans[rowSpanIndex] = res.length - firstRowIndex;\n                }\n            }\n            else {\n                let id = group.spec.field + ':' + group.value;\n                let isExpanded = expansions[id] != null ? expansions[id] : expansionDefault;\n                res.push({ id, group, isExpanded });\n                if (isExpanded) {\n                    flattenNodes(complexNode.children, res, isVGrouping, rowSpans, depth + 1, expansions, expansionDefault);\n                }\n            }\n        }\n        else if (complexNode.resource) {\n            let id = complexNode.resource.id;\n            let isExpanded = expansions[id] != null ? expansions[id] : expansionDefault;\n            res.push({\n                id,\n                rowSpans,\n                depth,\n                isExpanded,\n                hasChildren: Boolean(complexNode.children.length),\n                resource: complexNode.resource,\n                resourceFields: complexNode.resourceFields,\n            });\n            if (isExpanded) {\n                flattenNodes(complexNode.children, res, isVGrouping, rowSpans, depth + 1, expansions, expansionDefault);\n            }\n        }\n    }\n}\nfunction buildHierarchy(resourceStore, maxDepth, groupSpecs, orderSpecs) {\n    let resourceNodes = buildResourceNodes(resourceStore, orderSpecs);\n    let builtNodes = [];\n    for (let resourceId in resourceNodes) {\n        let resourceNode = resourceNodes[resourceId];\n        if (!resourceNode.resource.parentId) {\n            insertResourceNode(resourceNode, builtNodes, groupSpecs, 0, maxDepth, orderSpecs);\n        }\n    }\n    return builtNodes;\n}\nfunction buildResourceNodes(resourceStore, orderSpecs) {\n    let nodeHash = {};\n    for (let resourceId in resourceStore) {\n        let resource = resourceStore[resourceId];\n        nodeHash[resourceId] = {\n            resource,\n            resourceFields: buildResourceFields(resource),\n            children: [],\n        };\n    }\n    for (let resourceId in resourceStore) {\n        let resource = resourceStore[resourceId];\n        if (resource.parentId) {\n            let parentNode = nodeHash[resource.parentId];\n            if (parentNode) {\n                insertResourceNodeInSiblings(nodeHash[resourceId], parentNode.children, orderSpecs);\n            }\n        }\n    }\n    return nodeHash;\n}\nfunction insertResourceNode(resourceNode, nodes, groupSpecs, depth, maxDepth, orderSpecs) {\n    if (groupSpecs.length && (maxDepth === -1 || depth <= maxDepth)) {\n        let groupNode = ensureGroupNodes(resourceNode, nodes, groupSpecs[0]);\n        insertResourceNode(resourceNode, groupNode.children, groupSpecs.slice(1), depth + 1, maxDepth, orderSpecs);\n    }\n    else {\n        insertResourceNodeInSiblings(resourceNode, nodes, orderSpecs);\n    }\n}\nfunction ensureGroupNodes(resourceNode, nodes, groupSpec) {\n    let groupValue = resourceNode.resourceFields[groupSpec.field];\n    let groupNode;\n    let newGroupIndex;\n    // find an existing group that matches, or determine the position for a new group\n    if (groupSpec.order) {\n        for (newGroupIndex = 0; newGroupIndex < nodes.length; newGroupIndex += 1) {\n            let node = nodes[newGroupIndex];\n            if (node.group) {\n                let cmp = flexibleCompare(groupValue, node.group.value) * groupSpec.order;\n                if (cmp === 0) {\n                    groupNode = node;\n                    break;\n                }\n                else if (cmp < 0) {\n                    break;\n                }\n            }\n        }\n    }\n    else { // the groups are unordered\n        for (newGroupIndex = 0; newGroupIndex < nodes.length; newGroupIndex += 1) {\n            let node = nodes[newGroupIndex];\n            if (node.group && groupValue === node.group.value) {\n                groupNode = node;\n                break;\n            }\n        }\n    }\n    if (!groupNode) {\n        groupNode = {\n            group: {\n                value: groupValue,\n                spec: groupSpec,\n            },\n            children: [],\n        };\n        nodes.splice(newGroupIndex, 0, groupNode);\n    }\n    return groupNode;\n}\nfunction insertResourceNodeInSiblings(resourceNode, siblings, orderSpecs) {\n    let i;\n    for (i = 0; i < siblings.length; i += 1) {\n        let cmp = compareByFieldSpecs(siblings[i].resourceFields, resourceNode.resourceFields, orderSpecs); // TODO: pass in ResourceApi?\n        if (cmp > 0) { // went 1 past. insert at i\n            break;\n        }\n    }\n    siblings.splice(i, 0, resourceNode);\n}\nfunction buildResourceFields(resource) {\n    let obj = Object.assign(Object.assign(Object.assign({}, resource.extendedProps), resource.ui), resource);\n    delete obj.ui;\n    delete obj.extendedProps;\n    return obj;\n}\nfunction isGroupsEqual(group0, group1) {\n    return group0.spec === group1.spec && group0.value === group1.value;\n}\n\nexport { AbstractResourceDayTableModel as A, DEFAULT_RESOURCE_ORDER as D, ResourceApi as R, VResourceJoiner as V, ResourceSplitter as a, ResourceDayHeader as b, ResourceDayTableModel as c, DayResourceTableModel as d, VResourceSplitter as e, flattenResources as f, getPublicId as g, handleResourceStore as h, isGroupsEqual as i, buildRowNodes as j, buildResourceFields as k, ResourceLabelContainer as l, parseResource as p, refineRenderProps$1 as r };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}