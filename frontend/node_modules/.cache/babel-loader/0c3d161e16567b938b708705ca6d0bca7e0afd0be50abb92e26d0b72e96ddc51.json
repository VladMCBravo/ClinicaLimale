{"ast":null,"code":"import _objectSpread from\"/Users/macmini/Documents/Sistema_Consultorio/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// src/components/painel/ControlesAgenda.jsx - VERSÃO COM IMPORT CORRIGIDO\nimport React,{useState,useEffect}from'react';import{Box,Paper,Typography,Autocomplete,TextField,Button,Divider,IconButton,Tooltip// <<-- Tooltip foi adicionado aqui\n}from'@mui/material';import PersonAddIcon from'@mui/icons-material/PersonAdd';import AddCardIcon from'@mui/icons-material/AddCard';import ClearIcon from'@mui/icons-material/Clear';import{agendamentoService}from'../../services/agendamentoService';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function ControlesAgenda(_ref){let{onNovoPacienteClick,onCaixaClick,onFiltroChange}=_ref;const[medicos,setMedicos]=useState([]);const[especialidades,setEspecialidades]=useState([]);const[especialidadeSelecionada,setEspecialidadeSelecionada]=useState(null);const[medicoSelecionado,setMedicoSelecionado]=useState(null);useEffect(()=>{agendamentoService.getModalData().then(_ref2=>{let[pacientesRes,procedimentosRes,medicosRes,especialidadesRes]=_ref2;setMedicos(medicosRes.data);setEspecialidades(especialidadesRes.data);}).catch(error=>console.error(\"Erro ao carregar dados dos filtros:\",error));},[]);useEffect(()=>{onFiltroChange({especialidadeId:especialidadeSelecionada?especialidadeSelecionada.id:'',medicoId:medicoSelecionado?medicoSelecionado.id:''});},[especialidadeSelecionada,medicoSelecionado,onFiltroChange]);const medicosFiltrados=especialidadeSelecionada?medicos.filter(m=>m.especialidades.includes(especialidadeSelecionada.id)):medicos;const handleEspecialidadeChange=(event,newValue)=>{setEspecialidadeSelecionada(newValue);setMedicoSelecionado(null);};const limparFiltros=()=>{setEspecialidadeSelecionada(null);setMedicoSelecionado(null);};return/*#__PURE__*/_jsxs(Paper,{variant:\"outlined\",sx:{p:2},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexDirection:'column',gap:1.5},children:[/*#__PURE__*/_jsx(Button,{variant:\"contained\",startIcon:/*#__PURE__*/_jsx(PersonAddIcon,{}),onClick:onNovoPacienteClick,children:\"Novo Paciente\"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",startIcon:/*#__PURE__*/_jsx(AddCardIcon,{}),color:\"secondary\",onClick:onCaixaClick,children:\"Lan\\xE7amento no Caixa\"})]}),/*#__PURE__*/_jsx(Divider,{sx:{my:2}}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center',mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{fontSize:'1rem'},children:\"Filtros da Agenda\"}),/*#__PURE__*/_jsx(Tooltip,{title:\"Limpar filtros\",children:/*#__PURE__*/_jsx(IconButton,{onClick:limparFiltros,size:\"small\",children:/*#__PURE__*/_jsx(ClearIcon,{})})})]}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexDirection:'column',gap:2},children:[/*#__PURE__*/_jsx(Autocomplete,{options:especialidades,getOptionLabel:option=>option.nome||'',value:especialidadeSelecionada,onChange:handleEspecialidadeChange,isOptionEqualToValue:(option,value)=>option.id===value.id,renderInput:params=>/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{label:\"Especialidade\",size:\"small\"}))}),/*#__PURE__*/_jsx(Autocomplete,{options:medicosFiltrados,getOptionLabel:option=>\"\".concat(option.first_name,\" \").concat(option.last_name)||'',value:medicoSelecionado,onChange:(event,newValue)=>setMedicoSelecionado(newValue),isOptionEqualToValue:(option,value)=>option.id===value.id,renderInput:params=>/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{label:\"M\\xE9dico\",size:\"small\"}))})]})]})]});}","map":{"version":3,"names":["React","useState","useEffect","Box","Paper","Typography","Autocomplete","TextField","Button","Divider","IconButton","Tooltip","PersonAddIcon","AddCardIcon","ClearIcon","agendamentoService","jsx","_jsx","jsxs","_jsxs","ControlesAgenda","_ref","onNovoPacienteClick","onCaixaClick","onFiltroChange","medicos","setMedicos","especialidades","setEspecialidades","especialidadeSelecionada","setEspecialidadeSelecionada","medicoSelecionado","setMedicoSelecionado","getModalData","then","_ref2","pacientesRes","procedimentosRes","medicosRes","especialidadesRes","data","catch","error","console","especialidadeId","id","medicoId","medicosFiltrados","filter","m","includes","handleEspecialidadeChange","event","newValue","limparFiltros","variant","sx","p","children","display","flexDirection","gap","startIcon","onClick","color","my","justifyContent","alignItems","mb","fontSize","title","size","options","getOptionLabel","option","nome","value","onChange","isOptionEqualToValue","renderInput","params","_objectSpread","label","concat","first_name","last_name"],"sources":["/Users/macmini/Documents/Sistema_Consultorio/frontend/src/components/painel/ControlesAgenda.jsx"],"sourcesContent":["// src/components/painel/ControlesAgenda.jsx - VERSÃO COM IMPORT CORRIGIDO\nimport React, { useState, useEffect } from 'react';\nimport {\n    Box, Paper, Typography, Autocomplete, TextField,\n    Button, Divider, IconButton, Tooltip // <<-- Tooltip foi adicionado aqui\n} from '@mui/material';\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\nimport AddCardIcon from '@mui/icons-material/AddCard';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport { agendamentoService } from '../../services/agendamentoService';\n\nexport default function ControlesAgenda({ onNovoPacienteClick, onCaixaClick, onFiltroChange }) {\n    const [medicos, setMedicos] = useState([]);\n    const [especialidades, setEspecialidades] = useState([]);\n    const [especialidadeSelecionada, setEspecialidadeSelecionada] = useState(null);\n    const [medicoSelecionado, setMedicoSelecionado] = useState(null);\n\n    useEffect(() => {\n        agendamentoService.getModalData()\n            .then(([pacientesRes, procedimentosRes, medicosRes, especialidadesRes]) => {\n                setMedicos(medicosRes.data);\n                setEspecialidades(especialidadesRes.data);\n            })\n            .catch(error => console.error(\"Erro ao carregar dados dos filtros:\", error));\n    }, []);\n\n    useEffect(() => {\n        onFiltroChange({\n            especialidadeId: especialidadeSelecionada ? especialidadeSelecionada.id : '',\n            medicoId: medicoSelecionado ? medicoSelecionado.id : ''\n        });\n    }, [especialidadeSelecionada, medicoSelecionado, onFiltroChange]);\n\n    const medicosFiltrados = especialidadeSelecionada\n        ? medicos.filter(m => m.especialidades.includes(especialidadeSelecionada.id))\n        : medicos;\n\n    const handleEspecialidadeChange = (event, newValue) => {\n        setEspecialidadeSelecionada(newValue);\n        setMedicoSelecionado(null);\n    };\n    \n    const limparFiltros = () => {\n        setEspecialidadeSelecionada(null);\n        setMedicoSelecionado(null);\n    };\n\n    return (\n        <Paper variant=\"outlined\" sx={{ p: 2 }}>\n            <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1.5 }}>\n                <Button \n                    variant=\"contained\" \n                    startIcon={<PersonAddIcon />}\n                    onClick={onNovoPacienteClick}\n                >\n                    Novo Paciente\n                </Button>\n                <Button \n                    variant=\"outlined\" \n                    startIcon={<AddCardIcon />} \n                    color=\"secondary\"\n                    onClick={onCaixaClick}\n                >\n                    Lançamento no Caixa\n                </Button>\n            </Box>\n\n            <Divider sx={{ my: 2 }} />\n\n            <Box>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n                    <Typography variant=\"h6\" sx={{ fontSize: '1rem' }}>Filtros da Agenda</Typography>\n                    <Tooltip title=\"Limpar filtros\">\n                        <IconButton onClick={limparFiltros} size=\"small\">\n                            <ClearIcon />\n                        </IconButton>\n                    </Tooltip>\n                </Box>\n                <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n                    <Autocomplete\n                        options={especialidades}\n                        getOptionLabel={(option) => option.nome || ''}\n                        value={especialidadeSelecionada}\n                        onChange={handleEspecialidadeChange}\n                        isOptionEqualToValue={(option, value) => option.id === value.id}\n                        renderInput={(params) => <TextField {...params} label=\"Especialidade\" size=\"small\" />}\n                    />\n                    <Autocomplete\n                        options={medicosFiltrados}\n                        getOptionLabel={(option) => `${option.first_name} ${option.last_name}` || ''}\n                        value={medicoSelecionado}\n                        onChange={(event, newValue) => setMedicoSelecionado(newValue)}\n                        isOptionEqualToValue={(option, value) => option.id === value.id}\n                        renderInput={(params) => <TextField {...params} label=\"Médico\" size=\"small\" />}\n                    />\n                </Box>\n            </Box>\n        </Paper>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}