{"ast":null,"code":"import _objectSpread from\"/Users/macmini/Documents/Sistema_Consultorio/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// src/components/agenda/AgendaPrincipal.jsx - VERSÃO COM IMPORTS CORRIGIDOS\nimport React,{useRef,useCallback,useEffect}from'react';import{Box,Paper}from'@mui/material';import FullCalendar from'@fullcalendar/react';// <<-- AS IMPORTAÇÕES QUE FALTAVAM ESTÃO AQUI -->>\nimport dayGridPlugin from'@fullcalendar/daygrid';import timeGridPlugin from'@fullcalendar/timegrid';import interactionPlugin from'@fullcalendar/interaction';import resourceTimeGridPlugin from'@fullcalendar/resource-timegrid';// <<-- FIM DA CORREÇÃO -->>\nimport{agendamentoService}from'../../services/agendamentoService';// Função para gerar cores por sala\nimport{jsx as _jsx}from\"react/jsx-runtime\";const SALA_COLORS=['#3788d8','#33a088','#b54c38','#8f4dae','#e59400'];const getColorForSala=salaId=>{const numericId=parseInt(String(salaId).replace(/\\D/g,''),10)||0;return SALA_COLORS[numericId%SALA_COLORS.length];};export default function AgendaPrincipal(_ref){let{medicoFiltro,especialidadeFiltro,onDateClick,onEventClick,salas=[]}=_ref;const calendarRef=useRef(null);const fetchEvents=useCallback((fetchInfo,successCallback,failureCallback)=>{agendamentoService.getAgendamentos(medicoFiltro,especialidadeFiltro).then(response=>{const eventosFormatados=response.data.filter(ag=>ag.status!=='Cancelado'&&ag.sala).map(ag=>({id:ag.id,title:ag.paciente_nome,start:ag.data_hora_inicio,end:ag.data_hora_fim,extendedProps:_objectSpread({},ag),resourceId:String(ag.sala),backgroundColor:getColorForSala(ag.sala),borderColor:getColorForSala(ag.sala)}));successCallback(eventosFormatados);}).catch(error=>failureCallback(error));},[medicoFiltro,especialidadeFiltro]);useEffect(()=>{if(calendarRef.current){calendarRef.current.getApi().refetchEvents();}},[medicoFiltro,especialidadeFiltro]);return/*#__PURE__*/_jsx(Paper,{variant:\"outlined\",sx:{p:2,height:'100%',display:'flex',flexDirection:'column',flexGrow:1},children:/*#__PURE__*/_jsx(FullCalendar,{ref:calendarRef,plugins:[resourceTimeGridPlugin,dayGridPlugin,timeGridPlugin,interactionPlugin],schedulerLicenseKey:\"GPL-TO-REMOVE-THE-WARNING\",initialView:\"resourceTimeGridDay\",headerToolbar:{left:'prev,next today',center:'title',right:'resourceTimeGridDay,timeGridWeek,dayGridMonth'},buttonText:{resourceTimeGridDay:'Salas',week:'Semana',month:'Mês',today:'Hoje'},locale:\"pt-br\",height:\"100%\",events:fetchEvents,resources:salas.map(s=>({id:String(s.id),title:s.nome})),dateClick:onDateClick,eventClick:onEventClick,slotMinTime:\"08:00:00\",slotMaxTime:\"20:00:00\",allDaySlot:false,nowIndicator:true})});}","map":{"version":3,"names":["React","useRef","useCallback","useEffect","Box","Paper","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","resourceTimeGridPlugin","agendamentoService","jsx","_jsx","SALA_COLORS","getColorForSala","salaId","numericId","parseInt","String","replace","length","AgendaPrincipal","_ref","medicoFiltro","especialidadeFiltro","onDateClick","onEventClick","salas","calendarRef","fetchEvents","fetchInfo","successCallback","failureCallback","getAgendamentos","then","response","eventosFormatados","data","filter","ag","status","sala","map","id","title","paciente_nome","start","data_hora_inicio","end","data_hora_fim","extendedProps","_objectSpread","resourceId","backgroundColor","borderColor","catch","error","current","getApi","refetchEvents","variant","sx","p","height","display","flexDirection","flexGrow","children","ref","plugins","schedulerLicenseKey","initialView","headerToolbar","left","center","right","buttonText","resourceTimeGridDay","week","month","today","locale","events","resources","s","nome","dateClick","eventClick","slotMinTime","slotMaxTime","allDaySlot","nowIndicator"],"sources":["/Users/macmini/Documents/Sistema_Consultorio/frontend/src/components/agenda/AgendaPrincipal.jsx"],"sourcesContent":["// src/components/agenda/AgendaPrincipal.jsx - VERSÃO COM IMPORTS CORRIGIDOS\nimport React, { useRef, useCallback, useEffect } from 'react';\nimport { Box, Paper } from '@mui/material';\nimport FullCalendar from '@fullcalendar/react';\n\n// <<-- AS IMPORTAÇÕES QUE FALTAVAM ESTÃO AQUI -->>\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport resourceTimeGridPlugin from '@fullcalendar/resource-timegrid';\n// <<-- FIM DA CORREÇÃO -->>\n\nimport { agendamentoService } from '../../services/agendamentoService';\n\n// Função para gerar cores por sala\nconst SALA_COLORS = ['#3788d8', '#33a088', '#b54c38', '#8f4dae', '#e59400'];\nconst getColorForSala = (salaId) => {\n    const numericId = parseInt(String(salaId).replace(/\\D/g, ''), 10) || 0;\n    return SALA_COLORS[numericId % SALA_COLORS.length];\n};\n\nexport default function AgendaPrincipal({\n    medicoFiltro, especialidadeFiltro, onDateClick, onEventClick, salas = []\n}) {\n    const calendarRef = useRef(null);\n\n    const fetchEvents = useCallback((fetchInfo, successCallback, failureCallback) => {\n        agendamentoService.getAgendamentos(medicoFiltro, especialidadeFiltro)\n            .then(response => {\n                const eventosFormatados = response.data\n                    .filter(ag => ag.status !== 'Cancelado' && ag.sala)\n                    .map(ag => ({\n                        id: ag.id,\n                        title: ag.paciente_nome,\n                        start: ag.data_hora_inicio,\n                        end: ag.data_hora_fim,\n                        extendedProps: { ...ag },\n                        resourceId: String(ag.sala),\n                        backgroundColor: getColorForSala(ag.sala),\n                        borderColor: getColorForSala(ag.sala)\n                    }));\n                successCallback(eventosFormatados);\n            })\n            .catch(error => failureCallback(error));\n    }, [medicoFiltro, especialidadeFiltro]);\n\n    useEffect(() => {\n        if (calendarRef.current) {\n            calendarRef.current.getApi().refetchEvents();\n        }\n    }, [medicoFiltro, especialidadeFiltro]);\n\n    return (\n        <Paper variant=\"outlined\" sx={{ p: 2, height: '100%', display: 'flex', flexDirection: 'column', flexGrow: 1 }}>\n            <FullCalendar\n                ref={calendarRef}\n                plugins={[resourceTimeGridPlugin, dayGridPlugin, timeGridPlugin, interactionPlugin]}\n                schedulerLicenseKey=\"GPL-TO-REMOVE-THE-WARNING\"\n                initialView=\"resourceTimeGridDay\"\n                headerToolbar={{\n                    left: 'prev,next today', center: 'title', right: 'resourceTimeGridDay,timeGridWeek,dayGridMonth'\n                }}\n                buttonText={{ resourceTimeGridDay: 'Salas', week: 'Semana', month: 'Mês', today: 'Hoje' }}\n                locale=\"pt-br\"\n                height=\"100%\"\n                events={fetchEvents}\n                resources={salas.map(s => ({ id: String(s.id), title: s.nome }))}\n                dateClick={onDateClick}\n                eventClick={onEventClick}\n                slotMinTime=\"08:00:00\"\n                slotMaxTime=\"20:00:00\"\n                allDaySlot={false}\n                nowIndicator={true}\n            />\n        </Paper>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}