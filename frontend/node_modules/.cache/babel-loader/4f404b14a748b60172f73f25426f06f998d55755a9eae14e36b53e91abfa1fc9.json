{"ast":null,"code":"// src/services/agendamentoService.js\nimport apiClient from'../api/axiosConfig';const getAgendamentos=(medicoId,especialidadeId)=>{const params=new URLSearchParams();if(medicoId){params.append('medico_id',medicoId);}if(especialidadeId){params.append('especialidade_id',especialidadeId);}const queryString=params.toString();const url=\"/agendamentos/\".concat(queryString?\"?\".concat(queryString):'');return apiClient.get(url);};const getAgendamentosHoje=medicoId=>{const params=new URLSearchParams();if(medicoId){params.append('medico_id',medicoId);}const queryString=params.toString();const url=\"/agendamentos/hoje/\".concat(queryString?\"?\".concat(queryString):'');return apiClient.get(url);};// ADICIONE A NOVA FUNÇÃO ABAIXO\nconst getListaEspera=()=>{return apiClient.get('/agendamentos/espera/');};// <<-- NOVA FUNÇÃO ADICIONADA AQUI -->>\nconst getSalas=()=>{return apiClient.get('/agendamentos/salas/');};const createAgendamento=data=>apiClient.post('/agendamentos/',data);const updateAgendamento=(id,data)=>apiClient.put(\"/agendamentos/\".concat(id,\"/\"),data);const verificarCapacidade=(inicio,fim)=>{const params=new URLSearchParams({inicio,fim});return apiClient.get(\"/agendamentos/verificar-capacidade/?\".concat(params.toString()));};const getModalData=()=>{const fetchPacientes=apiClient.get('/pacientes/');const fetchProcedimentos=apiClient.get('/faturamento/procedimentos/');const fetchMedicos=apiClient.get('/usuarios/usuarios/?cargo=medico');const fetchEspecialidades=apiClient.get('/usuarios/especialidades/');return Promise.all([fetchPacientes,fetchProcedimentos,fetchMedicos,fetchEspecialidades]);};// ADICIONE A NOVA FUNÇÃO ABAIXO\nconst verificarDisponibilidade=_ref=>{let{data,medicoId,especialidadeId}=_ref;const params=new URLSearchParams();params.append('data',data);// Formato YYYY-MM-DD\nif(medicoId){params.append('medico_id',medicoId);}if(especialidadeId){params.append('especialidade_id',especialidadeId);}/// A CORREÇÃO ESTÁ AQUI: 'disponiveis' em vez de 'disponisponiveis'\nconst url=\"/agendamentos/horarios-disponiveis/?\".concat(params.toString());return apiClient.get(url);};const getMinhaAgenda=()=>{// Este endpoint deve corresponder ao que você criou no backend\nreturn apiClient.get('/agendamentos/minha-agenda/');};export const agendamentoService={getAgendamentos,getAgendamentosHoje,getListaEspera,getSalas,// <-- Exporte a nova função\ncreateAgendamento,updateAgendamento,getModalData,verificarCapacidade,verificarDisponibilidade,getMinhaAgenda};","map":{"version":3,"names":["apiClient","getAgendamentos","medicoId","especialidadeId","params","URLSearchParams","append","queryString","toString","url","concat","get","getAgendamentosHoje","getListaEspera","getSalas","createAgendamento","data","post","updateAgendamento","id","put","verificarCapacidade","inicio","fim","getModalData","fetchPacientes","fetchProcedimentos","fetchMedicos","fetchEspecialidades","Promise","all","verificarDisponibilidade","_ref","getMinhaAgenda","agendamentoService"],"sources":["/Users/macmini/Documents/Sistema_Consultorio/frontend/src/services/agendamentoService.js"],"sourcesContent":["// src/services/agendamentoService.js\nimport apiClient from '../api/axiosConfig';\n\nconst getAgendamentos = (medicoId, especialidadeId) => {\n    const params = new URLSearchParams();\n    if (medicoId) {\n        params.append('medico_id', medicoId);\n    }\n    if (especialidadeId) {\n        params.append('especialidade_id', especialidadeId);\n    }\n    const queryString = params.toString();\n    const url = `/agendamentos/${queryString ? `?${queryString}` : ''}`;\n    return apiClient.get(url);\n};\n\nconst getAgendamentosHoje = (medicoId) => {\n    const params = new URLSearchParams();\n    if (medicoId) {\n        params.append('medico_id', medicoId);\n    }\n    const queryString = params.toString();\n    const url = `/agendamentos/hoje/${queryString ? `?${queryString}` : ''}`;\n    return apiClient.get(url);\n};\n// ADICIONE A NOVA FUNÇÃO ABAIXO\nconst getListaEspera = () => {\n    return apiClient.get('/agendamentos/espera/');\n};\n// <<-- NOVA FUNÇÃO ADICIONADA AQUI -->>\nconst getSalas = () => {\n    return apiClient.get('/agendamentos/salas/');\n};\nconst createAgendamento = (data) => apiClient.post('/agendamentos/', data);\nconst updateAgendamento = (id, data) => apiClient.put(`/agendamentos/${id}/`, data);\nconst verificarCapacidade = (inicio, fim) => {\n    const params = new URLSearchParams({ inicio, fim });\n    return apiClient.get(`/agendamentos/verificar-capacidade/?${params.toString()}`);\n};\n\n\n\nconst getModalData = () => {\n    const fetchPacientes = apiClient.get('/pacientes/');\n    const fetchProcedimentos = apiClient.get('/faturamento/procedimentos/');\n    const fetchMedicos = apiClient.get('/usuarios/usuarios/?cargo=medico');\n    const fetchEspecialidades = apiClient.get('/usuarios/especialidades/');\n    return Promise.all([fetchPacientes, fetchProcedimentos, fetchMedicos, fetchEspecialidades]);\n};\n\n// ADICIONE A NOVA FUNÇÃO ABAIXO\nconst verificarDisponibilidade = ({ data, medicoId, especialidadeId }) => {\n    const params = new URLSearchParams();\n    params.append('data', data); // Formato YYYY-MM-DD\n    if (medicoId) {\n        params.append('medico_id', medicoId);\n    }\n    if (especialidadeId) {\n        params.append('especialidade_id', especialidadeId);\n    }\n    \n    /// A CORREÇÃO ESTÁ AQUI: 'disponiveis' em vez de 'disponisponiveis'\n    const url = `/agendamentos/horarios-disponiveis/?${params.toString()}`;\n    \n    return apiClient.get(url);\n};\n\nconst getMinhaAgenda = () => {\n    // Este endpoint deve corresponder ao que você criou no backend\n    return apiClient.get('/agendamentos/minha-agenda/'); \n};\n\nexport const agendamentoService = {\n    getAgendamentos,\n    getAgendamentosHoje,\n    getListaEspera,\n    getSalas, // <-- Exporte a nova função\n    createAgendamento,\n    updateAgendamento,\n    getModalData,\n    verificarCapacidade,\n    verificarDisponibilidade,\n    getMinhaAgenda  \n};"],"mappings":"AAAA;AACA,MAAO,CAAAA,SAAS,KAAM,oBAAoB,CAE1C,KAAM,CAAAC,eAAe,CAAGA,CAACC,QAAQ,CAAEC,eAAe,GAAK,CACnD,KAAM,CAAAC,MAAM,CAAG,GAAI,CAAAC,eAAe,CAAC,CAAC,CACpC,GAAIH,QAAQ,CAAE,CACVE,MAAM,CAACE,MAAM,CAAC,WAAW,CAAEJ,QAAQ,CAAC,CACxC,CACA,GAAIC,eAAe,CAAE,CACjBC,MAAM,CAACE,MAAM,CAAC,kBAAkB,CAAEH,eAAe,CAAC,CACtD,CACA,KAAM,CAAAI,WAAW,CAAGH,MAAM,CAACI,QAAQ,CAAC,CAAC,CACrC,KAAM,CAAAC,GAAG,kBAAAC,MAAA,CAAoBH,WAAW,KAAAG,MAAA,CAAOH,WAAW,EAAK,EAAE,CAAE,CACnE,MAAO,CAAAP,SAAS,CAACW,GAAG,CAACF,GAAG,CAAC,CAC7B,CAAC,CAED,KAAM,CAAAG,mBAAmB,CAAIV,QAAQ,EAAK,CACtC,KAAM,CAAAE,MAAM,CAAG,GAAI,CAAAC,eAAe,CAAC,CAAC,CACpC,GAAIH,QAAQ,CAAE,CACVE,MAAM,CAACE,MAAM,CAAC,WAAW,CAAEJ,QAAQ,CAAC,CACxC,CACA,KAAM,CAAAK,WAAW,CAAGH,MAAM,CAACI,QAAQ,CAAC,CAAC,CACrC,KAAM,CAAAC,GAAG,uBAAAC,MAAA,CAAyBH,WAAW,KAAAG,MAAA,CAAOH,WAAW,EAAK,EAAE,CAAE,CACxE,MAAO,CAAAP,SAAS,CAACW,GAAG,CAACF,GAAG,CAAC,CAC7B,CAAC,CACD;AACA,KAAM,CAAAI,cAAc,CAAGA,CAAA,GAAM,CACzB,MAAO,CAAAb,SAAS,CAACW,GAAG,CAAC,uBAAuB,CAAC,CACjD,CAAC,CACD;AACA,KAAM,CAAAG,QAAQ,CAAGA,CAAA,GAAM,CACnB,MAAO,CAAAd,SAAS,CAACW,GAAG,CAAC,sBAAsB,CAAC,CAChD,CAAC,CACD,KAAM,CAAAI,iBAAiB,CAAIC,IAAI,EAAKhB,SAAS,CAACiB,IAAI,CAAC,gBAAgB,CAAED,IAAI,CAAC,CAC1E,KAAM,CAAAE,iBAAiB,CAAGA,CAACC,EAAE,CAAEH,IAAI,GAAKhB,SAAS,CAACoB,GAAG,kBAAAV,MAAA,CAAkBS,EAAE,MAAKH,IAAI,CAAC,CACnF,KAAM,CAAAK,mBAAmB,CAAGA,CAACC,MAAM,CAAEC,GAAG,GAAK,CACzC,KAAM,CAAAnB,MAAM,CAAG,GAAI,CAAAC,eAAe,CAAC,CAAEiB,MAAM,CAAEC,GAAI,CAAC,CAAC,CACnD,MAAO,CAAAvB,SAAS,CAACW,GAAG,wCAAAD,MAAA,CAAwCN,MAAM,CAACI,QAAQ,CAAC,CAAC,CAAE,CAAC,CACpF,CAAC,CAID,KAAM,CAAAgB,YAAY,CAAGA,CAAA,GAAM,CACvB,KAAM,CAAAC,cAAc,CAAGzB,SAAS,CAACW,GAAG,CAAC,aAAa,CAAC,CACnD,KAAM,CAAAe,kBAAkB,CAAG1B,SAAS,CAACW,GAAG,CAAC,6BAA6B,CAAC,CACvE,KAAM,CAAAgB,YAAY,CAAG3B,SAAS,CAACW,GAAG,CAAC,kCAAkC,CAAC,CACtE,KAAM,CAAAiB,mBAAmB,CAAG5B,SAAS,CAACW,GAAG,CAAC,2BAA2B,CAAC,CACtE,MAAO,CAAAkB,OAAO,CAACC,GAAG,CAAC,CAACL,cAAc,CAAEC,kBAAkB,CAAEC,YAAY,CAAEC,mBAAmB,CAAC,CAAC,CAC/F,CAAC,CAED;AACA,KAAM,CAAAG,wBAAwB,CAAGC,IAAA,EAAyC,IAAxC,CAAEhB,IAAI,CAAEd,QAAQ,CAAEC,eAAgB,CAAC,CAAA6B,IAAA,CACjE,KAAM,CAAA5B,MAAM,CAAG,GAAI,CAAAC,eAAe,CAAC,CAAC,CACpCD,MAAM,CAACE,MAAM,CAAC,MAAM,CAAEU,IAAI,CAAC,CAAE;AAC7B,GAAId,QAAQ,CAAE,CACVE,MAAM,CAACE,MAAM,CAAC,WAAW,CAAEJ,QAAQ,CAAC,CACxC,CACA,GAAIC,eAAe,CAAE,CACjBC,MAAM,CAACE,MAAM,CAAC,kBAAkB,CAAEH,eAAe,CAAC,CACtD,CAEA;AACA,KAAM,CAAAM,GAAG,wCAAAC,MAAA,CAA0CN,MAAM,CAACI,QAAQ,CAAC,CAAC,CAAE,CAEtE,MAAO,CAAAR,SAAS,CAACW,GAAG,CAACF,GAAG,CAAC,CAC7B,CAAC,CAED,KAAM,CAAAwB,cAAc,CAAGA,CAAA,GAAM,CACzB;AACA,MAAO,CAAAjC,SAAS,CAACW,GAAG,CAAC,6BAA6B,CAAC,CACvD,CAAC,CAED,MAAO,MAAM,CAAAuB,kBAAkB,CAAG,CAC9BjC,eAAe,CACfW,mBAAmB,CACnBC,cAAc,CACdC,QAAQ,CAAE;AACVC,iBAAiB,CACjBG,iBAAiB,CACjBM,YAAY,CACZH,mBAAmB,CACnBU,wBAAwB,CACxBE,cACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}