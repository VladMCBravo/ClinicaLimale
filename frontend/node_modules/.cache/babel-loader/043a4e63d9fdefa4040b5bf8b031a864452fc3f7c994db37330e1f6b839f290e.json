{"ast":null,"code":"import { createIsAfterIgnoreDatePart } from \"./time-utils.js\";\nimport { mergeDateAndTime, getTodayDate } from \"./date-utils.js\";\nexport const SECTION_TYPE_GRANULARITY = {\n  year: 1,\n  month: 2,\n  day: 3,\n  hours: 4,\n  minutes: 5,\n  seconds: 6,\n  milliseconds: 7\n};\nexport const getSectionTypeGranularity = sections => Math.max(...sections.map(section => {\n  var _SECTION_TYPE_GRANULA;\n  return (_SECTION_TYPE_GRANULA = SECTION_TYPE_GRANULARITY[section.type]) !== null && _SECTION_TYPE_GRANULA !== void 0 ? _SECTION_TYPE_GRANULA : 1;\n}));\nconst roundDate = (adapter, granularity, date) => {\n  if (granularity === SECTION_TYPE_GRANULARITY.year) {\n    return adapter.startOfYear(date);\n  }\n  if (granularity === SECTION_TYPE_GRANULARITY.month) {\n    return adapter.startOfMonth(date);\n  }\n  if (granularity === SECTION_TYPE_GRANULARITY.day) {\n    return adapter.startOfDay(date);\n  }\n\n  // We don't have startOfHour / startOfMinute / startOfSecond\n  let roundedDate = date;\n  if (granularity < SECTION_TYPE_GRANULARITY.minutes) {\n    roundedDate = adapter.setMinutes(roundedDate, 0);\n  }\n  if (granularity < SECTION_TYPE_GRANULARITY.seconds) {\n    roundedDate = adapter.setSeconds(roundedDate, 0);\n  }\n  if (granularity < SECTION_TYPE_GRANULARITY.milliseconds) {\n    roundedDate = adapter.setMilliseconds(roundedDate, 0);\n  }\n  return roundedDate;\n};\nexport const getDefaultReferenceDate = _ref => {\n  var _props$disableIgnorin;\n  let {\n    props,\n    adapter,\n    granularity,\n    timezone,\n    getTodayDate: inGetTodayDate\n  } = _ref;\n  let referenceDate = inGetTodayDate ? inGetTodayDate() : roundDate(adapter, granularity, getTodayDate(adapter, timezone));\n  if (props.minDate != null && adapter.isAfterDay(props.minDate, referenceDate)) {\n    referenceDate = roundDate(adapter, granularity, props.minDate);\n  }\n  if (props.maxDate != null && adapter.isBeforeDay(props.maxDate, referenceDate)) {\n    referenceDate = roundDate(adapter, granularity, props.maxDate);\n  }\n  const isAfter = createIsAfterIgnoreDatePart((_props$disableIgnorin = props.disableIgnoringDatePartForTimeValidation) !== null && _props$disableIgnorin !== void 0 ? _props$disableIgnorin : false, adapter);\n  if (props.minTime != null && isAfter(props.minTime, referenceDate)) {\n    referenceDate = roundDate(adapter, granularity, props.disableIgnoringDatePartForTimeValidation ? props.minTime : mergeDateAndTime(adapter, referenceDate, props.minTime));\n  }\n  if (props.maxTime != null && isAfter(referenceDate, props.maxTime)) {\n    referenceDate = roundDate(adapter, granularity, props.disableIgnoringDatePartForTimeValidation ? props.maxTime : mergeDateAndTime(adapter, referenceDate, props.maxTime));\n  }\n  return referenceDate;\n};","map":{"version":3,"names":["createIsAfterIgnoreDatePart","mergeDateAndTime","getTodayDate","SECTION_TYPE_GRANULARITY","year","month","day","hours","minutes","seconds","milliseconds","getSectionTypeGranularity","sections","Math","max","map","section","_SECTION_TYPE_GRANULA","type","roundDate","adapter","granularity","date","startOfYear","startOfMonth","startOfDay","roundedDate","setMinutes","setSeconds","setMilliseconds","getDefaultReferenceDate","_ref","_props$disableIgnorin","props","timezone","inGetTodayDate","referenceDate","minDate","isAfterDay","maxDate","isBeforeDay","isAfter","disableIgnoringDatePartForTimeValidation","minTime","maxTime"],"sources":["/Users/macmini/Documents/Sistema_Consultorio/frontend/node_modules/@mui/x-date-pickers/esm/internals/utils/getDefaultReferenceDate.js"],"sourcesContent":["import { createIsAfterIgnoreDatePart } from \"./time-utils.js\";\nimport { mergeDateAndTime, getTodayDate } from \"./date-utils.js\";\nexport const SECTION_TYPE_GRANULARITY = {\n  year: 1,\n  month: 2,\n  day: 3,\n  hours: 4,\n  minutes: 5,\n  seconds: 6,\n  milliseconds: 7\n};\nexport const getSectionTypeGranularity = sections => Math.max(...sections.map(section => SECTION_TYPE_GRANULARITY[section.type] ?? 1));\nconst roundDate = (adapter, granularity, date) => {\n  if (granularity === SECTION_TYPE_GRANULARITY.year) {\n    return adapter.startOfYear(date);\n  }\n  if (granularity === SECTION_TYPE_GRANULARITY.month) {\n    return adapter.startOfMonth(date);\n  }\n  if (granularity === SECTION_TYPE_GRANULARITY.day) {\n    return adapter.startOfDay(date);\n  }\n\n  // We don't have startOfHour / startOfMinute / startOfSecond\n  let roundedDate = date;\n  if (granularity < SECTION_TYPE_GRANULARITY.minutes) {\n    roundedDate = adapter.setMinutes(roundedDate, 0);\n  }\n  if (granularity < SECTION_TYPE_GRANULARITY.seconds) {\n    roundedDate = adapter.setSeconds(roundedDate, 0);\n  }\n  if (granularity < SECTION_TYPE_GRANULARITY.milliseconds) {\n    roundedDate = adapter.setMilliseconds(roundedDate, 0);\n  }\n  return roundedDate;\n};\nexport const getDefaultReferenceDate = ({\n  props,\n  adapter,\n  granularity,\n  timezone,\n  getTodayDate: inGetTodayDate\n}) => {\n  let referenceDate = inGetTodayDate ? inGetTodayDate() : roundDate(adapter, granularity, getTodayDate(adapter, timezone));\n  if (props.minDate != null && adapter.isAfterDay(props.minDate, referenceDate)) {\n    referenceDate = roundDate(adapter, granularity, props.minDate);\n  }\n  if (props.maxDate != null && adapter.isBeforeDay(props.maxDate, referenceDate)) {\n    referenceDate = roundDate(adapter, granularity, props.maxDate);\n  }\n  const isAfter = createIsAfterIgnoreDatePart(props.disableIgnoringDatePartForTimeValidation ?? false, adapter);\n  if (props.minTime != null && isAfter(props.minTime, referenceDate)) {\n    referenceDate = roundDate(adapter, granularity, props.disableIgnoringDatePartForTimeValidation ? props.minTime : mergeDateAndTime(adapter, referenceDate, props.minTime));\n  }\n  if (props.maxTime != null && isAfter(referenceDate, props.maxTime)) {\n    referenceDate = roundDate(adapter, granularity, props.disableIgnoringDatePartForTimeValidation ? props.maxTime : mergeDateAndTime(adapter, referenceDate, props.maxTime));\n  }\n  return referenceDate;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}