{"ast":null,"code":"import * as React from 'react';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport useControlled from '@mui/utils/useControlled';\nimport { usePickerAdapter } from \"../../hooks/usePickerAdapter.js\";\n\n/**\n * Hooks controlling the value while making sure that:\n * - The value returned by `onChange` always have the timezone of `props.value` or `props.defaultValue` if defined\n * - The value rendered is always the one from `props.timezone` if defined\n */\nexport const useControlledValue = _ref => {\n  let {\n    name,\n    timezone: timezoneProp,\n    value: valueProp,\n    defaultValue,\n    referenceDate,\n    onChange: onChangeProp,\n    valueManager\n  } = _ref;\n  const adapter = usePickerAdapter();\n  const [valueWithInputTimezone, setValue] = useControlled({\n    name,\n    state: 'value',\n    controlled: valueProp,\n    default: defaultValue !== null && defaultValue !== void 0 ? defaultValue : valueManager.emptyValue\n  });\n  const inputTimezone = React.useMemo(() => valueManager.getTimezone(adapter, valueWithInputTimezone), [adapter, valueManager, valueWithInputTimezone]);\n  const setInputTimezone = useEventCallback(newValue => {\n    if (inputTimezone == null) {\n      return newValue;\n    }\n    return valueManager.setTimezone(adapter, inputTimezone, newValue);\n  });\n  const timezoneToRender = React.useMemo(() => {\n    if (timezoneProp) {\n      return timezoneProp;\n    }\n    if (inputTimezone) {\n      return inputTimezone;\n    }\n    if (referenceDate) {\n      return adapter.getTimezone(Array.isArray(referenceDate) ? referenceDate[0] : referenceDate);\n    }\n    return 'default';\n  }, [timezoneProp, inputTimezone, referenceDate, adapter]);\n  const valueWithTimezoneToRender = React.useMemo(() => valueManager.setTimezone(adapter, timezoneToRender, valueWithInputTimezone), [valueManager, adapter, timezoneToRender, valueWithInputTimezone]);\n  const handleValueChange = useEventCallback(function (newValue) {\n    const newValueWithInputTimezone = setInputTimezone(newValue);\n    setValue(newValueWithInputTimezone);\n    for (var _len = arguments.length, otherParams = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      otherParams[_key - 1] = arguments[_key];\n    }\n    onChangeProp === null || onChangeProp === void 0 || onChangeProp(newValueWithInputTimezone, ...otherParams);\n  });\n  return {\n    value: valueWithTimezoneToRender,\n    handleValueChange,\n    timezone: timezoneToRender\n  };\n};","map":{"version":3,"names":["React","useEventCallback","useControlled","usePickerAdapter","useControlledValue","_ref","name","timezone","timezoneProp","value","valueProp","defaultValue","referenceDate","onChange","onChangeProp","valueManager","adapter","valueWithInputTimezone","setValue","state","controlled","default","emptyValue","inputTimezone","useMemo","getTimezone","setInputTimezone","newValue","setTimezone","timezoneToRender","Array","isArray","valueWithTimezoneToRender","handleValueChange","newValueWithInputTimezone","_len","arguments","length","otherParams","_key"],"sources":["/Users/macmini/Documents/Sistema_Consultorio/frontend/node_modules/@mui/x-date-pickers/esm/internals/hooks/useControlledValue.js"],"sourcesContent":["import * as React from 'react';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport useControlled from '@mui/utils/useControlled';\nimport { usePickerAdapter } from \"../../hooks/usePickerAdapter.js\";\n\n/**\n * Hooks controlling the value while making sure that:\n * - The value returned by `onChange` always have the timezone of `props.value` or `props.defaultValue` if defined\n * - The value rendered is always the one from `props.timezone` if defined\n */\nexport const useControlledValue = ({\n  name,\n  timezone: timezoneProp,\n  value: valueProp,\n  defaultValue,\n  referenceDate,\n  onChange: onChangeProp,\n  valueManager\n}) => {\n  const adapter = usePickerAdapter();\n  const [valueWithInputTimezone, setValue] = useControlled({\n    name,\n    state: 'value',\n    controlled: valueProp,\n    default: defaultValue ?? valueManager.emptyValue\n  });\n  const inputTimezone = React.useMemo(() => valueManager.getTimezone(adapter, valueWithInputTimezone), [adapter, valueManager, valueWithInputTimezone]);\n  const setInputTimezone = useEventCallback(newValue => {\n    if (inputTimezone == null) {\n      return newValue;\n    }\n    return valueManager.setTimezone(adapter, inputTimezone, newValue);\n  });\n  const timezoneToRender = React.useMemo(() => {\n    if (timezoneProp) {\n      return timezoneProp;\n    }\n    if (inputTimezone) {\n      return inputTimezone;\n    }\n    if (referenceDate) {\n      return adapter.getTimezone(Array.isArray(referenceDate) ? referenceDate[0] : referenceDate);\n    }\n    return 'default';\n  }, [timezoneProp, inputTimezone, referenceDate, adapter]);\n  const valueWithTimezoneToRender = React.useMemo(() => valueManager.setTimezone(adapter, timezoneToRender, valueWithInputTimezone), [valueManager, adapter, timezoneToRender, valueWithInputTimezone]);\n  const handleValueChange = useEventCallback((newValue, ...otherParams) => {\n    const newValueWithInputTimezone = setInputTimezone(newValue);\n    setValue(newValueWithInputTimezone);\n    onChangeProp?.(newValueWithInputTimezone, ...otherParams);\n  });\n  return {\n    value: valueWithTimezoneToRender,\n    handleValueChange,\n    timezone: timezoneToRender\n  };\n};"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,gBAAgB,MAAM,6BAA6B;AAC1D,OAAOC,aAAa,MAAM,0BAA0B;AACpD,SAASC,gBAAgB,QAAQ,iCAAiC;;AAElE;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,kBAAkB,GAAGC,IAAA,IAQ5B;EAAA,IAR6B;IACjCC,IAAI;IACJC,QAAQ,EAAEC,YAAY;IACtBC,KAAK,EAAEC,SAAS;IAChBC,YAAY;IACZC,aAAa;IACbC,QAAQ,EAAEC,YAAY;IACtBC;EACF,CAAC,GAAAV,IAAA;EACC,MAAMW,OAAO,GAAGb,gBAAgB,CAAC,CAAC;EAClC,MAAM,CAACc,sBAAsB,EAAEC,QAAQ,CAAC,GAAGhB,aAAa,CAAC;IACvDI,IAAI;IACJa,KAAK,EAAE,OAAO;IACdC,UAAU,EAAEV,SAAS;IACrBW,OAAO,EAAEV,YAAY,aAAZA,YAAY,cAAZA,YAAY,GAAII,YAAY,CAACO;EACxC,CAAC,CAAC;EACF,MAAMC,aAAa,GAAGvB,KAAK,CAACwB,OAAO,CAAC,MAAMT,YAAY,CAACU,WAAW,CAACT,OAAO,EAAEC,sBAAsB,CAAC,EAAE,CAACD,OAAO,EAAED,YAAY,EAAEE,sBAAsB,CAAC,CAAC;EACrJ,MAAMS,gBAAgB,GAAGzB,gBAAgB,CAAC0B,QAAQ,IAAI;IACpD,IAAIJ,aAAa,IAAI,IAAI,EAAE;MACzB,OAAOI,QAAQ;IACjB;IACA,OAAOZ,YAAY,CAACa,WAAW,CAACZ,OAAO,EAAEO,aAAa,EAAEI,QAAQ,CAAC;EACnE,CAAC,CAAC;EACF,MAAME,gBAAgB,GAAG7B,KAAK,CAACwB,OAAO,CAAC,MAAM;IAC3C,IAAIhB,YAAY,EAAE;MAChB,OAAOA,YAAY;IACrB;IACA,IAAIe,aAAa,EAAE;MACjB,OAAOA,aAAa;IACtB;IACA,IAAIX,aAAa,EAAE;MACjB,OAAOI,OAAO,CAACS,WAAW,CAACK,KAAK,CAACC,OAAO,CAACnB,aAAa,CAAC,GAAGA,aAAa,CAAC,CAAC,CAAC,GAAGA,aAAa,CAAC;IAC7F;IACA,OAAO,SAAS;EAClB,CAAC,EAAE,CAACJ,YAAY,EAAEe,aAAa,EAAEX,aAAa,EAAEI,OAAO,CAAC,CAAC;EACzD,MAAMgB,yBAAyB,GAAGhC,KAAK,CAACwB,OAAO,CAAC,MAAMT,YAAY,CAACa,WAAW,CAACZ,OAAO,EAAEa,gBAAgB,EAAEZ,sBAAsB,CAAC,EAAE,CAACF,YAAY,EAAEC,OAAO,EAAEa,gBAAgB,EAAEZ,sBAAsB,CAAC,CAAC;EACrM,MAAMgB,iBAAiB,GAAGhC,gBAAgB,CAAC,UAAC0B,QAAQ,EAAqB;IACvE,MAAMO,yBAAyB,GAAGR,gBAAgB,CAACC,QAAQ,CAAC;IAC5DT,QAAQ,CAACgB,yBAAyB,CAAC;IAAC,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAFmBC,WAAW,OAAAR,KAAA,CAAAK,IAAA,OAAAA,IAAA,WAAAI,IAAA,MAAAA,IAAA,GAAAJ,IAAA,EAAAI,IAAA;MAAXD,WAAW,CAAAC,IAAA,QAAAH,SAAA,CAAAG,IAAA;IAAA;IAGlEzB,YAAY,aAAZA,YAAY,eAAZA,YAAY,CAAGoB,yBAAyB,EAAE,GAAGI,WAAW,CAAC;EAC3D,CAAC,CAAC;EACF,OAAO;IACL7B,KAAK,EAAEuB,yBAAyB;IAChCC,iBAAiB;IACjB1B,QAAQ,EAAEsB;EACZ,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}