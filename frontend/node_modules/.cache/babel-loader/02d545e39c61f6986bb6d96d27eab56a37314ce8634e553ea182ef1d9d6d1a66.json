{"ast":null,"code":"// src/components/ProtectedRoute.jsx\nimport React from'react';import{Navigate,Outlet}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";const ProtectedRoute=()=>{// 1. Verifica se o token de autenticação existe no sessionStorage\nconst token=sessionStorage.getItem('authToken');// 2. Se o token existir, renderiza o conteúdo da página (usando <Outlet />).\n//    Se não existir, redireciona para a página de login.\nreturn token?/*#__PURE__*/_jsx(Outlet,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true});};export default ProtectedRoute;","map":{"version":3,"names":["React","Navigate","Outlet","jsx","_jsx","ProtectedRoute","token","sessionStorage","getItem","to","replace"],"sources":["/Users/macmini/Documents/Sistema_Consultorio/frontend/src/components/ProtectedRoute.jsx"],"sourcesContent":["// src/components/ProtectedRoute.jsx\nimport React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\n\nconst ProtectedRoute = () => {\n  // 1. Verifica se o token de autenticação existe no sessionStorage\n  const token = sessionStorage.getItem('authToken');\n\n  // 2. Se o token existir, renderiza o conteúdo da página (usando <Outlet />).\n  //    Se não existir, redireciona para a página de login.\n  return token ? <Outlet /> : <Navigate to=\"/login\" replace />;\n};\n\nexport default ProtectedRoute;"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,CAAEC,MAAM,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEpD,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3B;AACA,KAAM,CAAAC,KAAK,CAAGC,cAAc,CAACC,OAAO,CAAC,WAAW,CAAC,CAEjD;AACA;AACA,MAAO,CAAAF,KAAK,cAAGF,IAAA,CAACF,MAAM,GAAE,CAAC,cAAGE,IAAA,CAACH,QAAQ,EAACQ,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CAAC,CAC9D,CAAC,CAED,cAAe,CAAAL,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}