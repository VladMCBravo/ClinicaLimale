{"ast":null,"code":"// src/contexts/SnackbarContext.js\nimport React,{createContext,useState,useContext}from'react';import{Snackbar,Alert}from'@mui/material';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SnackbarContext=/*#__PURE__*/createContext();export const useSnackbar=()=>{return useContext(SnackbarContext);};export const SnackbarProvider=_ref=>{let{children}=_ref;const[open,setOpen]=useState(false);const[message,setMessage]=useState('');const[severity,setSeverity]=useState('success');// 'success', 'error', 'warning', 'info'\nconst showSnackbar=function(msg){let sev=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'success';setMessage(msg);setSeverity(sev);setOpen(true);};const handleClose=(event,reason)=>{if(reason==='clickaway'){return;}setOpen(false);};return/*#__PURE__*/_jsxs(SnackbarContext.Provider,{value:{showSnackbar},children:[children,/*#__PURE__*/_jsx(Snackbar,{open:open,autoHideDuration:6000,onClose:handleClose,children:/*#__PURE__*/_jsx(Alert,{onClose:handleClose,severity:severity,sx:{width:'100%'},children:message})})]});};","map":{"version":3,"names":["React","createContext","useState","useContext","Snackbar","Alert","jsx","_jsx","jsxs","_jsxs","SnackbarContext","useSnackbar","SnackbarProvider","_ref","children","open","setOpen","message","setMessage","severity","setSeverity","showSnackbar","msg","sev","arguments","length","undefined","handleClose","event","reason","Provider","value","autoHideDuration","onClose","sx","width"],"sources":["/Users/macmini/Documents/Sistema_Consultorio/frontend/src/contexts/SnackbarContext.js"],"sourcesContent":["// src/contexts/SnackbarContext.js\nimport React, { createContext, useState, useContext } from 'react';\nimport { Snackbar, Alert } from '@mui/material';\n\nconst SnackbarContext = createContext();\n\nexport const useSnackbar = () => {\n    return useContext(SnackbarContext);\n};\n\nexport const SnackbarProvider = ({ children }) => {\n    const [open, setOpen] = useState(false);\n    const [message, setMessage] = useState('');\n    const [severity, setSeverity] = useState('success'); // 'success', 'error', 'warning', 'info'\n\n    const showSnackbar = (msg, sev = 'success') => {\n        setMessage(msg);\n        setSeverity(sev);\n        setOpen(true);\n    };\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpen(false);\n    };\n\n    return (\n        <SnackbarContext.Provider value={{ showSnackbar }}>\n            {children}\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n                <Alert onClose={handleClose} severity={severity} sx={{ width: '100%' }}>\n                    {message}\n                </Alert>\n            </Snackbar>\n        </SnackbarContext.Provider>\n    );\n};"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,UAAU,KAAQ,OAAO,CAClE,OAASC,QAAQ,CAAEC,KAAK,KAAQ,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEhD,KAAM,CAAAC,eAAe,cAAGT,aAAa,CAAC,CAAC,CAEvC,MAAO,MAAM,CAAAU,WAAW,CAAGA,CAAA,GAAM,CAC7B,MAAO,CAAAR,UAAU,CAACO,eAAe,CAAC,CACtC,CAAC,CAED,MAAO,MAAM,CAAAE,gBAAgB,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACzC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGd,QAAQ,CAAC,KAAK,CAAC,CACvC,KAAM,CAACe,OAAO,CAAEC,UAAU,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACiB,QAAQ,CAAEC,WAAW,CAAC,CAAGlB,QAAQ,CAAC,SAAS,CAAC,CAAE;AAErD,KAAM,CAAAmB,YAAY,CAAG,QAAAA,CAACC,GAAG,CAAsB,IAApB,CAAAC,GAAG,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,SAAS,CACtCN,UAAU,CAACI,GAAG,CAAC,CACfF,WAAW,CAACG,GAAG,CAAC,CAChBP,OAAO,CAAC,IAAI,CAAC,CACjB,CAAC,CAED,KAAM,CAAAW,WAAW,CAAGA,CAACC,KAAK,CAAEC,MAAM,GAAK,CACnC,GAAIA,MAAM,GAAK,WAAW,CAAE,CACxB,OACJ,CACAb,OAAO,CAAC,KAAK,CAAC,CAClB,CAAC,CAED,mBACIP,KAAA,CAACC,eAAe,CAACoB,QAAQ,EAACC,KAAK,CAAE,CAAEV,YAAa,CAAE,CAAAP,QAAA,EAC7CA,QAAQ,cACTP,IAAA,CAACH,QAAQ,EAACW,IAAI,CAAEA,IAAK,CAACiB,gBAAgB,CAAE,IAAK,CAACC,OAAO,CAAEN,WAAY,CAAAb,QAAA,cAC/DP,IAAA,CAACF,KAAK,EAAC4B,OAAO,CAAEN,WAAY,CAACR,QAAQ,CAAEA,QAAS,CAACe,EAAE,CAAE,CAAEC,KAAK,CAAE,MAAO,CAAE,CAAArB,QAAA,CAClEG,OAAO,CACL,CAAC,CACF,CAAC,EACW,CAAC,CAEnC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}