{"ast":null,"code":"import _objectSpread from\"/Users/macmini/Documents/Sistema_Consultorio/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// src/components/AgendamentoModal.jsx - VERSÃO COMPLETA E CORRIGIDA\nimport React,{useState,useEffect,useMemo,useCallback}from'react';import{Dialog,DialogTitle,DialogContent,DialogActions,TextField,Button,CircularProgress,Autocomplete,FormControl,InputLabel,Select,MenuItem,Box,Typography,Divider,Chip,Grid}from'@mui/material';import{agendamentoService}from'../services/agendamentoService';import{pacienteService}from'../services/pacienteService';import{useSnackbar}from'../contexts/SnackbarContext';import{DateTimePicker}from'@mui/x-date-pickers/DateTimePicker';import dayjs from'dayjs';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const getInitialFormData=()=>({paciente:null,data_hora_inicio:null,data_hora_fim:null,status:'Agendado',tipo_atendimento:'Particular',plano_utilizado:null,observacoes:'',tipo_visita:'Primeira Consulta',modalidade:'Presencial',especialidade:null,medico:null,procedimento:null,sala:null});export default function AgendamentoModal(_ref){let{open,onClose,onSave,editingEvent,initialData}=_ref;const{showSnackbar}=useSnackbar();// --- ESTADOS ---\nconst[formData,setFormData]=useState(getInitialFormData());const[isSubmitting,setIsSubmitting]=useState(false);const[pacientes,setPacientes]=useState([]);const[procedimentos,setProcedimentos]=useState([]);const[medicos,setMedicos]=useState([]);const[especialidades,setEspecialidades]=useState([]);const[salas,setSalas]=useState([]);const[pacienteDetalhes,setPacienteDetalhes]=useState(null);const[tipoAgendamento,setTipoAgendamento]=useState('Consulta');const[capacidade,setCapacidade]=useState({consultas:0,procedimentos:0,loading:false});const[isSlotAvailable,setIsSlotAvailable]=useState(true);// Efeito para buscar dados gerais (pacientes, médicos, salas, etc.)\nuseEffect(()=>{if(open){agendamentoService.getModalData().then(_ref2=>{let[pacientesRes,procedimentosRes,medicosRes,especialidadesRes]=_ref2;setPacientes(pacientesRes.data);setProcedimentos(procedimentosRes.data.filter(p=>p.descricao.toLowerCase()!=='consulta'));setMedicos(medicosRes.data);setEspecialidades(especialidadesRes.data);}).catch(error=>{showSnackbar(\"Erro ao carregar dados.\",'error');});agendamentoService.getSalas().then(response=>setSalas(response.data)).catch(error=>showSnackbar(\"Erro ao carregar lista de salas.\",'error'));}},[open,showSnackbar]);// Efeito para preencher o formulário\nuseEffect(()=>{if(!open){setFormData(getInitialFormData());setTipoAgendamento('Consulta');setPacienteDetalhes(null);return;}if(editingEvent){// <<-- CORREÇÃO PRINCIPAL APLICADA AQUI -->>\n// Verifica se o evento vem do FullCalendar (tem .extendedProps) ou da Lista de Espera (objeto direto)\nconst isFullCalendarEvent=!!editingEvent.extendedProps;const dados=isFullCalendarEvent?editingEvent.extendedProps:editingEvent;setTipoAgendamento(dados.tipo_agendamento||'Consulta');setFormData({paciente:pacientes.find(p=>p.id===dados.paciente)||null,data_hora_inicio:dayjs(isFullCalendarEvent?editingEvent.startStr:dados.data_hora_inicio),data_hora_fim:dayjs(isFullCalendarEvent?editingEvent.endStr:dados.data_hora_fim),status:dados.status,tipo_atendimento:dados.tipo_atendimento,plano_utilizado:dados.plano_utilizado,observacoes:dados.observacoes||'',tipo_visita:dados.tipo_visita||'Primeira Consulta',modalidade:dados.modalidade||'Presencial',especialidade:especialidades.find(e=>e.id===dados.especialidade)||null,sala:salas.find(s=>s.id===dados.sala)||null,medico:medicos.find(m=>m.id===dados.medico)||null,procedimento:procedimentos.find(p=>p.id===dados.procedimento)||null});}else if(initialData){// Lógica para criação (já estava correta)\nconst startTime=dayjs(initialData.start);setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{data_hora_inicio:startTime,data_hora_fim:startTime.add(50,'minute'),sala:initialData.resource?salas.find(s=>s.id===initialData.resource.id):null}));}},[editingEvent,initialData,open,pacientes,procedimentos,medicos,especialidades,salas]);// ... (o restante dos seus useEffects, handlers e JSX já estavam corretos e foram mantidos abaixo)\nuseEffect(()=>{if(open&&formData.data_hora_inicio&&formData.data_hora_fim){setCapacidade(prev=>_objectSpread(_objectSpread({},prev),{},{loading:true}));const inicioISO=formData.data_hora_inicio.toISOString();const fimISO=formData.data_hora_fim.toISOString();agendamentoService.verificarCapacidade(inicioISO,fimISO).then(response=>setCapacidade({consultas:response.data.consultas_agendadas,procedimentos:response.data.procedimentos_agendados,loading:false})).catch(err=>{console.error(\"Erro ao verificar capacidade\",err);setCapacidade({consultas:0,procedimentos:0,loading:false});});}},[open,formData.data_hora_inicio,formData.data_hora_fim]);useEffect(()=>{const CAPACIDADE_CONSULTAS=3;const CAPACidade_procedimentos=1;if(!open)return;let consultasOcupadas=capacidade.consultas;let procedimentosOcupados=capacidade.procedimentos;if(editingEvent){const tipoOriginal=editingEvent.extendedProps?editingEvent.extendedProps.tipo_agendamento:editingEvent.tipo_agendamento;if(tipoOriginal==='Consulta')consultasOcupadas=Math.max(0,consultasOcupadas-1);if(tipoOriginal==='Procedimento')procedimentosOcupados=Math.max(0,procedimentosOcupados-1);}if(tipoAgendamento==='Consulta')setIsSlotAvailable(consultasOcupadas<CAPACIDADE_CONSULTAS);else if(tipoAgendamento==='Procedimento')setIsSlotAvailable(procedimentosOcupados<CAPACidade_procedimentos);else setIsSlotAvailable(true);},[capacidade,tipoAgendamento,editingEvent,open]);const handlePacienteChange=useCallback((event,pacienteSelecionado)=>{setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{paciente:pacienteSelecionado}));if(pacienteSelecionado){pacienteService.getPacienteDetalhes(pacienteSelecionado.id).then(response=>{const detalhes=response.data;setPacienteDetalhes(detalhes);setFormData(currentFormData=>_objectSpread(_objectSpread({},currentFormData),{},{tipo_atendimento:detalhes.plano_convenio?'Convenio':'Particular',plano_utilizado:detalhes.plano_convenio||null}));});}else{setPacienteDetalhes(null);setFormData(currentFormData=>_objectSpread(_objectSpread({},currentFormData),{},{tipo_atendimento:'Particular',plano_utilizado:null}));}},[]);const handleSubmit=async e=>{var _formData$sala,_formData$paciente,_formData$medico,_formData$especialida,_formData$procediment;e.preventDefault();setIsSubmitting(true);const submissionData=_objectSpread(_objectSpread({},formData),{},{sala:((_formData$sala=formData.sala)===null||_formData$sala===void 0?void 0:_formData$sala.id)||null,tipo_agendamento:tipoAgendamento,paciente:((_formData$paciente=formData.paciente)===null||_formData$paciente===void 0?void 0:_formData$paciente.id)||null,medico:((_formData$medico=formData.medico)===null||_formData$medico===void 0?void 0:_formData$medico.id)||null,especialidade:((_formData$especialida=formData.especialidade)===null||_formData$especialida===void 0?void 0:_formData$especialida.id)||null,procedimento:((_formData$procediment=formData.procedimento)===null||_formData$procediment===void 0?void 0:_formData$procediment.id)||null,data_hora_inicio:formData.data_hora_inicio?formData.data_hora_inicio.toISOString():null,data_hora_fim:formData.data_hora_fim?formData.data_hora_fim.toISOString():null});try{const eventId=editingEvent===null||editingEvent===void 0?void 0:editingEvent.id;const request=eventId?agendamentoService.updateAgendamento(eventId,submissionData):agendamentoService.createAgendamento(submissionData);await request;showSnackbar(eventId?'Agendamento atualizado!':'Agendamento criado!','success');onSave();}catch(error){var _error$response;const errorData=(_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data;let errorMsg='Erro ao salvar agendamento.';if(typeof errorData==='object'&&errorData!==null){errorMsg=Object.values(errorData).flat()[0];}showSnackbar(errorMsg,'error');}finally{setIsSubmitting(false);}};const valorExibido=useMemo(()=>{if(formData.tipo_atendimento==='Particular'){var _formData$especialida2,_formData$procediment2;if(tipoAgendamento==='Consulta'&&(_formData$especialida2=formData.especialidade)!==null&&_formData$especialida2!==void 0&&_formData$especialida2.valor_consulta)return\"Valor (Particular): R$ \".concat(formData.especialidade.valor_consulta);if(tipoAgendamento==='Procedimento'&&(_formData$procediment2=formData.procedimento)!==null&&_formData$procediment2!==void 0&&_formData$procediment2.valor_particular)return\"Valor (Particular): R$ \".concat(formData.procedimento.valor_particular);}return null;},[tipoAgendamento,formData.especialidade,formData.procedimento,formData.tipo_atendimento]);const renderCapacidadeInfo=()=>{const CAPACIDADE_CONSULTAS=3;const CAPACIDADE_PROCEDIMENTOS=1;const consultasDisponiveis=CAPACIDADE_CONSULTAS-capacidade.consultas;const procedimentosDisponiveis=CAPACIDADE_PROCEDIMENTOS-capacidade.procedimentos;return/*#__PURE__*/_jsxs(Box,{sx:{p:1.5,backgroundColor:'#f0f4f8',borderRadius:1,display:'flex',gap:2,alignItems:'center',mt:1,mb:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{fontWeight:'bold'},children:\"Disponibilidade:\"}),capacidade.loading?/*#__PURE__*/_jsx(CircularProgress,{size:20}):/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',gap:1},children:[/*#__PURE__*/_jsx(Chip,{label:\"Consultas: \".concat(consultasDisponiveis),color:consultasDisponiveis>0?\"success\":\"error\",size:\"small\",variant:\"outlined\"}),/*#__PURE__*/_jsx(Chip,{label:\"Procedimentos: \".concat(procedimentosDisponiveis),color:procedimentosDisponiveis>0?\"success\":\"error\",size:\"small\",variant:\"outlined\"})]})]});};return/*#__PURE__*/_jsxs(Dialog,{open:open,onClose:onClose,fullWidth:true,maxWidth:\"md\",children:[/*#__PURE__*/_jsx(DialogTitle,{children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"div\",children:editingEvent?'Editar Agendamento':'Novo Agendamento'}),formData.data_hora_inicio&&renderCapacidadeInfo()]})}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(DialogContent,{dividers:true,sx:{p:3},children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:7,children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexDirection:'column',gap:2.5},children:[/*#__PURE__*/_jsx(FormControl,{fullWidth:true,children:/*#__PURE__*/_jsx(Autocomplete,{options:salas,getOptionLabel:s=>s.nome||'',value:formData.sala,isOptionEqualToValue:(o,v)=>o.id===v.id,onChange:(e,value)=>setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{sala:value})),renderInput:params=>/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{label:\"Sala *\",size:\"small\"}))})}),/*#__PURE__*/_jsx(FormControl,{fullWidth:true,children:/*#__PURE__*/_jsx(Autocomplete,{options:pacientes,getOptionLabel:p=>p.nome_completo||'',value:formData.paciente,isOptionEqualToValue:(o,v)=>o.id===v.id,onChange:handlePacienteChange,renderInput:params=>/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{label:\"Paciente *\",size:\"small\"}))})}),(pacienteDetalhes===null||pacienteDetalhes===void 0?void 0:pacienteDetalhes.plano_convenio_detalhes)&&/*#__PURE__*/_jsx(Box,{sx:{p:1.5,backgroundColor:'#f5f5f5',borderRadius:1},children:/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",children:[\"Plano: \",/*#__PURE__*/_jsxs(\"strong\",{children:[pacienteDetalhes.plano_convenio_detalhes.convenio_nome,\" - \",pacienteDetalhes.plano_convenio_detalhes.nome]})]})}),/*#__PURE__*/_jsx(Divider,{sx:{my:1},children:/*#__PURE__*/_jsx(Chip,{label:\"Detalhes do Agendamento\",size:\"small\"})}),/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,size:\"small\",children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Tipo de Agendamento\"}),/*#__PURE__*/_jsxs(Select,{value:tipoAgendamento,label:\"Tipo de Agendamento\",onChange:e=>setTipoAgendamento(e.target.value),children:[/*#__PURE__*/_jsx(MenuItem,{value:\"Consulta\",children:\"Consulta\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Procedimento\",children:\"Procedimento\"})]})]}),tipoAgendamento==='Consulta'?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Autocomplete,{options:especialidades,getOptionLabel:e=>e.nome||'',value:formData.especialidade,isOptionEqualToValue:(o,v)=>o.id===v.id,onChange:(e,value)=>setFormData(_objectSpread(_objectSpread({},formData),{},{especialidade:value,medico:null})),renderInput:params=>/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{label:\"Especialidade *\",size:\"small\"}))}),/*#__PURE__*/_jsx(Autocomplete,{options:medicos.filter(m=>formData.especialidade?m.especialidades.includes(formData.especialidade.id):true),getOptionLabel:m=>m.first_name+' '+m.last_name,value:formData.medico,isOptionEqualToValue:(o,v)=>o.id===v.id,onChange:(e,value)=>setFormData(_objectSpread(_objectSpread({},formData),{},{medico:value})),disabled:!formData.especialidade,renderInput:params=>/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{label:\"M\\xE9dico *\",size:\"small\"}))})]}):/*#__PURE__*/_jsx(Autocomplete,{options:procedimentos,getOptionLabel:p=>p.descricao||'',value:formData.procedimento,isOptionEqualToValue:(o,v)=>o.id===v.id,onChange:(e,value)=>setFormData(_objectSpread(_objectSpread({},formData),{},{procedimento:value})),renderInput:params=>/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{label:\"Procedimento *\",size:\"small\"}))})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:5,children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexDirection:'column',gap:2.5},children:[/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,size:\"small\",children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Modalidade\"}),/*#__PURE__*/_jsxs(Select,{name:\"modalidade\",value:formData.modalidade,label:\"Modalidade\",onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{modalidade:e.target.value})),children:[/*#__PURE__*/_jsx(MenuItem,{value:\"Presencial\",children:\"Presencial (na cl\\xEDnica)\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Telemedicina\",children:\"Telemedicina\"})]})]}),/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,size:\"small\",children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Tipo de Atendimento\"}),/*#__PURE__*/_jsxs(Select,{name:\"tipo_atendimento\",value:formData.tipo_atendimento,label:\"Tipo de Atendimento\",onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{tipo_atendimento:e.target.value})),children:[/*#__PURE__*/_jsx(MenuItem,{value:\"Particular\",children:\"Particular\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Convenio\",disabled:!(pacienteDetalhes!==null&&pacienteDetalhes!==void 0&&pacienteDetalhes.plano_convenio),children:\"Conv\\xEAnio\"})]})]}),valorExibido&&/*#__PURE__*/_jsx(Box,{sx:{p:1.5,backgroundColor:'#e3f2fd',borderRadius:1,mt:-1},children:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"primary.main\",sx:{fontWeight:'bold'},children:valorExibido})}),/*#__PURE__*/_jsx(Divider,{sx:{my:1},children:/*#__PURE__*/_jsx(Chip,{label:\"Hor\\xE1rio\",size:\"small\"})}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(DateTimePicker,{label:\"In\\xEDcio *\",value:formData.data_hora_inicio,onChange:newValue=>{setFormData(_objectSpread(_objectSpread({},formData),{},{data_hora_inicio:newValue,data_hora_fim:newValue?newValue.add(50,'minute'):null}));},slotProps:{textField:{size:'small'}}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(DateTimePicker,{label:\"Fim *\",value:formData.data_hora_fim,onChange:newValue=>setFormData(_objectSpread(_objectSpread({},formData),{},{data_hora_fim:newValue})),slotProps:{textField:{size:'small'}}})})]}),/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,size:\"small\",children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Status\"}),/*#__PURE__*/_jsxs(Select,{name:\"status\",value:formData.status,label:\"Status\",onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{status:e.target.value})),children:[/*#__PURE__*/_jsx(MenuItem,{value:\"Agendado\",children:\"Agendado (Aguardando Pagamento)\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Confirmado\",children:\"Confirmado (Pago)\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Realizado\",children:\"Realizado\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"N\\xE3o Compareceu\",children:\"N\\xE3o Compareceu\"})]})]})]})})]})}),/*#__PURE__*/_jsxs(DialogActions,{sx:{p:'16px 24px'},children:[/*#__PURE__*/_jsx(Button,{onClick:onClose,children:\"Cancelar\"}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"contained\",disabled:isSubmitting||!formData.paciente||!isSlotAvailable||!formData.sala,children:isSubmitting?/*#__PURE__*/_jsx(CircularProgress,{size:24}):'Salvar'})]})]})]});}","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","Dialog","DialogTitle","DialogContent","DialogActions","TextField","Button","CircularProgress","Autocomplete","FormControl","InputLabel","Select","MenuItem","Box","Typography","Divider","Chip","Grid","agendamentoService","pacienteService","useSnackbar","DateTimePicker","dayjs","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","getInitialFormData","paciente","data_hora_inicio","data_hora_fim","status","tipo_atendimento","plano_utilizado","observacoes","tipo_visita","modalidade","especialidade","medico","procedimento","sala","AgendamentoModal","_ref","open","onClose","onSave","editingEvent","initialData","showSnackbar","formData","setFormData","isSubmitting","setIsSubmitting","pacientes","setPacientes","procedimentos","setProcedimentos","medicos","setMedicos","especialidades","setEspecialidades","salas","setSalas","pacienteDetalhes","setPacienteDetalhes","tipoAgendamento","setTipoAgendamento","capacidade","setCapacidade","consultas","loading","isSlotAvailable","setIsSlotAvailable","getModalData","then","_ref2","pacientesRes","procedimentosRes","medicosRes","especialidadesRes","data","filter","p","descricao","toLowerCase","catch","error","getSalas","response","isFullCalendarEvent","extendedProps","dados","tipo_agendamento","find","id","startStr","endStr","e","s","m","startTime","start","prev","_objectSpread","add","resource","inicioISO","toISOString","fimISO","verificarCapacidade","consultas_agendadas","procedimentos_agendados","err","console","CAPACIDADE_CONSULTAS","CAPACidade_procedimentos","consultasOcupadas","procedimentosOcupados","tipoOriginal","Math","max","handlePacienteChange","event","pacienteSelecionado","getPacienteDetalhes","detalhes","currentFormData","plano_convenio","handleSubmit","_formData$sala","_formData$paciente","_formData$medico","_formData$especialida","_formData$procediment","preventDefault","submissionData","eventId","request","updateAgendamento","createAgendamento","_error$response","errorData","errorMsg","Object","values","flat","valorExibido","_formData$especialida2","_formData$procediment2","valor_consulta","concat","valor_particular","renderCapacidadeInfo","CAPACIDADE_PROCEDIMENTOS","consultasDisponiveis","procedimentosDisponiveis","sx","backgroundColor","borderRadius","display","gap","alignItems","mt","mb","children","variant","fontWeight","size","label","color","fullWidth","maxWidth","justifyContent","component","onSubmit","dividers","container","spacing","item","xs","md","flexDirection","options","getOptionLabel","nome","value","isOptionEqualToValue","o","v","onChange","renderInput","params","nome_completo","plano_convenio_detalhes","convenio_nome","my","target","includes","first_name","last_name","disabled","name","sm","newValue","slotProps","textField","onClick","type"],"sources":["/Users/macmini/Documents/Sistema_Consultorio/frontend/src/components/AgendamentoModal.jsx"],"sourcesContent":["// src/components/AgendamentoModal.jsx - VERSÃO COMPLETA E CORRIGIDA\n\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport {\n  Dialog, DialogTitle, DialogContent, DialogActions, TextField,\n  Button, CircularProgress, Autocomplete, FormControl, InputLabel, Select, MenuItem,\n  Box, Typography, Divider, Chip, Grid\n} from '@mui/material';\nimport { agendamentoService } from '../services/agendamentoService';\nimport { pacienteService } from '../services/pacienteService';\nimport { useSnackbar } from '../contexts/SnackbarContext';\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\nimport dayjs from 'dayjs';\n\nconst getInitialFormData = () => ({\n    paciente: null, data_hora_inicio: null, data_hora_fim: null, status: 'Agendado',\n    tipo_atendimento: 'Particular', plano_utilizado: null, observacoes: '',\n    tipo_visita: 'Primeira Consulta', modalidade: 'Presencial', especialidade: null,\n    medico: null, procedimento: null, sala: null\n});\n\nexport default function AgendamentoModal({ open, onClose, onSave, editingEvent, initialData }) {\n    const { showSnackbar } = useSnackbar();\n    \n    // --- ESTADOS ---\n    const [formData, setFormData] = useState(getInitialFormData());\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const [pacientes, setPacientes] = useState([]);\n    const [procedimentos, setProcedimentos] = useState([]);\n    const [medicos, setMedicos] = useState([]);\n    const [especialidades, setEspecialidades] = useState([]);\n    const [salas, setSalas] = useState([]);\n    const [pacienteDetalhes, setPacienteDetalhes] = useState(null);\n    const [tipoAgendamento, setTipoAgendamento] = useState('Consulta');\n    const [capacidade, setCapacidade] = useState({ consultas: 0, procedimentos: 0, loading: false });\n    const [isSlotAvailable, setIsSlotAvailable] = useState(true);\n\n    // Efeito para buscar dados gerais (pacientes, médicos, salas, etc.)\n    useEffect(() => {\n        if (open) {\n            agendamentoService.getModalData()\n                .then(([pacientesRes, procedimentosRes, medicosRes, especialidadesRes]) => {\n                    setPacientes(pacientesRes.data);\n                    setProcedimentos(procedimentosRes.data.filter(p => p.descricao.toLowerCase() !== 'consulta'));\n                    setMedicos(medicosRes.data);\n                    setEspecialidades(especialidadesRes.data);\n                }).catch(error => { showSnackbar(\"Erro ao carregar dados.\", 'error'); });\n            \n            agendamentoService.getSalas()\n                .then(response => setSalas(response.data))\n                .catch(error => showSnackbar(\"Erro ao carregar lista de salas.\", 'error'));\n        }\n    }, [open, showSnackbar]);\n\n\n    // Efeito para preencher o formulário\n    useEffect(() => {\n        if (!open) {\n            setFormData(getInitialFormData());\n            setTipoAgendamento('Consulta');\n            setPacienteDetalhes(null);\n            return;\n        }\n\n        if (editingEvent) {\n            // <<-- CORREÇÃO PRINCIPAL APLICADA AQUI -->>\n            // Verifica se o evento vem do FullCalendar (tem .extendedProps) ou da Lista de Espera (objeto direto)\n            const isFullCalendarEvent = !!editingEvent.extendedProps;\n            const dados = isFullCalendarEvent ? editingEvent.extendedProps : editingEvent;\n\n            setTipoAgendamento(dados.tipo_agendamento || 'Consulta');\n            setFormData({\n                paciente: pacientes.find(p => p.id === dados.paciente) || null,\n                data_hora_inicio: dayjs(isFullCalendarEvent ? editingEvent.startStr : dados.data_hora_inicio),\n                data_hora_fim: dayjs(isFullCalendarEvent ? editingEvent.endStr : dados.data_hora_fim),\n                status: dados.status,\n                tipo_atendimento: dados.tipo_atendimento,\n                plano_utilizado: dados.plano_utilizado,\n                observacoes: dados.observacoes || '',\n                tipo_visita: dados.tipo_visita || 'Primeira Consulta',\n                modalidade: dados.modalidade || 'Presencial',\n                especialidade: especialidades.find(e => e.id === dados.especialidade) || null,\n                sala: salas.find(s => s.id === dados.sala) || null,\n                medico: medicos.find(m => m.id === dados.medico) || null,\n                procedimento: procedimentos.find(p => p.id === dados.procedimento) || null,\n            });\n        } else if (initialData) {\n            // Lógica para criação (já estava correta)\n            const startTime = dayjs(initialData.start);\n            setFormData(prev => ({ \n                ...prev, \n                data_hora_inicio: startTime,\n                data_hora_fim: startTime.add(50, 'minute'),\n                sala: initialData.resource ? salas.find(s => s.id === initialData.resource.id) : null,\n            }));\n        }\n    }, [editingEvent, initialData, open, pacientes, procedimentos, medicos, especialidades, salas]);\n    \n    // ... (o restante dos seus useEffects, handlers e JSX já estavam corretos e foram mantidos abaixo)\n\n    useEffect(() => {\n        if (open && formData.data_hora_inicio && formData.data_hora_fim) {\n            setCapacidade(prev => ({ ...prev, loading: true }));\n            const inicioISO = formData.data_hora_inicio.toISOString();\n            const fimISO = formData.data_hora_fim.toISOString();\n            agendamentoService.verificarCapacidade(inicioISO, fimISO)\n                .then(response => setCapacidade({ consultas: response.data.consultas_agendadas, procedimentos: response.data.procedimentos_agendados, loading: false }))\n                .catch(err => { console.error(\"Erro ao verificar capacidade\", err); setCapacidade({ consultas: 0, procedimentos: 0, loading: false }); });\n        }\n    }, [open, formData.data_hora_inicio, formData.data_hora_fim]);\n\n    useEffect(() => {\n        const CAPACIDADE_CONSULTAS = 3;\n        const CAPACidade_procedimentos = 1;\n        if (!open) return;\n        let consultasOcupadas = capacidade.consultas;\n        let procedimentosOcupados = capacidade.procedimentos;\n        if (editingEvent) {\n            const tipoOriginal = editingEvent.extendedProps ? editingEvent.extendedProps.tipo_agendamento : editingEvent.tipo_agendamento;\n            if (tipoOriginal === 'Consulta') consultasOcupadas = Math.max(0, consultasOcupadas - 1);\n            if (tipoOriginal === 'Procedimento') procedimentosOcupados = Math.max(0, procedimentosOcupados - 1);\n        }\n        if (tipoAgendamento === 'Consulta') setIsSlotAvailable(consultasOcupadas < CAPACIDADE_CONSULTAS);\n        else if (tipoAgendamento === 'Procedimento') setIsSlotAvailable(procedimentosOcupados < CAPACidade_procedimentos);\n        else setIsSlotAvailable(true);\n    }, [capacidade, tipoAgendamento, editingEvent, open]);\n\n    const handlePacienteChange = useCallback((event, pacienteSelecionado) => {\n        setFormData(prev => ({ ...prev, paciente: pacienteSelecionado }));\n        if (pacienteSelecionado) {\n            pacienteService.getPacienteDetalhes(pacienteSelecionado.id).then(response => {\n                const detalhes = response.data;\n                setPacienteDetalhes(detalhes);\n                setFormData(currentFormData => ({ ...currentFormData, tipo_atendimento: detalhes.plano_convenio ? 'Convenio' : 'Particular', plano_utilizado: detalhes.plano_convenio || null }));\n            });\n        } else {\n            setPacienteDetalhes(null);\n            setFormData(currentFormData => ({ ...currentFormData, tipo_atendimento: 'Particular', plano_utilizado: null }));\n        }\n    }, []);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setIsSubmitting(true);\n        const submissionData = {\n          ...formData,\n          sala: formData.sala?.id || null,\n          tipo_agendamento: tipoAgendamento,\n          paciente: formData.paciente?.id || null,\n          medico: formData.medico?.id || null,\n          especialidade: formData.especialidade?.id || null,\n          procedimento: formData.procedimento?.id || null,\n          data_hora_inicio: formData.data_hora_inicio ? formData.data_hora_inicio.toISOString() : null,\n          data_hora_fim: formData.data_hora_fim ? formData.data_hora_fim.toISOString() : null,\n        };\n        try {\n            const eventId = editingEvent?.id;\n            const request = eventId ? agendamentoService.updateAgendamento(eventId, submissionData) : agendamentoService.createAgendamento(submissionData);\n            await request;\n            showSnackbar(eventId ? 'Agendamento atualizado!' : 'Agendamento criado!', 'success');\n            onSave();\n        } catch (error) {\n            const errorData = error.response?.data;\n            let errorMsg = 'Erro ao salvar agendamento.';\n            if (typeof errorData === 'object' && errorData !== null) {\n                 errorMsg = Object.values(errorData).flat()[0];\n            }\n            showSnackbar(errorMsg, 'error');\n        } finally {\n            setIsSubmitting(false);\n        }\n    };\n    \n    const valorExibido = useMemo(() => {\n        if (formData.tipo_atendimento === 'Particular') {\n            if (tipoAgendamento === 'Consulta' && formData.especialidade?.valor_consulta) return `Valor (Particular): R$ ${formData.especialidade.valor_consulta}`;\n            if (tipoAgendamento === 'Procedimento' && formData.procedimento?.valor_particular) return `Valor (Particular): R$ ${formData.procedimento.valor_particular}`;\n        }\n        return null;\n    }, [tipoAgendamento, formData.especialidade, formData.procedimento, formData.tipo_atendimento]);\n\n    const renderCapacidadeInfo = () => {\n        const CAPACIDADE_CONSULTAS = 3;\n        const CAPACIDADE_PROCEDIMENTOS = 1;\n        const consultasDisponiveis = CAPACIDADE_CONSULTAS - capacidade.consultas;\n        const procedimentosDisponiveis = CAPACIDADE_PROCEDIMENTOS - capacidade.procedimentos;\n        return (\n            <Box sx={{ p: 1.5, backgroundColor: '#f0f4f8', borderRadius: 1, display: 'flex', gap: 2, alignItems: 'center', mt: 1, mb: 1 }}>\n                <Typography variant=\"body2\" sx={{ fontWeight: 'bold' }}>Disponibilidade:</Typography>\n                {capacidade.loading ? <CircularProgress size={20} /> : (\n                    <Box sx={{ display: 'flex', gap: 1 }}>\n                        <Chip label={`Consultas: ${consultasDisponiveis}`} color={consultasDisponiveis > 0 ? \"success\" : \"error\"} size=\"small\" variant=\"outlined\" />\n                        <Chip label={`Procedimentos: ${procedimentosDisponiveis}`} color={procedimentosDisponiveis > 0 ? \"success\" : \"error\"} size=\"small\" variant=\"outlined\" />\n                    </Box>\n                )}\n            </Box>\n        );\n    };\n    \n    return (\n        <Dialog open={open} onClose={onClose} fullWidth maxWidth=\"md\">\n            <DialogTitle>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                    <Typography variant=\"h6\" component=\"div\">{editingEvent ? 'Editar Agendamento' : 'Novo Agendamento'}</Typography>\n                    {formData.data_hora_inicio && renderCapacidadeInfo()} \n                </Box>\n            </DialogTitle>\n            <form onSubmit={handleSubmit}>\n                <DialogContent dividers sx={{ p: 3 }}>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} md={7}>\n                            <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2.5 }}>\n                                <FormControl fullWidth><Autocomplete options={salas} getOptionLabel={(s) => s.nome || ''} value={formData.sala} isOptionEqualToValue={(o, v) => o.id === v.id} onChange={(e, value) => setFormData(prev => ({...prev, sala: value}))} renderInput={(params) => (<TextField {...params} label=\"Sala *\" size=\"small\" />)} /></FormControl>\n                                <FormControl fullWidth><Autocomplete options={pacientes} getOptionLabel={(p) => p.nome_completo || ''} value={formData.paciente} isOptionEqualToValue={(o, v) => o.id === v.id} onChange={handlePacienteChange} renderInput={(params) => (<TextField {...params} label=\"Paciente *\" size=\"small\" />)} /></FormControl>\n                                {pacienteDetalhes?.plano_convenio_detalhes && (<Box sx={{ p: 1.5, backgroundColor: '#f5f5f5', borderRadius: 1 }}><Typography variant=\"body2\" color=\"text.secondary\">Plano: <strong>{pacienteDetalhes.plano_convenio_detalhes.convenio_nome} - {pacienteDetalhes.plano_convenio_detalhes.nome}</strong></Typography></Box>)}\n                                <Divider sx={{ my: 1 }}><Chip label=\"Detalhes do Agendamento\" size=\"small\" /></Divider>\n                                <FormControl fullWidth size=\"small\"><InputLabel>Tipo de Agendamento</InputLabel><Select value={tipoAgendamento} label=\"Tipo de Agendamento\" onChange={(e) => setTipoAgendamento(e.target.value)}><MenuItem value=\"Consulta\">Consulta</MenuItem><MenuItem value=\"Procedimento\">Procedimento</MenuItem></Select></FormControl>\n                                {tipoAgendamento === 'Consulta' ? (<><Autocomplete options={especialidades} getOptionLabel={(e) => e.nome || ''} value={formData.especialidade} isOptionEqualToValue={(o, v) => o.id === v.id} onChange={(e, value) => setFormData({ ...formData, especialidade: value, medico: null })} renderInput={(params) => <TextField {...params} label=\"Especialidade *\" size=\"small\" />} /><Autocomplete options={medicos.filter(m => formData.especialidade ? m.especialidades.includes(formData.especialidade.id) : true)} getOptionLabel={(m) => m.first_name + ' ' + m.last_name} value={formData.medico} isOptionEqualToValue={(o, v) => o.id === v.id} onChange={(e, value) => setFormData({ ...formData, medico: value })} disabled={!formData.especialidade} renderInput={(params) => <TextField {...params} label=\"Médico *\" size=\"small\" />} /></>) : (<Autocomplete options={procedimentos} getOptionLabel={(p) => p.descricao || ''} value={formData.procedimento} isOptionEqualToValue={(o, v) => o.id === v.id} onChange={(e, value) => setFormData({ ...formData, procedimento: value })} renderInput={(params) => (<TextField {...params} label=\"Procedimento *\" size=\"small\" />)} />)}\n                            </Box>\n                        </Grid>\n                        <Grid item xs={12} md={5}>\n                            <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2.5 }}>\n                                <FormControl fullWidth size=\"small\"><InputLabel>Modalidade</InputLabel><Select name=\"modalidade\" value={formData.modalidade} label=\"Modalidade\" onChange={(e) => setFormData({...formData, modalidade: e.target.value})} ><MenuItem value=\"Presencial\">Presencial (na clínica)</MenuItem><MenuItem value=\"Telemedicina\">Telemedicina</MenuItem></Select></FormControl>\n                                <FormControl fullWidth size=\"small\"><InputLabel>Tipo de Atendimento</InputLabel><Select name=\"tipo_atendimento\" value={formData.tipo_atendimento} label=\"Tipo de Atendimento\" onChange={(e) => setFormData({...formData, tipo_atendimento: e.target.value})}><MenuItem value=\"Particular\">Particular</MenuItem><MenuItem value=\"Convenio\" disabled={!pacienteDetalhes?.plano_convenio}>Convênio</MenuItem></Select></FormControl>\n                                {valorExibido && (<Box sx={{ p: 1.5, backgroundColor: '#e3f2fd', borderRadius: 1, mt: -1 }}><Typography variant=\"body2\" color=\"primary.main\" sx={{ fontWeight: 'bold' }}>{valorExibido}</Typography></Box>)}\n                                <Divider sx={{ my: 1 }}><Chip label=\"Horário\" size=\"small\" /></Divider>\n                                <Grid container spacing={2}><Grid item xs={12} sm={6}><DateTimePicker label=\"Início *\" value={formData.data_hora_inicio} onChange={(newValue) => { setFormData({ ...formData, data_hora_inicio: newValue, data_hora_fim: newValue ? newValue.add(50, 'minute') : null }); }} slotProps={{ textField: { size: 'small' } }} /></Grid><Grid item xs={12} sm={6}><DateTimePicker label=\"Fim *\" value={formData.data_hora_fim} onChange={(newValue) => setFormData({ ...formData, data_hora_fim: newValue })} slotProps={{ textField: { size: 'small' } }} /></Grid></Grid>\n                                <FormControl fullWidth size=\"small\"><InputLabel>Status</InputLabel><Select name=\"status\" value={formData.status} label=\"Status\" onChange={(e) => setFormData({...formData, status: e.target.value})}><MenuItem value=\"Agendado\">Agendado (Aguardando Pagamento)</MenuItem><MenuItem value=\"Confirmado\">Confirmado (Pago)</MenuItem><MenuItem value=\"Realizado\">Realizado</MenuItem><MenuItem value=\"Não Compareceu\">Não Compareceu</MenuItem></Select></FormControl>\n                            </Box>\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions sx={{ p: '16px 24px' }}>\n                    <Button onClick={onClose}>Cancelar</Button>\n                    <Button type=\"submit\" variant=\"contained\" disabled={isSubmitting || !formData.paciente || !isSlotAvailable || !formData.sala}>\n                        {isSubmitting ? <CircularProgress size={24} /> : 'Salvar'}\n                    </Button>\n                </DialogActions>\n            </form>\n        </Dialog>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}