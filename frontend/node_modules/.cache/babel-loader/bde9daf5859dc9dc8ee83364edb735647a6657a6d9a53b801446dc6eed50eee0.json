{"ast":null,"code":"import { createPlugin } from '@fullcalendar/core/index.js';\nimport premiumCommonPlugin from '@fullcalendar/premium-common/index.js';\nimport { memoize, filterHash, rangesIntersect, isPropsEqual, mapHash, combineEventUis, refineProps, guid, identity, rangesEqual, CalendarImpl, mergeEventStores, isPropsValid, parseFieldSpecs, EventImpl, unpromisify, requestJson } from '@fullcalendar/core/internal.js';\nimport { p as parseResource, R as ResourceApi, a as ResourceSplitter, h as handleResourceStore } from './internal-common.js';\nexport { R as ResourceApi } from './internal-common.js';\nimport '@fullcalendar/core/preact.js';\nfunction massageEventDragMutation(eventMutation, hit0, hit1) {\n  let resource0 = hit0.dateSpan.resourceId;\n  let resource1 = hit1.dateSpan.resourceId;\n  if (resource0 && resource1 && resource0 !== resource1) {\n    eventMutation.resourceMutation = {\n      matchResourceId: resource0,\n      setResourceId: resource1\n    };\n  }\n}\n/*\nTODO: all this would be much easier if we were using a hash!\n*/\nfunction applyEventDefMutation(eventDef, mutation, context) {\n  let resourceMutation = mutation.resourceMutation;\n  if (resourceMutation && computeResourceEditable(eventDef, context)) {\n    let index = eventDef.resourceIds.indexOf(resourceMutation.matchResourceId);\n    if (index !== -1) {\n      let resourceIds = eventDef.resourceIds.slice(); // copy\n      resourceIds.splice(index, 1); // remove\n      if (resourceIds.indexOf(resourceMutation.setResourceId) === -1) {\n        // not already in there\n        resourceIds.push(resourceMutation.setResourceId); // add\n      }\n      eventDef.resourceIds = resourceIds;\n    }\n  }\n}\n/*\nHACK\nTODO: use EventUi system instead of this\n*/\nfunction computeResourceEditable(eventDef, context) {\n  let {\n    resourceEditable\n  } = eventDef;\n  if (resourceEditable == null) {\n    let source = eventDef.sourceId && context.getCurrentData().eventSources[eventDef.sourceId];\n    if (source) {\n      resourceEditable = source.extendedProps.resourceEditable; // used the Source::extendedProps hack\n    }\n    if (resourceEditable == null) {\n      resourceEditable = context.options.eventResourceEditable;\n      if (resourceEditable == null) {\n        resourceEditable = context.options.editable; // TODO: use defaults system instead\n      }\n    }\n  }\n  return resourceEditable;\n}\nfunction transformEventDrop(mutation, context) {\n  let {\n    resourceMutation\n  } = mutation;\n  if (resourceMutation) {\n    let {\n      calendarApi\n    } = context;\n    return {\n      oldResource: calendarApi.getResourceById(resourceMutation.matchResourceId),\n      newResource: calendarApi.getResourceById(resourceMutation.setResourceId)\n    };\n  }\n  return {\n    oldResource: null,\n    newResource: null\n  };\n}\nclass ResourceDataAdder {\n  constructor() {\n    this.filterResources = memoize(filterResources);\n  }\n  transform(viewProps, calendarProps) {\n    if (calendarProps.viewSpec.optionDefaults.needsResourceData) {\n      return {\n        resourceStore: this.filterResources(calendarProps.resourceStore, calendarProps.options.filterResourcesWithEvents, calendarProps.eventStore, calendarProps.dateProfile.activeRange),\n        resourceEntityExpansions: calendarProps.resourceEntityExpansions\n      };\n    }\n    return null;\n  }\n}\nfunction filterResources(resourceStore, doFilterResourcesWithEvents, eventStore, activeRange) {\n  if (doFilterResourcesWithEvents) {\n    let instancesInRange = filterEventInstancesInRange(eventStore.instances, activeRange);\n    let hasEvents = computeHasEvents(instancesInRange, eventStore.defs);\n    Object.assign(hasEvents, computeAncestorHasEvents(hasEvents, resourceStore));\n    return filterHash(resourceStore, (resource, resourceId) => hasEvents[resourceId]);\n  }\n  return resourceStore;\n}\nfunction filterEventInstancesInRange(eventInstances, activeRange) {\n  return filterHash(eventInstances, eventInstance => rangesIntersect(eventInstance.range, activeRange));\n}\nfunction computeHasEvents(eventInstances, eventDefs) {\n  let hasEvents = {};\n  for (let instanceId in eventInstances) {\n    let instance = eventInstances[instanceId];\n    for (let resourceId of eventDefs[instance.defId].resourceIds) {\n      hasEvents[resourceId] = true;\n    }\n  }\n  return hasEvents;\n}\n/*\nmark resources as having events if any of their ancestors have them\nNOTE: resourceStore might not have all the resources that hasEvents{} has keyed\n*/\nfunction computeAncestorHasEvents(hasEvents, resourceStore) {\n  let res = {};\n  for (let resourceId in hasEvents) {\n    let resource;\n    while (resource = resourceStore[resourceId]) {\n      resourceId = resource.parentId; // now functioning as the parentId\n      if (resourceId) {\n        res[resourceId] = true;\n      } else {\n        break;\n      }\n    }\n  }\n  return res;\n}\n/*\nfor making sure events that have editable resources are always draggable in resource views\n*/\nfunction transformIsDraggable(val, eventDef, eventUi, context) {\n  if (!val) {\n    let state = context.getCurrentData();\n    let viewSpec = state.viewSpecs[state.currentViewType];\n    if (viewSpec.optionDefaults.needsResourceData) {\n      if (computeResourceEditable(eventDef, context)) {\n        return true;\n      }\n    }\n  }\n  return val;\n}\n\n// for when non-resource view should be given EventUi info (for event coloring/constraints based off of resource data)\nclass ResourceEventConfigAdder {\n  constructor() {\n    this.buildResourceEventUis = memoize(buildResourceEventUis, isPropsEqual);\n    this.injectResourceEventUis = memoize(injectResourceEventUis);\n  }\n  transform(viewProps, calendarProps) {\n    if (!calendarProps.viewSpec.optionDefaults.needsResourceData) {\n      return {\n        eventUiBases: this.injectResourceEventUis(viewProps.eventUiBases, viewProps.eventStore.defs, this.buildResourceEventUis(calendarProps.resourceStore))\n      };\n    }\n    return null;\n  }\n}\nfunction buildResourceEventUis(resourceStore) {\n  return mapHash(resourceStore, resource => resource.ui);\n}\nfunction injectResourceEventUis(eventUiBases, eventDefs, resourceEventUis) {\n  return mapHash(eventUiBases, (eventUi, defId) => {\n    if (defId) {\n      // not the '' key\n      return injectResourceEventUi(eventUi, eventDefs[defId], resourceEventUis);\n    }\n    return eventUi;\n  });\n}\nfunction injectResourceEventUi(origEventUi, eventDef, resourceEventUis) {\n  let parts = [];\n  // first resource takes precedence, which fights with the ordering of combineEventUis, thus the unshifts\n  for (let resourceId of eventDef.resourceIds) {\n    if (resourceEventUis[resourceId]) {\n      parts.unshift(resourceEventUis[resourceId]);\n    }\n  }\n  parts.unshift(origEventUi);\n  return combineEventUis(parts);\n}\nlet defs = []; // TODO: use plugin system\nfunction registerResourceSourceDef(def) {\n  defs.push(def);\n}\nfunction getResourceSourceDef(id) {\n  return defs[id];\n}\nfunction getResourceSourceDefs() {\n  return defs;\n}\n\n// TODO: make this a plugin-able parser\n// TODO: success/failure\nconst RESOURCE_SOURCE_REFINERS = {\n  id: String,\n  // for array. TODO: move to resource-array\n  resources: identity,\n  // for json feed. TODO: move to resource-json-feed\n  url: String,\n  method: String,\n  startParam: String,\n  endParam: String,\n  timeZoneParam: String,\n  extraParams: identity\n};\nfunction parseResourceSource(input) {\n  let inputObj;\n  if (typeof input === 'string') {\n    inputObj = {\n      url: input\n    };\n  } else if (typeof input === 'function' || Array.isArray(input)) {\n    inputObj = {\n      resources: input\n    };\n  } else if (typeof input === 'object' && input) {\n    // non-null object\n    inputObj = input;\n  }\n  if (inputObj) {\n    let {\n      refined,\n      extra\n    } = refineProps(inputObj, RESOURCE_SOURCE_REFINERS);\n    warnUnknownProps(extra);\n    let metaRes = buildResourceSourceMeta(refined);\n    if (metaRes) {\n      return {\n        _raw: input,\n        sourceId: guid(),\n        sourceDefId: metaRes.sourceDefId,\n        meta: metaRes.meta,\n        publicId: refined.id || '',\n        isFetching: false,\n        latestFetchId: '',\n        fetchRange: null\n      };\n    }\n  }\n  return null;\n}\nfunction buildResourceSourceMeta(refined) {\n  let defs = getResourceSourceDefs();\n  for (let i = defs.length - 1; i >= 0; i -= 1) {\n    // later-added plugins take precedence\n    let def = defs[i];\n    let meta = def.parseMeta(refined);\n    if (meta) {\n      return {\n        meta,\n        sourceDefId: i\n      };\n    }\n  }\n  return null;\n}\nfunction warnUnknownProps(props) {\n  for (let propName in props) {\n    console.warn(\"Unknown resource prop '\".concat(propName, \"'\"));\n  }\n}\nfunction reduceResourceSource(source, action, context) {\n  let {\n    options,\n    dateProfile\n  } = context;\n  if (!source || !action) {\n    return createSource(options.initialResources || options.resources, dateProfile.activeRange, options.refetchResourcesOnNavigate, context);\n  }\n  switch (action.type) {\n    case 'RESET_RESOURCE_SOURCE':\n      return createSource(action.resourceSourceInput, dateProfile.activeRange, options.refetchResourcesOnNavigate, context);\n    case 'PREV': // TODO: how do we track all actions that affect dateProfile :(\n    case 'NEXT':\n    case 'CHANGE_DATE':\n    case 'CHANGE_VIEW_TYPE':\n      return handleRangeChange(source, dateProfile.activeRange, options.refetchResourcesOnNavigate, context);\n    case 'RECEIVE_RESOURCES':\n    case 'RECEIVE_RESOURCE_ERROR':\n      return receiveResponse(source, action.fetchId, action.fetchRange);\n    case 'REFETCH_RESOURCES':\n      return fetchSource(source, dateProfile.activeRange, context);\n    default:\n      return source;\n  }\n}\nfunction createSource(input, activeRange, refetchResourcesOnNavigate, context) {\n  if (input) {\n    let source = parseResourceSource(input);\n    source = fetchSource(source, refetchResourcesOnNavigate ? activeRange : null, context);\n    return source;\n  }\n  return null;\n}\nfunction handleRangeChange(source, activeRange, refetchResourcesOnNavigate, context) {\n  if (refetchResourcesOnNavigate && !doesSourceIgnoreRange(source) && (!source.fetchRange || !rangesEqual(source.fetchRange, activeRange))) {\n    return fetchSource(source, activeRange, context);\n  }\n  return source;\n}\nfunction doesSourceIgnoreRange(source) {\n  return Boolean(getResourceSourceDef(source.sourceDefId).ignoreRange);\n}\nfunction fetchSource(source, fetchRange, context) {\n  let sourceDef = getResourceSourceDef(source.sourceDefId);\n  let fetchId = guid();\n  sourceDef.fetch({\n    resourceSource: source,\n    range: fetchRange,\n    context\n  }, res => {\n    context.dispatch({\n      type: 'RECEIVE_RESOURCES',\n      fetchId,\n      fetchRange,\n      rawResources: res.rawResources\n    });\n  }, error => {\n    context.dispatch({\n      type: 'RECEIVE_RESOURCE_ERROR',\n      fetchId,\n      fetchRange,\n      error\n    });\n  });\n  return Object.assign(Object.assign({}, source), {\n    isFetching: true,\n    latestFetchId: fetchId\n  });\n}\nfunction receiveResponse(source, fetchId, fetchRange) {\n  if (fetchId === source.latestFetchId) {\n    return Object.assign(Object.assign({}, source), {\n      isFetching: false,\n      fetchRange\n    });\n  }\n  return source;\n}\nfunction reduceResourceStore(store, action, source, context) {\n  if (!store || !action) {\n    return {};\n  }\n  switch (action.type) {\n    case 'RECEIVE_RESOURCES':\n      return receiveRawResources(store, action.rawResources, action.fetchId, source, context);\n    case 'ADD_RESOURCE':\n      return addResource(store, action.resourceHash);\n    case 'REMOVE_RESOURCE':\n      return removeResource(store, action.resourceId);\n    case 'SET_RESOURCE_PROP':\n      return setResourceProp(store, action.resourceId, action.propName, action.propValue);\n    case 'SET_RESOURCE_EXTENDED_PROP':\n      return setResourceExtendedProp(store, action.resourceId, action.propName, action.propValue);\n    default:\n      return store;\n  }\n}\nfunction receiveRawResources(existingStore, inputs, fetchId, source, context) {\n  if (source.latestFetchId === fetchId) {\n    let nextStore = {};\n    for (let input of inputs) {\n      parseResource(input, '', nextStore, context);\n    }\n    return nextStore;\n  }\n  return existingStore;\n}\nfunction addResource(existingStore, additions) {\n  // TODO: warn about duplicate IDs\n  return Object.assign(Object.assign({}, existingStore), additions);\n}\nfunction removeResource(existingStore, resourceId) {\n  let newStore = Object.assign({}, existingStore);\n  delete newStore[resourceId];\n  // promote children\n  for (let childResourceId in newStore) {\n    // a child, *maybe* but probably not\n    if (newStore[childResourceId].parentId === resourceId) {\n      newStore[childResourceId] = Object.assign(Object.assign({}, newStore[childResourceId]), {\n        parentId: ''\n      });\n    }\n  }\n  return newStore;\n}\nfunction setResourceProp(existingStore, resourceId, name, value) {\n  let existingResource = existingStore[resourceId];\n  // TODO: sanitization\n  if (existingResource) {\n    return Object.assign(Object.assign({}, existingStore), {\n      [resourceId]: Object.assign(Object.assign({}, existingResource), {\n        [name]: value\n      })\n    });\n  }\n  return existingStore;\n}\nfunction setResourceExtendedProp(existingStore, resourceId, name, value) {\n  let existingResource = existingStore[resourceId];\n  if (existingResource) {\n    return Object.assign(Object.assign({}, existingStore), {\n      [resourceId]: Object.assign(Object.assign({}, existingResource), {\n        extendedProps: Object.assign(Object.assign({}, existingResource.extendedProps), {\n          [name]: value\n        })\n      })\n    });\n  }\n  return existingStore;\n}\nfunction reduceResourceEntityExpansions(expansions, action) {\n  if (!expansions || !action) {\n    return {};\n  }\n  switch (action.type) {\n    case 'SET_RESOURCE_ENTITY_EXPANDED':\n      return Object.assign(Object.assign({}, expansions), {\n        [action.id]: action.isExpanded\n      });\n    default:\n      return expansions;\n  }\n}\nfunction reduceResources(state, action, context) {\n  let resourceSource = reduceResourceSource(state && state.resourceSource, action, context);\n  let resourceStore = reduceResourceStore(state && state.resourceStore, action, resourceSource, context);\n  let resourceEntityExpansions = reduceResourceEntityExpansions(state && state.resourceEntityExpansions, action);\n  return {\n    resourceSource,\n    resourceStore,\n    resourceEntityExpansions\n  };\n}\nconst EVENT_REFINERS = {\n  resourceId: String,\n  resourceIds: identity,\n  resourceEditable: Boolean\n};\nfunction generateEventDefResourceMembers(refined) {\n  return {\n    resourceIds: ensureStringArray(refined.resourceIds).concat(refined.resourceId ? [refined.resourceId] : []),\n    resourceEditable: refined.resourceEditable\n  };\n}\nfunction ensureStringArray(items) {\n  return (items || []).map(item => String(item));\n}\nfunction transformDateSelectionJoin(hit0, hit1) {\n  let resourceId0 = hit0.dateSpan.resourceId;\n  let resourceId1 = hit1.dateSpan.resourceId;\n  if (resourceId0 && resourceId1) {\n    return {\n      resourceId: resourceId0\n    };\n  }\n  return null;\n}\nCalendarImpl.prototype.addResource = function (input) {\n  let scrollTo = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  let currentState = this.getCurrentData();\n  let resourceHash;\n  let resource;\n  if (input instanceof ResourceApi) {\n    resource = input._resource;\n    resourceHash = {\n      [resource.id]: resource\n    };\n  } else {\n    resourceHash = {};\n    resource = parseResource(input, '', resourceHash, currentState);\n  }\n  this.dispatch({\n    type: 'ADD_RESOURCE',\n    resourceHash\n  });\n  if (scrollTo) {\n    // TODO: wait til dispatch completes somehow\n    this.trigger('_scrollRequest', {\n      resourceId: resource.id\n    });\n  }\n  let resourceApi = new ResourceApi(currentState, resource);\n  currentState.emitter.trigger('resourceAdd', {\n    resource: resourceApi,\n    revert: () => {\n      this.dispatch({\n        type: 'REMOVE_RESOURCE',\n        resourceId: resource.id\n      });\n    }\n  });\n  return resourceApi;\n};\nCalendarImpl.prototype.getResourceById = function (id) {\n  id = String(id);\n  let currentState = this.getCurrentData(); // eslint-disable-line react/no-this-in-sfc\n  if (currentState.resourceStore) {\n    // guard against calendar with no resource functionality\n    let rawResource = currentState.resourceStore[id];\n    if (rawResource) {\n      return new ResourceApi(currentState, rawResource);\n    }\n  }\n  return null;\n};\nCalendarImpl.prototype.getResources = function () {\n  let currentState = this.getCurrentData();\n  let {\n    resourceStore\n  } = currentState;\n  let resourceApis = [];\n  if (resourceStore) {\n    // guard against calendar with no resource functionality\n    for (let resourceId in resourceStore) {\n      resourceApis.push(new ResourceApi(currentState, resourceStore[resourceId]));\n    }\n  }\n  return resourceApis;\n};\nCalendarImpl.prototype.getTopLevelResources = function () {\n  let currentState = this.getCurrentData();\n  let {\n    resourceStore\n  } = currentState;\n  let resourceApis = [];\n  if (resourceStore) {\n    // guard against calendar with no resource functionality\n    for (let resourceId in resourceStore) {\n      if (!resourceStore[resourceId].parentId) {\n        resourceApis.push(new ResourceApi(currentState, resourceStore[resourceId]));\n      }\n    }\n  }\n  return resourceApis;\n};\nCalendarImpl.prototype.refetchResources = function () {\n  this.dispatch({\n    type: 'REFETCH_RESOURCES'\n  });\n};\nfunction transformDatePoint(dateSpan, context) {\n  return dateSpan.resourceId ? {\n    resource: context.calendarApi.getResourceById(dateSpan.resourceId)\n  } : {};\n}\nfunction transformDateSpan(dateSpan, context) {\n  return dateSpan.resourceId ? {\n    resource: context.calendarApi.getResourceById(dateSpan.resourceId)\n  } : {};\n}\nfunction isPropsValidWithResources(combinedProps, context) {\n  let splitter = new ResourceSplitter();\n  let sets = splitter.splitProps(Object.assign(Object.assign({}, combinedProps), {\n    resourceStore: context.getCurrentData().resourceStore\n  }));\n  for (let resourceId in sets) {\n    let props = sets[resourceId];\n    // merge in event data from the non-resource segment\n    if (resourceId && sets['']) {\n      // current segment is not the non-resource one, and there IS a non-resource one\n      props = Object.assign(Object.assign({}, props), {\n        eventStore: mergeEventStores(sets[''].eventStore, props.eventStore),\n        eventUiBases: Object.assign(Object.assign({}, sets[''].eventUiBases), props.eventUiBases)\n      });\n    }\n    if (!isPropsValid(props, context, {\n      resourceId\n    }, filterConfig.bind(null, resourceId))) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction filterConfig(resourceId, config) {\n  return Object.assign(Object.assign({}, config), {\n    constraints: filterConstraints(resourceId, config.constraints)\n  });\n}\nfunction filterConstraints(resourceId, constraints) {\n  return constraints.map(constraint => {\n    let defs = constraint.defs;\n    if (defs) {\n      // we are dealing with an EventStore\n      // if any of the events define constraints to resources that are NOT this resource,\n      // then this resource is unconditionally prohibited, which is what a `false` value does.\n      for (let defId in defs) {\n        let resourceIds = defs[defId].resourceIds;\n        if (resourceIds.length && resourceIds.indexOf(resourceId) === -1) {\n          // TODO: use a hash?!!! (for other reasons too)\n          return false;\n        }\n      }\n    }\n    return constraint;\n  });\n}\nfunction transformExternalDef(dateSpan) {\n  return dateSpan.resourceId ? {\n    resourceId: dateSpan.resourceId\n  } : {};\n}\nconst optionChangeHandlers = {\n  resources: handleResources\n};\nfunction handleResources(newSourceInput, context) {\n  let oldSourceInput = context.getCurrentData().resourceSource._raw;\n  if (oldSourceInput !== newSourceInput) {\n    context.dispatch({\n      type: 'RESET_RESOURCE_SOURCE',\n      resourceSourceInput: newSourceInput\n    });\n  }\n}\nconst OPTION_REFINERS = {\n  initialResources: identity,\n  resources: identity,\n  eventResourceEditable: Boolean,\n  refetchResourcesOnNavigate: Boolean,\n  resourceOrder: parseFieldSpecs,\n  filterResourcesWithEvents: Boolean,\n  resourceGroupField: String,\n  resourceAreaWidth: identity,\n  resourceAreaColumns: identity,\n  resourcesInitiallyExpanded: Boolean,\n  datesAboveResources: Boolean,\n  needsResourceData: Boolean,\n  resourceAreaHeaderClassNames: identity,\n  resourceAreaHeaderContent: identity,\n  resourceAreaHeaderDidMount: identity,\n  resourceAreaHeaderWillUnmount: identity,\n  resourceGroupLabelClassNames: identity,\n  resourceGroupLabelContent: identity,\n  resourceGroupLabelDidMount: identity,\n  resourceGroupLabelWillUnmount: identity,\n  resourceLabelClassNames: identity,\n  resourceLabelContent: identity,\n  resourceLabelDidMount: identity,\n  resourceLabelWillUnmount: identity,\n  resourceLaneClassNames: identity,\n  resourceLaneContent: identity,\n  resourceLaneDidMount: identity,\n  resourceLaneWillUnmount: identity,\n  resourceGroupLaneClassNames: identity,\n  resourceGroupLaneContent: identity,\n  resourceGroupLaneDidMount: identity,\n  resourceGroupLaneWillUnmount: identity\n};\nconst LISTENER_REFINERS = {\n  resourcesSet: identity,\n  resourceAdd: identity,\n  resourceChange: identity,\n  resourceRemove: identity\n};\nEventImpl.prototype.getResources = function () {\n  let {\n    calendarApi\n  } = this._context;\n  return this._def.resourceIds.map(resourceId => calendarApi.getResourceById(resourceId));\n};\nEventImpl.prototype.setResources = function (resources) {\n  let resourceIds = [];\n  // massage resources -> resourceIds\n  for (let resource of resources) {\n    let resourceId = null;\n    if (typeof resource === 'string') {\n      resourceId = resource;\n    } else if (typeof resource === 'number') {\n      resourceId = String(resource);\n    } else if (resource instanceof ResourceApi) {\n      resourceId = resource.id; // guaranteed to always have an ID. hmmm\n    } else {\n      console.warn('unknown resource type: ' + resource);\n    }\n    if (resourceId) {\n      resourceIds.push(resourceId);\n    }\n  }\n  this.mutate({\n    standardProps: {\n      resourceIds\n    }\n  });\n};\nregisterResourceSourceDef({\n  ignoreRange: true,\n  parseMeta(refined) {\n    if (Array.isArray(refined.resources)) {\n      return refined.resources;\n    }\n    return null;\n  },\n  fetch(arg, successCallback) {\n    successCallback({\n      rawResources: arg.resourceSource.meta\n    });\n  }\n});\nregisterResourceSourceDef({\n  parseMeta(refined) {\n    if (typeof refined.resources === 'function') {\n      return refined.resources;\n    }\n    return null;\n  },\n  fetch(arg, successCallback, errorCallback) {\n    const dateEnv = arg.context.dateEnv;\n    const func = arg.resourceSource.meta;\n    const publicArg = arg.range ? {\n      start: dateEnv.toDate(arg.range.start),\n      end: dateEnv.toDate(arg.range.end),\n      startStr: dateEnv.formatIso(arg.range.start),\n      endStr: dateEnv.formatIso(arg.range.end),\n      timeZone: dateEnv.timeZone\n    } : {};\n    unpromisify(func.bind(null, publicArg), rawResources => successCallback({\n      rawResources\n    }), errorCallback);\n  }\n});\nregisterResourceSourceDef({\n  parseMeta(refined) {\n    if (refined.url) {\n      return {\n        url: refined.url,\n        method: (refined.method || 'GET').toUpperCase(),\n        extraParams: refined.extraParams\n      };\n    }\n    return null;\n  },\n  fetch(arg, successCallback, errorCallback) {\n    const meta = arg.resourceSource.meta;\n    const requestParams = buildRequestParams(meta, arg.range, arg.context);\n    requestJson(meta.method, meta.url, requestParams).then(_ref => {\n      let [rawResources, response] = _ref;\n      successCallback({\n        rawResources,\n        response\n      });\n    }, errorCallback);\n  }\n});\n// TODO: somehow consolidate with event json feed\nfunction buildRequestParams(meta, range, context) {\n  let {\n    dateEnv,\n    options\n  } = context;\n  let startParam;\n  let endParam;\n  let timeZoneParam;\n  let customRequestParams;\n  let params = {};\n  if (range) {\n    startParam = meta.startParam;\n    if (startParam == null) {\n      startParam = options.startParam;\n    }\n    endParam = meta.endParam;\n    if (endParam == null) {\n      endParam = options.endParam;\n    }\n    timeZoneParam = meta.timeZoneParam;\n    if (timeZoneParam == null) {\n      timeZoneParam = options.timeZoneParam;\n    }\n    params[startParam] = dateEnv.formatIso(range.start);\n    params[endParam] = dateEnv.formatIso(range.end);\n    if (dateEnv.timeZone !== 'local') {\n      params[timeZoneParam] = dateEnv.timeZone;\n    }\n  }\n  // retrieve any outbound GET/POST data from the options\n  if (typeof meta.extraParams === 'function') {\n    // supplied as a function that returns a key/value object\n    customRequestParams = meta.extraParams();\n  } else {\n    // probably supplied as a straight key/value object\n    customRequestParams = meta.extraParams || {};\n  }\n  Object.assign(params, customRequestParams);\n  return params;\n}\nvar index = createPlugin({\n  name: '@fullcalendar/resource',\n  premiumReleaseDate: '2025-08-10',\n  deps: [premiumCommonPlugin],\n  reducers: [reduceResources],\n  isLoadingFuncs: [state => state.resourceSource && state.resourceSource.isFetching],\n  eventRefiners: EVENT_REFINERS,\n  eventDefMemberAdders: [generateEventDefResourceMembers],\n  isDraggableTransformers: [transformIsDraggable],\n  eventDragMutationMassagers: [massageEventDragMutation],\n  eventDefMutationAppliers: [applyEventDefMutation],\n  dateSelectionTransformers: [transformDateSelectionJoin],\n  datePointTransforms: [transformDatePoint],\n  dateSpanTransforms: [transformDateSpan],\n  viewPropsTransformers: [ResourceDataAdder, ResourceEventConfigAdder],\n  isPropsValid: isPropsValidWithResources,\n  externalDefTransforms: [transformExternalDef],\n  eventDropTransformers: [transformEventDrop],\n  optionChangeHandlers,\n  optionRefiners: OPTION_REFINERS,\n  listenerRefiners: LISTENER_REFINERS,\n  propSetHandlers: {\n    resourceStore: handleResourceStore\n  }\n});\nexport { index as default };","map":{"version":3,"names":["createPlugin","premiumCommonPlugin","memoize","filterHash","rangesIntersect","isPropsEqual","mapHash","combineEventUis","refineProps","guid","identity","rangesEqual","CalendarImpl","mergeEventStores","isPropsValid","parseFieldSpecs","EventImpl","unpromisify","requestJson","p","parseResource","R","ResourceApi","a","ResourceSplitter","h","handleResourceStore","massageEventDragMutation","eventMutation","hit0","hit1","resource0","dateSpan","resourceId","resource1","resourceMutation","matchResourceId","setResourceId","applyEventDefMutation","eventDef","mutation","context","computeResourceEditable","index","resourceIds","indexOf","slice","splice","push","resourceEditable","source","sourceId","getCurrentData","eventSources","extendedProps","options","eventResourceEditable","editable","transformEventDrop","calendarApi","oldResource","getResourceById","newResource","ResourceDataAdder","constructor","filterResources","transform","viewProps","calendarProps","viewSpec","optionDefaults","needsResourceData","resourceStore","filterResourcesWithEvents","eventStore","dateProfile","activeRange","resourceEntityExpansions","doFilterResourcesWithEvents","instancesInRange","filterEventInstancesInRange","instances","hasEvents","computeHasEvents","defs","Object","assign","computeAncestorHasEvents","resource","eventInstances","eventInstance","range","eventDefs","instanceId","instance","defId","res","parentId","transformIsDraggable","val","eventUi","state","viewSpecs","currentViewType","ResourceEventConfigAdder","buildResourceEventUis","injectResourceEventUis","eventUiBases","ui","resourceEventUis","injectResourceEventUi","origEventUi","parts","unshift","registerResourceSourceDef","def","getResourceSourceDef","id","getResourceSourceDefs","RESOURCE_SOURCE_REFINERS","String","resources","url","method","startParam","endParam","timeZoneParam","extraParams","parseResourceSource","input","inputObj","Array","isArray","refined","extra","warnUnknownProps","metaRes","buildResourceSourceMeta","_raw","sourceDefId","meta","publicId","isFetching","latestFetchId","fetchRange","i","length","parseMeta","props","propName","console","warn","concat","reduceResourceSource","action","createSource","initialResources","refetchResourcesOnNavigate","type","resourceSourceInput","handleRangeChange","receiveResponse","fetchId","fetchSource","doesSourceIgnoreRange","Boolean","ignoreRange","sourceDef","fetch","resourceSource","dispatch","rawResources","error","reduceResourceStore","store","receiveRawResources","addResource","resourceHash","removeResource","setResourceProp","propValue","setResourceExtendedProp","existingStore","inputs","nextStore","additions","newStore","childResourceId","name","value","existingResource","reduceResourceEntityExpansions","expansions","isExpanded","reduceResources","EVENT_REFINERS","generateEventDefResourceMembers","ensureStringArray","items","map","item","transformDateSelectionJoin","resourceId0","resourceId1","prototype","scrollTo","arguments","undefined","currentState","_resource","trigger","resourceApi","emitter","revert","rawResource","getResources","resourceApis","getTopLevelResources","refetchResources","transformDatePoint","transformDateSpan","isPropsValidWithResources","combinedProps","splitter","sets","splitProps","filterConfig","bind","config","constraints","filterConstraints","constraint","transformExternalDef","optionChangeHandlers","handleResources","newSourceInput","oldSourceInput","OPTION_REFINERS","resourceOrder","resourceGroupField","resourceAreaWidth","resourceAreaColumns","resourcesInitiallyExpanded","datesAboveResources","resourceAreaHeaderClassNames","resourceAreaHeaderContent","resourceAreaHeaderDidMount","resourceAreaHeaderWillUnmount","resourceGroupLabelClassNames","resourceGroupLabelContent","resourceGroupLabelDidMount","resourceGroupLabelWillUnmount","resourceLabelClassNames","resourceLabelContent","resourceLabelDidMount","resourceLabelWillUnmount","resourceLaneClassNames","resourceLaneContent","resourceLaneDidMount","resourceLaneWillUnmount","resourceGroupLaneClassNames","resourceGroupLaneContent","resourceGroupLaneDidMount","resourceGroupLaneWillUnmount","LISTENER_REFINERS","resourcesSet","resourceAdd","resourceChange","resourceRemove","_context","_def","setResources","mutate","standardProps","arg","successCallback","errorCallback","dateEnv","func","publicArg","start","toDate","end","startStr","formatIso","endStr","timeZone","toUpperCase","requestParams","buildRequestParams","then","_ref","response","customRequestParams","params","premiumReleaseDate","deps","reducers","isLoadingFuncs","eventRefiners","eventDefMemberAdders","isDraggableTransformers","eventDragMutationMassagers","eventDefMutationAppliers","dateSelectionTransformers","datePointTransforms","dateSpanTransforms","viewPropsTransformers","externalDefTransforms","eventDropTransformers","optionRefiners","listenerRefiners","propSetHandlers","default"],"sources":["/Users/macmini/Documents/Sistema_Consultorio/frontend/node_modules/@fullcalendar/resource/index.js"],"sourcesContent":["import { createPlugin } from '@fullcalendar/core/index.js';\nimport premiumCommonPlugin from '@fullcalendar/premium-common/index.js';\nimport { memoize, filterHash, rangesIntersect, isPropsEqual, mapHash, combineEventUis, refineProps, guid, identity, rangesEqual, CalendarImpl, mergeEventStores, isPropsValid, parseFieldSpecs, EventImpl, unpromisify, requestJson } from '@fullcalendar/core/internal.js';\nimport { p as parseResource, R as ResourceApi, a as ResourceSplitter, h as handleResourceStore } from './internal-common.js';\nexport { R as ResourceApi } from './internal-common.js';\nimport '@fullcalendar/core/preact.js';\n\nfunction massageEventDragMutation(eventMutation, hit0, hit1) {\n    let resource0 = hit0.dateSpan.resourceId;\n    let resource1 = hit1.dateSpan.resourceId;\n    if (resource0 && resource1 &&\n        resource0 !== resource1) {\n        eventMutation.resourceMutation = {\n            matchResourceId: resource0,\n            setResourceId: resource1,\n        };\n    }\n}\n/*\nTODO: all this would be much easier if we were using a hash!\n*/\nfunction applyEventDefMutation(eventDef, mutation, context) {\n    let resourceMutation = mutation.resourceMutation;\n    if (resourceMutation && computeResourceEditable(eventDef, context)) {\n        let index = eventDef.resourceIds.indexOf(resourceMutation.matchResourceId);\n        if (index !== -1) {\n            let resourceIds = eventDef.resourceIds.slice(); // copy\n            resourceIds.splice(index, 1); // remove\n            if (resourceIds.indexOf(resourceMutation.setResourceId) === -1) { // not already in there\n                resourceIds.push(resourceMutation.setResourceId); // add\n            }\n            eventDef.resourceIds = resourceIds;\n        }\n    }\n}\n/*\nHACK\nTODO: use EventUi system instead of this\n*/\nfunction computeResourceEditable(eventDef, context) {\n    let { resourceEditable } = eventDef;\n    if (resourceEditable == null) {\n        let source = eventDef.sourceId && context.getCurrentData().eventSources[eventDef.sourceId];\n        if (source) {\n            resourceEditable = source.extendedProps.resourceEditable; // used the Source::extendedProps hack\n        }\n        if (resourceEditable == null) {\n            resourceEditable = context.options.eventResourceEditable;\n            if (resourceEditable == null) {\n                resourceEditable = context.options.editable; // TODO: use defaults system instead\n            }\n        }\n    }\n    return resourceEditable;\n}\nfunction transformEventDrop(mutation, context) {\n    let { resourceMutation } = mutation;\n    if (resourceMutation) {\n        let { calendarApi } = context;\n        return {\n            oldResource: calendarApi.getResourceById(resourceMutation.matchResourceId),\n            newResource: calendarApi.getResourceById(resourceMutation.setResourceId),\n        };\n    }\n    return {\n        oldResource: null,\n        newResource: null,\n    };\n}\n\nclass ResourceDataAdder {\n    constructor() {\n        this.filterResources = memoize(filterResources);\n    }\n    transform(viewProps, calendarProps) {\n        if (calendarProps.viewSpec.optionDefaults.needsResourceData) {\n            return {\n                resourceStore: this.filterResources(calendarProps.resourceStore, calendarProps.options.filterResourcesWithEvents, calendarProps.eventStore, calendarProps.dateProfile.activeRange),\n                resourceEntityExpansions: calendarProps.resourceEntityExpansions,\n            };\n        }\n        return null;\n    }\n}\nfunction filterResources(resourceStore, doFilterResourcesWithEvents, eventStore, activeRange) {\n    if (doFilterResourcesWithEvents) {\n        let instancesInRange = filterEventInstancesInRange(eventStore.instances, activeRange);\n        let hasEvents = computeHasEvents(instancesInRange, eventStore.defs);\n        Object.assign(hasEvents, computeAncestorHasEvents(hasEvents, resourceStore));\n        return filterHash(resourceStore, (resource, resourceId) => hasEvents[resourceId]);\n    }\n    return resourceStore;\n}\nfunction filterEventInstancesInRange(eventInstances, activeRange) {\n    return filterHash(eventInstances, (eventInstance) => rangesIntersect(eventInstance.range, activeRange));\n}\nfunction computeHasEvents(eventInstances, eventDefs) {\n    let hasEvents = {};\n    for (let instanceId in eventInstances) {\n        let instance = eventInstances[instanceId];\n        for (let resourceId of eventDefs[instance.defId].resourceIds) {\n            hasEvents[resourceId] = true;\n        }\n    }\n    return hasEvents;\n}\n/*\nmark resources as having events if any of their ancestors have them\nNOTE: resourceStore might not have all the resources that hasEvents{} has keyed\n*/\nfunction computeAncestorHasEvents(hasEvents, resourceStore) {\n    let res = {};\n    for (let resourceId in hasEvents) {\n        let resource;\n        while ((resource = resourceStore[resourceId])) {\n            resourceId = resource.parentId; // now functioning as the parentId\n            if (resourceId) {\n                res[resourceId] = true;\n            }\n            else {\n                break;\n            }\n        }\n    }\n    return res;\n}\n/*\nfor making sure events that have editable resources are always draggable in resource views\n*/\nfunction transformIsDraggable(val, eventDef, eventUi, context) {\n    if (!val) {\n        let state = context.getCurrentData();\n        let viewSpec = state.viewSpecs[state.currentViewType];\n        if (viewSpec.optionDefaults.needsResourceData) {\n            if (computeResourceEditable(eventDef, context)) {\n                return true;\n            }\n        }\n    }\n    return val;\n}\n\n// for when non-resource view should be given EventUi info (for event coloring/constraints based off of resource data)\nclass ResourceEventConfigAdder {\n    constructor() {\n        this.buildResourceEventUis = memoize(buildResourceEventUis, isPropsEqual);\n        this.injectResourceEventUis = memoize(injectResourceEventUis);\n    }\n    transform(viewProps, calendarProps) {\n        if (!calendarProps.viewSpec.optionDefaults.needsResourceData) {\n            return {\n                eventUiBases: this.injectResourceEventUis(viewProps.eventUiBases, viewProps.eventStore.defs, this.buildResourceEventUis(calendarProps.resourceStore)),\n            };\n        }\n        return null;\n    }\n}\nfunction buildResourceEventUis(resourceStore) {\n    return mapHash(resourceStore, (resource) => resource.ui);\n}\nfunction injectResourceEventUis(eventUiBases, eventDefs, resourceEventUis) {\n    return mapHash(eventUiBases, (eventUi, defId) => {\n        if (defId) { // not the '' key\n            return injectResourceEventUi(eventUi, eventDefs[defId], resourceEventUis);\n        }\n        return eventUi;\n    });\n}\nfunction injectResourceEventUi(origEventUi, eventDef, resourceEventUis) {\n    let parts = [];\n    // first resource takes precedence, which fights with the ordering of combineEventUis, thus the unshifts\n    for (let resourceId of eventDef.resourceIds) {\n        if (resourceEventUis[resourceId]) {\n            parts.unshift(resourceEventUis[resourceId]);\n        }\n    }\n    parts.unshift(origEventUi);\n    return combineEventUis(parts);\n}\n\nlet defs = []; // TODO: use plugin system\nfunction registerResourceSourceDef(def) {\n    defs.push(def);\n}\nfunction getResourceSourceDef(id) {\n    return defs[id];\n}\nfunction getResourceSourceDefs() {\n    return defs;\n}\n\n// TODO: make this a plugin-able parser\n// TODO: success/failure\nconst RESOURCE_SOURCE_REFINERS = {\n    id: String,\n    // for array. TODO: move to resource-array\n    resources: identity,\n    // for json feed. TODO: move to resource-json-feed\n    url: String,\n    method: String,\n    startParam: String,\n    endParam: String,\n    timeZoneParam: String,\n    extraParams: identity,\n};\nfunction parseResourceSource(input) {\n    let inputObj;\n    if (typeof input === 'string') {\n        inputObj = { url: input };\n    }\n    else if (typeof input === 'function' || Array.isArray(input)) {\n        inputObj = { resources: input };\n    }\n    else if (typeof input === 'object' && input) { // non-null object\n        inputObj = input;\n    }\n    if (inputObj) {\n        let { refined, extra } = refineProps(inputObj, RESOURCE_SOURCE_REFINERS);\n        warnUnknownProps(extra);\n        let metaRes = buildResourceSourceMeta(refined);\n        if (metaRes) {\n            return {\n                _raw: input,\n                sourceId: guid(),\n                sourceDefId: metaRes.sourceDefId,\n                meta: metaRes.meta,\n                publicId: refined.id || '',\n                isFetching: false,\n                latestFetchId: '',\n                fetchRange: null,\n            };\n        }\n    }\n    return null;\n}\nfunction buildResourceSourceMeta(refined) {\n    let defs = getResourceSourceDefs();\n    for (let i = defs.length - 1; i >= 0; i -= 1) { // later-added plugins take precedence\n        let def = defs[i];\n        let meta = def.parseMeta(refined);\n        if (meta) {\n            return { meta, sourceDefId: i };\n        }\n    }\n    return null;\n}\nfunction warnUnknownProps(props) {\n    for (let propName in props) {\n        console.warn(`Unknown resource prop '${propName}'`);\n    }\n}\n\nfunction reduceResourceSource(source, action, context) {\n    let { options, dateProfile } = context;\n    if (!source || !action) {\n        return createSource(options.initialResources || options.resources, dateProfile.activeRange, options.refetchResourcesOnNavigate, context);\n    }\n    switch (action.type) {\n        case 'RESET_RESOURCE_SOURCE':\n            return createSource(action.resourceSourceInput, dateProfile.activeRange, options.refetchResourcesOnNavigate, context);\n        case 'PREV': // TODO: how do we track all actions that affect dateProfile :(\n        case 'NEXT':\n        case 'CHANGE_DATE':\n        case 'CHANGE_VIEW_TYPE':\n            return handleRangeChange(source, dateProfile.activeRange, options.refetchResourcesOnNavigate, context);\n        case 'RECEIVE_RESOURCES':\n        case 'RECEIVE_RESOURCE_ERROR':\n            return receiveResponse(source, action.fetchId, action.fetchRange);\n        case 'REFETCH_RESOURCES':\n            return fetchSource(source, dateProfile.activeRange, context);\n        default:\n            return source;\n    }\n}\nfunction createSource(input, activeRange, refetchResourcesOnNavigate, context) {\n    if (input) {\n        let source = parseResourceSource(input);\n        source = fetchSource(source, refetchResourcesOnNavigate ? activeRange : null, context);\n        return source;\n    }\n    return null;\n}\nfunction handleRangeChange(source, activeRange, refetchResourcesOnNavigate, context) {\n    if (refetchResourcesOnNavigate &&\n        !doesSourceIgnoreRange(source) &&\n        (!source.fetchRange || !rangesEqual(source.fetchRange, activeRange))) {\n        return fetchSource(source, activeRange, context);\n    }\n    return source;\n}\nfunction doesSourceIgnoreRange(source) {\n    return Boolean(getResourceSourceDef(source.sourceDefId).ignoreRange);\n}\nfunction fetchSource(source, fetchRange, context) {\n    let sourceDef = getResourceSourceDef(source.sourceDefId);\n    let fetchId = guid();\n    sourceDef.fetch({\n        resourceSource: source,\n        range: fetchRange,\n        context,\n    }, (res) => {\n        context.dispatch({\n            type: 'RECEIVE_RESOURCES',\n            fetchId,\n            fetchRange,\n            rawResources: res.rawResources,\n        });\n    }, (error) => {\n        context.dispatch({\n            type: 'RECEIVE_RESOURCE_ERROR',\n            fetchId,\n            fetchRange,\n            error,\n        });\n    });\n    return Object.assign(Object.assign({}, source), { isFetching: true, latestFetchId: fetchId });\n}\nfunction receiveResponse(source, fetchId, fetchRange) {\n    if (fetchId === source.latestFetchId) {\n        return Object.assign(Object.assign({}, source), { isFetching: false, fetchRange });\n    }\n    return source;\n}\n\nfunction reduceResourceStore(store, action, source, context) {\n    if (!store || !action) {\n        return {};\n    }\n    switch (action.type) {\n        case 'RECEIVE_RESOURCES':\n            return receiveRawResources(store, action.rawResources, action.fetchId, source, context);\n        case 'ADD_RESOURCE':\n            return addResource(store, action.resourceHash);\n        case 'REMOVE_RESOURCE':\n            return removeResource(store, action.resourceId);\n        case 'SET_RESOURCE_PROP':\n            return setResourceProp(store, action.resourceId, action.propName, action.propValue);\n        case 'SET_RESOURCE_EXTENDED_PROP':\n            return setResourceExtendedProp(store, action.resourceId, action.propName, action.propValue);\n        default:\n            return store;\n    }\n}\nfunction receiveRawResources(existingStore, inputs, fetchId, source, context) {\n    if (source.latestFetchId === fetchId) {\n        let nextStore = {};\n        for (let input of inputs) {\n            parseResource(input, '', nextStore, context);\n        }\n        return nextStore;\n    }\n    return existingStore;\n}\nfunction addResource(existingStore, additions) {\n    // TODO: warn about duplicate IDs\n    return Object.assign(Object.assign({}, existingStore), additions);\n}\nfunction removeResource(existingStore, resourceId) {\n    let newStore = Object.assign({}, existingStore);\n    delete newStore[resourceId];\n    // promote children\n    for (let childResourceId in newStore) { // a child, *maybe* but probably not\n        if (newStore[childResourceId].parentId === resourceId) {\n            newStore[childResourceId] = Object.assign(Object.assign({}, newStore[childResourceId]), { parentId: '' });\n        }\n    }\n    return newStore;\n}\nfunction setResourceProp(existingStore, resourceId, name, value) {\n    let existingResource = existingStore[resourceId];\n    // TODO: sanitization\n    if (existingResource) {\n        return Object.assign(Object.assign({}, existingStore), { [resourceId]: Object.assign(Object.assign({}, existingResource), { [name]: value }) });\n    }\n    return existingStore;\n}\nfunction setResourceExtendedProp(existingStore, resourceId, name, value) {\n    let existingResource = existingStore[resourceId];\n    if (existingResource) {\n        return Object.assign(Object.assign({}, existingStore), { [resourceId]: Object.assign(Object.assign({}, existingResource), { extendedProps: Object.assign(Object.assign({}, existingResource.extendedProps), { [name]: value }) }) });\n    }\n    return existingStore;\n}\n\nfunction reduceResourceEntityExpansions(expansions, action) {\n    if (!expansions || !action) {\n        return {};\n    }\n    switch (action.type) {\n        case 'SET_RESOURCE_ENTITY_EXPANDED':\n            return Object.assign(Object.assign({}, expansions), { [action.id]: action.isExpanded });\n        default:\n            return expansions;\n    }\n}\n\nfunction reduceResources(state, action, context) {\n    let resourceSource = reduceResourceSource(state && state.resourceSource, action, context);\n    let resourceStore = reduceResourceStore(state && state.resourceStore, action, resourceSource, context);\n    let resourceEntityExpansions = reduceResourceEntityExpansions(state && state.resourceEntityExpansions, action);\n    return {\n        resourceSource,\n        resourceStore,\n        resourceEntityExpansions,\n    };\n}\n\nconst EVENT_REFINERS = {\n    resourceId: String,\n    resourceIds: identity,\n    resourceEditable: Boolean,\n};\nfunction generateEventDefResourceMembers(refined) {\n    return {\n        resourceIds: ensureStringArray(refined.resourceIds)\n            .concat(refined.resourceId ? [refined.resourceId] : []),\n        resourceEditable: refined.resourceEditable,\n    };\n}\nfunction ensureStringArray(items) {\n    return (items || []).map((item) => String(item));\n}\n\nfunction transformDateSelectionJoin(hit0, hit1) {\n    let resourceId0 = hit0.dateSpan.resourceId;\n    let resourceId1 = hit1.dateSpan.resourceId;\n    if (resourceId0 && resourceId1) {\n        return { resourceId: resourceId0 };\n    }\n    return null;\n}\n\nCalendarImpl.prototype.addResource = function (input, scrollTo = true) {\n    let currentState = this.getCurrentData();\n    let resourceHash;\n    let resource;\n    if (input instanceof ResourceApi) {\n        resource = input._resource;\n        resourceHash = { [resource.id]: resource };\n    }\n    else {\n        resourceHash = {};\n        resource = parseResource(input, '', resourceHash, currentState);\n    }\n    this.dispatch({\n        type: 'ADD_RESOURCE',\n        resourceHash,\n    });\n    if (scrollTo) {\n        // TODO: wait til dispatch completes somehow\n        this.trigger('_scrollRequest', { resourceId: resource.id });\n    }\n    let resourceApi = new ResourceApi(currentState, resource);\n    currentState.emitter.trigger('resourceAdd', {\n        resource: resourceApi,\n        revert: () => {\n            this.dispatch({\n                type: 'REMOVE_RESOURCE',\n                resourceId: resource.id,\n            });\n        },\n    });\n    return resourceApi;\n};\nCalendarImpl.prototype.getResourceById = function (id) {\n    id = String(id);\n    let currentState = this.getCurrentData(); // eslint-disable-line react/no-this-in-sfc\n    if (currentState.resourceStore) { // guard against calendar with no resource functionality\n        let rawResource = currentState.resourceStore[id];\n        if (rawResource) {\n            return new ResourceApi(currentState, rawResource);\n        }\n    }\n    return null;\n};\nCalendarImpl.prototype.getResources = function () {\n    let currentState = this.getCurrentData();\n    let { resourceStore } = currentState;\n    let resourceApis = [];\n    if (resourceStore) { // guard against calendar with no resource functionality\n        for (let resourceId in resourceStore) {\n            resourceApis.push(new ResourceApi(currentState, resourceStore[resourceId]));\n        }\n    }\n    return resourceApis;\n};\nCalendarImpl.prototype.getTopLevelResources = function () {\n    let currentState = this.getCurrentData();\n    let { resourceStore } = currentState;\n    let resourceApis = [];\n    if (resourceStore) { // guard against calendar with no resource functionality\n        for (let resourceId in resourceStore) {\n            if (!resourceStore[resourceId].parentId) {\n                resourceApis.push(new ResourceApi(currentState, resourceStore[resourceId]));\n            }\n        }\n    }\n    return resourceApis;\n};\nCalendarImpl.prototype.refetchResources = function () {\n    this.dispatch({\n        type: 'REFETCH_RESOURCES',\n    });\n};\nfunction transformDatePoint(dateSpan, context) {\n    return dateSpan.resourceId ?\n        { resource: context.calendarApi.getResourceById(dateSpan.resourceId) } :\n        {};\n}\nfunction transformDateSpan(dateSpan, context) {\n    return dateSpan.resourceId ?\n        { resource: context.calendarApi.getResourceById(dateSpan.resourceId) } :\n        {};\n}\n\nfunction isPropsValidWithResources(combinedProps, context) {\n    let splitter = new ResourceSplitter();\n    let sets = splitter.splitProps(Object.assign(Object.assign({}, combinedProps), { resourceStore: context.getCurrentData().resourceStore }));\n    for (let resourceId in sets) {\n        let props = sets[resourceId];\n        // merge in event data from the non-resource segment\n        if (resourceId && sets['']) { // current segment is not the non-resource one, and there IS a non-resource one\n            props = Object.assign(Object.assign({}, props), { eventStore: mergeEventStores(sets[''].eventStore, props.eventStore), eventUiBases: Object.assign(Object.assign({}, sets[''].eventUiBases), props.eventUiBases) });\n        }\n        if (!isPropsValid(props, context, { resourceId }, filterConfig.bind(null, resourceId))) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction filterConfig(resourceId, config) {\n    return Object.assign(Object.assign({}, config), { constraints: filterConstraints(resourceId, config.constraints) });\n}\nfunction filterConstraints(resourceId, constraints) {\n    return constraints.map((constraint) => {\n        let defs = constraint.defs;\n        if (defs) { // we are dealing with an EventStore\n            // if any of the events define constraints to resources that are NOT this resource,\n            // then this resource is unconditionally prohibited, which is what a `false` value does.\n            for (let defId in defs) {\n                let resourceIds = defs[defId].resourceIds;\n                if (resourceIds.length && resourceIds.indexOf(resourceId) === -1) { // TODO: use a hash?!!! (for other reasons too)\n                    return false;\n                }\n            }\n        }\n        return constraint;\n    });\n}\n\nfunction transformExternalDef(dateSpan) {\n    return dateSpan.resourceId ?\n        { resourceId: dateSpan.resourceId } :\n        {};\n}\n\nconst optionChangeHandlers = {\n    resources: handleResources,\n};\nfunction handleResources(newSourceInput, context) {\n    let oldSourceInput = context.getCurrentData().resourceSource._raw;\n    if (oldSourceInput !== newSourceInput) {\n        context.dispatch({\n            type: 'RESET_RESOURCE_SOURCE',\n            resourceSourceInput: newSourceInput,\n        });\n    }\n}\n\nconst OPTION_REFINERS = {\n    initialResources: identity,\n    resources: identity,\n    eventResourceEditable: Boolean,\n    refetchResourcesOnNavigate: Boolean,\n    resourceOrder: parseFieldSpecs,\n    filterResourcesWithEvents: Boolean,\n    resourceGroupField: String,\n    resourceAreaWidth: identity,\n    resourceAreaColumns: identity,\n    resourcesInitiallyExpanded: Boolean,\n    datesAboveResources: Boolean,\n    needsResourceData: Boolean,\n    resourceAreaHeaderClassNames: identity,\n    resourceAreaHeaderContent: identity,\n    resourceAreaHeaderDidMount: identity,\n    resourceAreaHeaderWillUnmount: identity,\n    resourceGroupLabelClassNames: identity,\n    resourceGroupLabelContent: identity,\n    resourceGroupLabelDidMount: identity,\n    resourceGroupLabelWillUnmount: identity,\n    resourceLabelClassNames: identity,\n    resourceLabelContent: identity,\n    resourceLabelDidMount: identity,\n    resourceLabelWillUnmount: identity,\n    resourceLaneClassNames: identity,\n    resourceLaneContent: identity,\n    resourceLaneDidMount: identity,\n    resourceLaneWillUnmount: identity,\n    resourceGroupLaneClassNames: identity,\n    resourceGroupLaneContent: identity,\n    resourceGroupLaneDidMount: identity,\n    resourceGroupLaneWillUnmount: identity,\n};\nconst LISTENER_REFINERS = {\n    resourcesSet: identity,\n    resourceAdd: identity,\n    resourceChange: identity,\n    resourceRemove: identity,\n};\n\nEventImpl.prototype.getResources = function () {\n    let { calendarApi } = this._context;\n    return this._def.resourceIds.map((resourceId) => calendarApi.getResourceById(resourceId));\n};\nEventImpl.prototype.setResources = function (resources) {\n    let resourceIds = [];\n    // massage resources -> resourceIds\n    for (let resource of resources) {\n        let resourceId = null;\n        if (typeof resource === 'string') {\n            resourceId = resource;\n        }\n        else if (typeof resource === 'number') {\n            resourceId = String(resource);\n        }\n        else if (resource instanceof ResourceApi) {\n            resourceId = resource.id; // guaranteed to always have an ID. hmmm\n        }\n        else {\n            console.warn('unknown resource type: ' + resource);\n        }\n        if (resourceId) {\n            resourceIds.push(resourceId);\n        }\n    }\n    this.mutate({\n        standardProps: {\n            resourceIds,\n        },\n    });\n};\n\nregisterResourceSourceDef({\n    ignoreRange: true,\n    parseMeta(refined) {\n        if (Array.isArray(refined.resources)) {\n            return refined.resources;\n        }\n        return null;\n    },\n    fetch(arg, successCallback) {\n        successCallback({\n            rawResources: arg.resourceSource.meta,\n        });\n    },\n});\n\nregisterResourceSourceDef({\n    parseMeta(refined) {\n        if (typeof refined.resources === 'function') {\n            return refined.resources;\n        }\n        return null;\n    },\n    fetch(arg, successCallback, errorCallback) {\n        const dateEnv = arg.context.dateEnv;\n        const func = arg.resourceSource.meta;\n        const publicArg = arg.range ? {\n            start: dateEnv.toDate(arg.range.start),\n            end: dateEnv.toDate(arg.range.end),\n            startStr: dateEnv.formatIso(arg.range.start),\n            endStr: dateEnv.formatIso(arg.range.end),\n            timeZone: dateEnv.timeZone,\n        } : {};\n        unpromisify(func.bind(null, publicArg), (rawResources) => successCallback({ rawResources }), errorCallback);\n    },\n});\n\nregisterResourceSourceDef({\n    parseMeta(refined) {\n        if (refined.url) {\n            return {\n                url: refined.url,\n                method: (refined.method || 'GET').toUpperCase(),\n                extraParams: refined.extraParams,\n            };\n        }\n        return null;\n    },\n    fetch(arg, successCallback, errorCallback) {\n        const meta = arg.resourceSource.meta;\n        const requestParams = buildRequestParams(meta, arg.range, arg.context);\n        requestJson(meta.method, meta.url, requestParams).then(([rawResources, response]) => {\n            successCallback({ rawResources, response });\n        }, errorCallback);\n    },\n});\n// TODO: somehow consolidate with event json feed\nfunction buildRequestParams(meta, range, context) {\n    let { dateEnv, options } = context;\n    let startParam;\n    let endParam;\n    let timeZoneParam;\n    let customRequestParams;\n    let params = {};\n    if (range) {\n        startParam = meta.startParam;\n        if (startParam == null) {\n            startParam = options.startParam;\n        }\n        endParam = meta.endParam;\n        if (endParam == null) {\n            endParam = options.endParam;\n        }\n        timeZoneParam = meta.timeZoneParam;\n        if (timeZoneParam == null) {\n            timeZoneParam = options.timeZoneParam;\n        }\n        params[startParam] = dateEnv.formatIso(range.start);\n        params[endParam] = dateEnv.formatIso(range.end);\n        if (dateEnv.timeZone !== 'local') {\n            params[timeZoneParam] = dateEnv.timeZone;\n        }\n    }\n    // retrieve any outbound GET/POST data from the options\n    if (typeof meta.extraParams === 'function') {\n        // supplied as a function that returns a key/value object\n        customRequestParams = meta.extraParams();\n    }\n    else {\n        // probably supplied as a straight key/value object\n        customRequestParams = meta.extraParams || {};\n    }\n    Object.assign(params, customRequestParams);\n    return params;\n}\n\nvar index = createPlugin({\n    name: '@fullcalendar/resource',\n    premiumReleaseDate: '2025-08-10',\n    deps: [premiumCommonPlugin],\n    reducers: [reduceResources],\n    isLoadingFuncs: [\n        (state) => state.resourceSource && state.resourceSource.isFetching,\n    ],\n    eventRefiners: EVENT_REFINERS,\n    eventDefMemberAdders: [generateEventDefResourceMembers],\n    isDraggableTransformers: [transformIsDraggable],\n    eventDragMutationMassagers: [massageEventDragMutation],\n    eventDefMutationAppliers: [applyEventDefMutation],\n    dateSelectionTransformers: [transformDateSelectionJoin],\n    datePointTransforms: [transformDatePoint],\n    dateSpanTransforms: [transformDateSpan],\n    viewPropsTransformers: [ResourceDataAdder, ResourceEventConfigAdder],\n    isPropsValid: isPropsValidWithResources,\n    externalDefTransforms: [transformExternalDef],\n    eventDropTransformers: [transformEventDrop],\n    optionChangeHandlers,\n    optionRefiners: OPTION_REFINERS,\n    listenerRefiners: LISTENER_REFINERS,\n    propSetHandlers: { resourceStore: handleResourceStore },\n});\n\nexport { index as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}