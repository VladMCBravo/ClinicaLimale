{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { applyDefaultDate } from \"../internals/utils/date-utils.js\";\nimport { singleItemFieldValueManager, singleItemValueManager } from \"../internals/utils/valueManagers.js\";\nimport { validateDateTime } from \"../validation/index.js\";\nimport { useDefaultDates } from \"../internals/hooks/useUtils.js\";\nimport { usePickerAdapter, usePickerTranslations } from \"../hooks/index.js\";\nexport function useDateTimeManager() {\n  let parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    enableAccessibleFieldDOMStructure = true\n  } = parameters;\n  return React.useMemo(() => ({\n    valueType: 'date-time',\n    validator: validateDateTime,\n    internal_valueManager: singleItemValueManager,\n    internal_fieldValueManager: singleItemFieldValueManager,\n    internal_enableAccessibleFieldDOMStructure: enableAccessibleFieldDOMStructure,\n    internal_useApplyDefaultValuesToFieldInternalProps: useApplyDefaultValuesToDateTimeFieldInternalProps,\n    internal_useOpenPickerButtonAriaLabel: useOpenPickerButtonAriaLabel\n  }), [enableAccessibleFieldDOMStructure]);\n}\nfunction useOpenPickerButtonAriaLabel(value) {\n  const adapter = usePickerAdapter();\n  const translations = usePickerTranslations();\n  return React.useMemo(() => {\n    const formattedValue = adapter.isValid(value) ? adapter.format(value, 'fullDate') : null;\n    return translations.openDatePickerDialogue(formattedValue);\n  }, [value, translations, adapter]);\n}\nfunction useApplyDefaultValuesToDateTimeFieldInternalProps(internalProps) {\n  const adapter = usePickerAdapter();\n  const validationProps = useApplyDefaultValuesToDateTimeValidationProps(internalProps);\n  const ampm = React.useMemo(() => {\n    var _internalProps$ampm;\n    return (_internalProps$ampm = internalProps.ampm) !== null && _internalProps$ampm !== void 0 ? _internalProps$ampm : adapter.is12HourCycleInCurrentLocale();\n  }, [internalProps.ampm, adapter]);\n  return React.useMemo(() => {\n    var _internalProps$format;\n    return _extends({}, internalProps, validationProps, {\n      format: (_internalProps$format = internalProps.format) !== null && _internalProps$format !== void 0 ? _internalProps$format : ampm ? adapter.formats.keyboardDateTime12h : adapter.formats.keyboardDateTime24h\n    });\n  }, [internalProps, validationProps, ampm, adapter]);\n}\nexport function useApplyDefaultValuesToDateTimeValidationProps(props) {\n  const adapter = usePickerAdapter();\n  const defaultDates = useDefaultDates();\n  return React.useMemo(() => {\n    var _props$disablePast, _props$disableFuture, _props$minDateTime, _props$maxDateTime, _props$minDateTime2, _props$maxDateTime2;\n    return {\n      disablePast: (_props$disablePast = props.disablePast) !== null && _props$disablePast !== void 0 ? _props$disablePast : false,\n      disableFuture: (_props$disableFuture = props.disableFuture) !== null && _props$disableFuture !== void 0 ? _props$disableFuture : false,\n      // TODO: Explore if we can remove it from the public API\n      disableIgnoringDatePartForTimeValidation: !!props.minDateTime || !!props.maxDateTime || !!props.disableFuture || !!props.disablePast,\n      minDate: applyDefaultDate(adapter, (_props$minDateTime = props.minDateTime) !== null && _props$minDateTime !== void 0 ? _props$minDateTime : props.minDate, defaultDates.minDate),\n      maxDate: applyDefaultDate(adapter, (_props$maxDateTime = props.maxDateTime) !== null && _props$maxDateTime !== void 0 ? _props$maxDateTime : props.maxDate, defaultDates.maxDate),\n      minTime: (_props$minDateTime2 = props.minDateTime) !== null && _props$minDateTime2 !== void 0 ? _props$minDateTime2 : props.minTime,\n      maxTime: (_props$maxDateTime2 = props.maxDateTime) !== null && _props$maxDateTime2 !== void 0 ? _props$maxDateTime2 : props.maxTime\n    };\n  }, [props.minDateTime, props.maxDateTime, props.minTime, props.maxTime, props.minDate, props.maxDate, props.disableFuture, props.disablePast, adapter, defaultDates]);\n}","map":{"version":3,"names":["_extends","React","applyDefaultDate","singleItemFieldValueManager","singleItemValueManager","validateDateTime","useDefaultDates","usePickerAdapter","usePickerTranslations","useDateTimeManager","parameters","arguments","length","undefined","enableAccessibleFieldDOMStructure","useMemo","valueType","validator","internal_valueManager","internal_fieldValueManager","internal_enableAccessibleFieldDOMStructure","internal_useApplyDefaultValuesToFieldInternalProps","useApplyDefaultValuesToDateTimeFieldInternalProps","internal_useOpenPickerButtonAriaLabel","useOpenPickerButtonAriaLabel","value","adapter","translations","formattedValue","isValid","format","openDatePickerDialogue","internalProps","validationProps","useApplyDefaultValuesToDateTimeValidationProps","ampm","_internalProps$ampm","is12HourCycleInCurrentLocale","_internalProps$format","formats","keyboardDateTime12h","keyboardDateTime24h","props","defaultDates","_props$disablePast","_props$disableFuture","_props$minDateTime","_props$maxDateTime","_props$minDateTime2","_props$maxDateTime2","disablePast","disableFuture","disableIgnoringDatePartForTimeValidation","minDateTime","maxDateTime","minDate","maxDate","minTime","maxTime"],"sources":["/Users/macmini/Documents/Sistema_Consultorio/frontend/node_modules/@mui/x-date-pickers/esm/managers/useDateTimeManager.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { applyDefaultDate } from \"../internals/utils/date-utils.js\";\nimport { singleItemFieldValueManager, singleItemValueManager } from \"../internals/utils/valueManagers.js\";\nimport { validateDateTime } from \"../validation/index.js\";\nimport { useDefaultDates } from \"../internals/hooks/useUtils.js\";\nimport { usePickerAdapter, usePickerTranslations } from \"../hooks/index.js\";\nexport function useDateTimeManager(parameters = {}) {\n  const {\n    enableAccessibleFieldDOMStructure = true\n  } = parameters;\n  return React.useMemo(() => ({\n    valueType: 'date-time',\n    validator: validateDateTime,\n    internal_valueManager: singleItemValueManager,\n    internal_fieldValueManager: singleItemFieldValueManager,\n    internal_enableAccessibleFieldDOMStructure: enableAccessibleFieldDOMStructure,\n    internal_useApplyDefaultValuesToFieldInternalProps: useApplyDefaultValuesToDateTimeFieldInternalProps,\n    internal_useOpenPickerButtonAriaLabel: useOpenPickerButtonAriaLabel\n  }), [enableAccessibleFieldDOMStructure]);\n}\nfunction useOpenPickerButtonAriaLabel(value) {\n  const adapter = usePickerAdapter();\n  const translations = usePickerTranslations();\n  return React.useMemo(() => {\n    const formattedValue = adapter.isValid(value) ? adapter.format(value, 'fullDate') : null;\n    return translations.openDatePickerDialogue(formattedValue);\n  }, [value, translations, adapter]);\n}\nfunction useApplyDefaultValuesToDateTimeFieldInternalProps(internalProps) {\n  const adapter = usePickerAdapter();\n  const validationProps = useApplyDefaultValuesToDateTimeValidationProps(internalProps);\n  const ampm = React.useMemo(() => internalProps.ampm ?? adapter.is12HourCycleInCurrentLocale(), [internalProps.ampm, adapter]);\n  return React.useMemo(() => _extends({}, internalProps, validationProps, {\n    format: internalProps.format ?? (ampm ? adapter.formats.keyboardDateTime12h : adapter.formats.keyboardDateTime24h)\n  }), [internalProps, validationProps, ampm, adapter]);\n}\nexport function useApplyDefaultValuesToDateTimeValidationProps(props) {\n  const adapter = usePickerAdapter();\n  const defaultDates = useDefaultDates();\n  return React.useMemo(() => ({\n    disablePast: props.disablePast ?? false,\n    disableFuture: props.disableFuture ?? false,\n    // TODO: Explore if we can remove it from the public API\n    disableIgnoringDatePartForTimeValidation: !!props.minDateTime || !!props.maxDateTime || !!props.disableFuture || !!props.disablePast,\n    minDate: applyDefaultDate(adapter, props.minDateTime ?? props.minDate, defaultDates.minDate),\n    maxDate: applyDefaultDate(adapter, props.maxDateTime ?? props.maxDate, defaultDates.maxDate),\n    minTime: props.minDateTime ?? props.minTime,\n    maxTime: props.maxDateTime ?? props.maxTime\n  }), [props.minDateTime, props.maxDateTime, props.minTime, props.maxTime, props.minDate, props.maxDate, props.disableFuture, props.disablePast, adapter, defaultDates]);\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}