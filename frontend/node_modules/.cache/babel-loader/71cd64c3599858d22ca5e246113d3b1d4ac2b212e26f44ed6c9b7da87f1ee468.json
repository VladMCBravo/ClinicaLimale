{"ast":null,"code":"// src/services/faturamentoService.js - VERSÃO COMPLETA E ATUALIZADA\nimport apiClient from'../api/axiosConfig';// --- Funções para Procedimentos e Preços (já existentes) ---\nconst getProcedimentos=()=>apiClient.get('/faturamento/procedimentos/');const updateProcedimento=(id,data)=>apiClient.put(\"/faturamento/procedimentos/\".concat(id,\"/\"),data);const definirPrecoConvenio=(procedimentoId,data)=>apiClient.post(\"/faturamento/procedimentos/\".concat(procedimentoId,\"/definir-preco-convenio/\"),data);const getPlanosConvenio=()=>apiClient.get('/faturamento/planos/');const uploadTuss=formData=>{// O segundo argumento é o 'data', que é o nosso FormData com o arquivo.\n// O terceiro argumento são as 'options', onde definimos o cabeçalho correto para upload de arquivos.\nreturn apiClient.post('/faturamento/procedimentos/upload-tuss/',formData,{headers:{'Content-Type':'multipart/form-data'}});};// --- Funções para Pagamentos Pendentes ---\nconst getPagamentosPendentes=()=>apiClient.get('/faturamento/pagamentos-pendentes/');// --- Funções para Despesas ---\nconst getDespesas=()=>apiClient.get('/faturamento/despesas/');const getCategoriasDespesa=()=>apiClient.get('/faturamento/categorias-despesa/');const createDespesa=data=>apiClient.post('/faturamento/despesas/',data);// Para o formulário de Lançamento Avulso\nconst createLancamentoAvulso=data=>{return apiClient.post('/faturamento/lancamento-avulso/',data);};// --- Funções para Relatórios ---\nconst getRelatorioFinanceiro=()=>apiClient.get('/faturamento/relatorios/financeiro/');// --- Funções para Faturamento de Convênios ---\nconst getConvenios=()=>apiClient.get('/faturamento/convenios/');const getAgendamentosFaturaveis=params=>apiClient.get('/faturamento/agendamentos-faturaveis/',{params});const gerarLoteFaturamento=data=>apiClient.post('/faturamento/gerar-lote/',data,{responseType:'blob'});// --- NOVA FUNÇÃO PARA O DASHBOARD ---\nconst getDashboardFinanceiro=()=>apiClient.get('/faturamento/dashboard-financeiro/');// Busca as cobranças pendentes para um paciente específico\nconst getCobrancasPendentes=pacienteId=>{return apiClient.get(\"/faturamento/pacientes/\".concat(pacienteId,\"/cobrancas-pendentes/\"));};// Atualiza um pagamento (ex: para marcar como 'Pago')\nconst updatePagamento=(pagamentoId,data)=>{// Usamos PATCH para uma atualização parcial (apenas o status e forma de pagamento)\nreturn apiClient.patch(\"/faturamento/pagamentos/\".concat(pagamentoId,\"/\"),data);};export const faturamentoService={// Procedimentos\ngetProcedimentos,updateProcedimento,definirPrecoConvenio,getPlanosConvenio,uploadTuss,// Pagamentos\ngetPagamentosPendentes,getCobrancasPendentes,updatePagamento,// Despesas\ngetDespesas,getCategoriasDespesa,createDespesa,createLancamentoAvulso,// Relatórios\ngetRelatorioFinanceiro,// Faturamento\ngetConvenios,getAgendamentosFaturaveis,gerarLoteFaturamento,getDashboardFinanceiro// <-- ADICIONE AQUI\n};","map":{"version":3,"names":["apiClient","getProcedimentos","get","updateProcedimento","id","data","put","concat","definirPrecoConvenio","procedimentoId","post","getPlanosConvenio","uploadTuss","formData","headers","getPagamentosPendentes","getDespesas","getCategoriasDespesa","createDespesa","createLancamentoAvulso","getRelatorioFinanceiro","getConvenios","getAgendamentosFaturaveis","params","gerarLoteFaturamento","responseType","getDashboardFinanceiro","getCobrancasPendentes","pacienteId","updatePagamento","pagamentoId","patch","faturamentoService"],"sources":["/Users/macmini/Documents/Sistema_Consultorio/frontend/src/services/faturamentoService.js"],"sourcesContent":["// src/services/faturamentoService.js - VERSÃO COMPLETA E ATUALIZADA\n\nimport apiClient from '../api/axiosConfig';\n\n// --- Funções para Procedimentos e Preços (já existentes) ---\nconst getProcedimentos = () => apiClient.get('/faturamento/procedimentos/');\nconst updateProcedimento = (id, data) => apiClient.put(`/faturamento/procedimentos/${id}/`, data);\nconst definirPrecoConvenio = (procedimentoId, data) => apiClient.post(`/faturamento/procedimentos/${procedimentoId}/definir-preco-convenio/`, data);\nconst getPlanosConvenio = () => apiClient.get('/faturamento/planos/');\nconst uploadTuss = (formData) => {\n    // O segundo argumento é o 'data', que é o nosso FormData com o arquivo.\n    // O terceiro argumento são as 'options', onde definimos o cabeçalho correto para upload de arquivos.\n    return apiClient.post('/faturamento/procedimentos/upload-tuss/', formData, {\n        headers: {\n            'Content-Type': 'multipart/form-data',\n        },\n    });\n};\n// --- Funções para Pagamentos Pendentes ---\nconst getPagamentosPendentes = () => apiClient.get('/faturamento/pagamentos-pendentes/');\n\n// --- Funções para Despesas ---\nconst getDespesas = () => apiClient.get('/faturamento/despesas/');\nconst getCategoriasDespesa = () => apiClient.get('/faturamento/categorias-despesa/');\nconst createDespesa = (data) => apiClient.post('/faturamento/despesas/', data);\n// Para o formulário de Lançamento Avulso\nconst createLancamentoAvulso = (data) => {\n    return apiClient.post('/faturamento/lancamento-avulso/', data);\n};\n\n// --- Funções para Relatórios ---\nconst getRelatorioFinanceiro = () => apiClient.get('/faturamento/relatorios/financeiro/');\n\n// --- Funções para Faturamento de Convênios ---\nconst getConvenios = () => apiClient.get('/faturamento/convenios/');\nconst getAgendamentosFaturaveis = (params) => apiClient.get('/faturamento/agendamentos-faturaveis/', { params });\nconst gerarLoteFaturamento = (data) => apiClient.post('/faturamento/gerar-lote/', data, { responseType: 'blob' });\n// --- NOVA FUNÇÃO PARA O DASHBOARD ---\nconst getDashboardFinanceiro = () => apiClient.get('/faturamento/dashboard-financeiro/');\n// Busca as cobranças pendentes para um paciente específico\nconst getCobrancasPendentes = (pacienteId) => {\n    return apiClient.get(`/faturamento/pacientes/${pacienteId}/cobrancas-pendentes/`);\n};\n\n// Atualiza um pagamento (ex: para marcar como 'Pago')\nconst updatePagamento = (pagamentoId, data) => {\n    // Usamos PATCH para uma atualização parcial (apenas o status e forma de pagamento)\n    return apiClient.patch(`/faturamento/pagamentos/${pagamentoId}/`, data);\n};\n\n\nexport const faturamentoService = {\n    // Procedimentos\n    getProcedimentos,\n    updateProcedimento,\n    definirPrecoConvenio,\n    getPlanosConvenio,\n    uploadTuss,\n    // Pagamentos\n    getPagamentosPendentes,\n    getCobrancasPendentes,\n    updatePagamento,\n    // Despesas\n    getDespesas,\n    getCategoriasDespesa,\n    createDespesa,\n    createLancamentoAvulso,\n    // Relatórios\n    getRelatorioFinanceiro,\n    // Faturamento\n    getConvenios,\n    getAgendamentosFaturaveis,\n    gerarLoteFaturamento,\n    getDashboardFinanceiro, // <-- ADICIONE AQUI\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}